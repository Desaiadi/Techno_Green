

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Sep 30 17:32:00 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.40
    40                           ; Generated 17/11/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194                           
   195                           	psect	idataBANK0
   196  005C                     __pidataBANK0:
   197                           
   198                           ;initializer for _year
   199  005C  3412               	retlw	18
   200  005D  3400               	retlw	0
   201                           
   202                           ;initializer for _month
   203  005E  3405               	retlw	5
   204  005F  3400               	retlw	0
   205                           
   206                           ;initializer for _date
   207  0060  3406               	retlw	6
   208  0061  3400               	retlw	0
   209                           
   210                           ;initializer for _hour
   211  0062  340A               	retlw	10
   212  0063  3400               	retlw	0
   213                           
   214                           ;initializer for _min
   215  0064  3437               	retlw	55
   216  0065  3400               	retlw	0
   217  0013                     _SSPBUF	set	19
   218  0014                     _SSPCON	set	20
   219  0043                     _RD3	set	67
   220  0042                     _RD2	set	66
   221  0047                     _RD7	set	71
   222  0046                     _RD6	set	70
   223  0045                     _RD5	set	69
   224  0044                     _RD4	set	68
   225  0088                     _TRISD	set	136
   226  0094                     _SSPSTAT	set	148
   227  0093                     _SSPADD	set	147
   228  0091                     _SSPCON2	set	145
   229  048C                     _ACKEN	set	1164
   230  048D                     _ACKDT	set	1165
   231  048B                     _RCEN	set	1163
   232  048A                     _PEN	set	1162
   233  0488                     _SEN	set	1160
   234  043C                     _TRISC4	set	1084
   235  043B                     _TRISC3	set	1083
   236                           
   237                           	psect	strings
   238  0003                     __pstrings:
   239  0003                     stringtab:
   240  0003                     __stringtab:
   241  0003                     stringcode:	
   242                           ;	String table - string pointers are 1 byte each
   243                           
   244  0003                     stringdir:
   245  0003  3000               	movlw	high stringdir
   246  0004  008A               	movwf	10
   247  0005  0804               	movf	4,w
   248  0006  0A84               	incf	4,f
   249  0007  0782               	addwf	2,f
   250  0008                     __stringbase:
   251  0008  3400               	retlw	0
   252  0009                     __end_of__stringtab:
   253  0009                     STR_2:
   254  0009  3420               	retlw	32	;' '
   255  000A  342D               	retlw	45	;'-'
   256  000B  3443               	retlw	67	;'C'
   257  000C  3469               	retlw	105	;'i'
   258  000D  3472               	retlw	114	;'r'
   259  000E  3463               	retlw	99	;'c'
   260  000F  3475               	retlw	117	;'u'
   261  0010  3469               	retlw	105	;'i'
   262  0011  3474               	retlw	116	;'t'
   263  0012  3420               	retlw	32	;' '
   264  0013  3444               	retlw	68	;'D'
   265  0014  3469               	retlw	105	;'i'
   266  0015  3467               	retlw	103	;'g'
   267  0016  3465               	retlw	101	;'e'
   268  0017  3473               	retlw	115	;'s'
   269  0018  3474               	retlw	116	;'t'
   270  0019  3400               	retlw	0
   271  001A                     STR_1:
   272  001A  3420               	retlw	32	;' '
   273  001B  3420               	retlw	32	;' '
   274  001C  3452               	retlw	82	;'R'
   275  001D  3454               	retlw	84	;'T'
   276  001E  3443               	retlw	67	;'C'
   277  001F  3420               	retlw	32	;' '
   278  0020  3477               	retlw	119	;'w'
   279  0021  3469               	retlw	105	;'i'
   280  0022  3474               	retlw	116	;'t'
   281  0023  3468               	retlw	104	;'h'
   282  0024  3420               	retlw	32	;' '
   283  0025  3450               	retlw	80	;'P'
   284  0026  3449               	retlw	73	;'I'
   285  0027  3443               	retlw	67	;'C'
   286  0028  3400               	retlw	0
   287  0029                     STR_3:
   288  0029  3454               	retlw	84	;'T'
   289  002A  3449               	retlw	73	;'I'
   290  002B  344D               	retlw	77	;'M'
   291  002C  3445               	retlw	69	;'E'
   292  002D  343A               	retlw	58	;':'
   293  002E  3420               	retlw	32	;' '
   294  002F  3400               	retlw	0
   295  0030                     STR_4:
   296  0030  3444               	retlw	68	;'D'
   297  0031  3441               	retlw	65	;'A'
   298  0032  3454               	retlw	84	;'T'
   299  0033  3445               	retlw	69	;'E'
   300  0034  343A               	retlw	58	;':'
   301  0035  3420               	retlw	32	;' '
   302  0036  3400               	retlw	0
   303                           
   304                           	psect	cinit
   305  07EC                     start_initialization:	
   306                           ; #config settings
   307                           
   308  07EC                     __initialization:
   309                           
   310                           ; Initialize objects allocated to BANK0
   311  07EC  1383               	bcf	3,7	;select IRP bank0
   312  07ED  304E               	movlw	low (__pdataBANK0+10)
   313  07EE  00FD               	movwf	btemp+-1
   314  07EF  3000               	movlw	high __pidataBANK0
   315  07F0  00FE               	movwf	btemp
   316  07F1  305C               	movlw	low __pidataBANK0
   317  07F2  00FF               	movwf	btemp+1
   318  07F3  3044               	movlw	low __pdataBANK0
   319  07F4  0084               	movwf	4
   320  07F5  120A  118A  2084  120A  118A  	fcall	init_ram0
   321                           
   322                           ; Clear objects allocated to BANK0
   323  07FA  01CE               	clrf	__pbssBANK0& (0+127)
   324  07FB  01CF               	clrf	(__pbssBANK0+1)& (0+127)
   325  07FC                     end_of_initialization:	
   326                           ;End of C runtime variable initialization code
   327                           
   328  07FC                     __end_of__initialization:
   329  07FC  0183               	clrf	3
   330  07FD  120A  118A  2DFD   	ljmp	_main	;jump to C main() function
   331                           
   332                           	psect	bssBANK0
   333  004E                     __pbssBANK0:
   334  004E                     _sec:
   335  004E                     	ds	2
   336                           
   337                           	psect	dataBANK0
   338  0044                     __pdataBANK0:
   339  0044                     _year:
   340  0044                     	ds	2
   341  0046                     _month:
   342  0046                     	ds	2
   343  0048                     _date:
   344  0048                     	ds	2
   345  004A                     _hour:
   346  004A                     	ds	2
   347  004C                     _min:
   348  004C                     	ds	2
   349                           
   350                           	psect	inittext
   351  0080                     init_fetch0:	
   352                           ;	Called with low address in FSR and high address in W
   353                           
   354  0080  087E               	movf	btemp,w
   355  0081  008A               	movwf	10
   356  0082  087F               	movf	btemp+1,w
   357  0083  0082               	movwf	2
   358  0084                     init_ram0:	
   359                           ;Called with:
   360                           ;	high address of idata address in btemp 
   361                           ;	low address of idata address in btemp+1 
   362                           ;	low address of data in FSR
   363                           ;	high address + 1 of data in btemp-1
   364                           
   365  0084  120A  118A  2080  120A  118A  	fcall	init_fetch0
   366  0089  0080               	movwf	0
   367  008A  0A84               	incf	4,f
   368  008B  0804               	movf	4,w
   369  008C  067D               	xorwf	btemp+-1,w
   370  008D  1903               	btfsc	3,2
   371  008E  3400               	retlw	0
   372  008F  0AFF               	incf	btemp+1,f
   373  0090  1903               	btfsc	3,2
   374  0091  0AFE               	incf	btemp,f
   375  0092  2884               	goto	init_ram0
   376                           
   377                           	psect	cstackCOMMON
   378  0070                     __pcstackCOMMON:
   379  0070                     ?_Lcd_SetBit:
   380  0070                     ??_Lcd_SetBit:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_Lcd_Cmd:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_Lcd_Start:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_Lcd_Print_Char:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_Lcd_Print_String:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_I2C_Hold:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ??_I2C_Hold:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_I2C_Begin:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ??_I2C_Begin:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_I2C_End:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ??_I2C_End:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_Set_Time_Date:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_Update_Current_Date_Time:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_Lcd_Clear:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_I2C_Read:	
   423                           ; 2 bytes @ 0x0
   424                           
   425  0070                     ?_main:	
   426                           ; 2 bytes @ 0x0
   427                           
   428  0070                     ?___wmul:	
   429                           ; 2 bytes @ 0x0
   430                           
   431  0070                     ?___awdiv:	
   432                           ; 2 bytes @ 0x0
   433                           
   434  0070                     ?___awmod:	
   435                           ; 2 bytes @ 0x0
   436                           
   437  0070                     ?___lmul:	
   438                           ; 2 bytes @ 0x0
   439                           
   440  0070                     Lcd_SetBit@data_bit:	
   441                           ; 4 bytes @ 0x0
   442                           
   443  0070                     I2C_Read@ack:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ___wmul@multiplier:	
   447                           ; 2 bytes @ 0x0
   448                           
   449  0070                     ___awdiv@divisor:	
   450                           ; 2 bytes @ 0x0
   451                           
   452  0070                     ___awmod@divisor:	
   453                           ; 2 bytes @ 0x0
   454                           
   455  0070                     ___lmul@multiplier:	
   456                           ; 2 bytes @ 0x0
   457                           
   458                           
   459                           ; 4 bytes @ 0x0
   460  0070                     	ds	1
   461  0071                     ??_Lcd_Cmd:
   462  0071                     ??_Lcd_Print_Char:	
   463                           ; 1 bytes @ 0x1
   464                           
   465                           
   466                           ; 1 bytes @ 0x1
   467  0071                     	ds	1
   468  0072                     ??_I2C_Read:
   469  0072                     Lcd_Print_Char@Lower_Nibble:	
   470                           ; 1 bytes @ 0x2
   471                           
   472  0072                     ___wmul@multiplicand:	
   473                           ; 1 bytes @ 0x2
   474                           
   475  0072                     ___awdiv@dividend:	
   476                           ; 2 bytes @ 0x2
   477                           
   478  0072                     ___awmod@dividend:	
   479                           ; 2 bytes @ 0x2
   480                           
   481                           
   482                           ; 2 bytes @ 0x2
   483  0072                     	ds	1
   484  0073                     Lcd_Cmd@a:
   485  0073                     Lcd_Print_Char@Upper_Nibble:	
   486                           ; 1 bytes @ 0x3
   487                           
   488                           
   489                           ; 1 bytes @ 0x3
   490  0073                     	ds	1
   491  0074                     ??_Lcd_Clear:
   492  0074                     ?_Lcd_Set_Cursor:	
   493                           ; 1 bytes @ 0x4
   494                           
   495  0074                     ??_Lcd_Start:	
   496                           ; 1 bytes @ 0x4
   497                           
   498  0074                     ??___wmul:	
   499                           ; 1 bytes @ 0x4
   500                           
   501  0074                     ??___awdiv:	
   502                           ; 1 bytes @ 0x4
   503                           
   504  0074                     ??___awmod:	
   505                           ; 1 bytes @ 0x4
   506                           
   507  0074                     Lcd_Set_Cursor@b:	
   508                           ; 1 bytes @ 0x4
   509                           
   510  0074                     Lcd_Print_Char@data:	
   511                           ; 1 bytes @ 0x4
   512                           
   513  0074                     I2C_Read@incoming:	
   514                           ; 1 bytes @ 0x4
   515                           
   516  0074                     ___wmul@product:	
   517                           ; 2 bytes @ 0x4
   518                           
   519  0074                     ___lmul@multiplicand:	
   520                           ; 2 bytes @ 0x4
   521                           
   522                           
   523                           ; 4 bytes @ 0x4
   524  0074                     	ds	1
   525  0075                     ??_Lcd_Set_Cursor:
   526  0075                     ___awdiv@counter:	
   527                           ; 1 bytes @ 0x5
   528                           
   529  0075                     ___awmod@counter:	
   530                           ; 1 bytes @ 0x5
   531                           
   532  0075                     Lcd_Print_Char@i:	
   533                           ; 1 bytes @ 0x5
   534                           
   535                           
   536                           ; 2 bytes @ 0x5
   537  0075                     	ds	1
   538  0076                     ?_BCD_2_DEC:
   539  0076                     ___awdiv@sign:	
   540                           ; 2 bytes @ 0x6
   541                           
   542  0076                     ___awmod@sign:	
   543                           ; 1 bytes @ 0x6
   544                           
   545  0076                     BCD_2_DEC@to_convert:	
   546                           ; 1 bytes @ 0x6
   547                           
   548                           
   549                           ; 2 bytes @ 0x6
   550  0076                     	ds	1
   551  0077                     Lcd_Set_Cursor@a:
   552  0077                     Lcd_Print_Char@i_77:	
   553                           ; 1 bytes @ 0x7
   554                           
   555  0077                     ___awdiv@quotient:	
   556                           ; 2 bytes @ 0x7
   557                           
   558                           
   559                           ; 2 bytes @ 0x7
   560  0077                     	ds	1
   561  0078                     ??_BCD_2_DEC:
   562  0078                     ??___lmul:	
   563                           ; 1 bytes @ 0x8
   564                           
   565  0078                     Lcd_Set_Cursor@z:	
   566                           ; 1 bytes @ 0x8
   567                           
   568                           
   569                           ; 1 bytes @ 0x8
   570  0078                     	ds	1
   571  0079                     ??_Lcd_Print_String:
   572  0079                     ?_DEC_2_BCD:	
   573                           ; 1 bytes @ 0x9
   574                           
   575  0079                     Lcd_Set_Cursor@y:	
   576                           ; 2 bytes @ 0x9
   577                           
   578  0079                     Lcd_Print_String@i:	
   579                           ; 1 bytes @ 0x9
   580                           
   581  0079                     DEC_2_BCD@to_convert:	
   582                           ; 2 bytes @ 0x9
   583                           
   584  0079                     ___lmul@product:	
   585                           ; 2 bytes @ 0x9
   586                           
   587                           
   588                           ; 4 bytes @ 0x9
   589  0079                     	ds	1
   590  007A                     Lcd_Set_Cursor@temp:
   591                           
   592                           ; 1 bytes @ 0xA
   593  007A                     	ds	1
   594  007B                     ??_DEC_2_BCD:
   595  007B                     Lcd_Print_String@a:	
   596                           ; 1 bytes @ 0xB
   597                           
   598                           
   599                           ; 1 bytes @ 0xB
   600  007B                     	ds	2
   601  007D                     ??_I2C_Write:
   602  007D                     ??_Set_Time_Date:	
   603                           ; 1 bytes @ 0xD
   604                           
   605  007D                     ??_Update_Current_Date_Time:	
   606                           ; 1 bytes @ 0xD
   607                           
   608  007D                     ??___lldiv:	
   609                           ; 1 bytes @ 0xD
   610                           
   611                           
   612                           ; 1 bytes @ 0xD
   613  007D                     	ds	1
   614                           
   615                           	psect	cstackBANK0
   616  0020                     __pcstackBANK0:
   617  0020                     ?_I2C_Write:
   618  0020                     ?___lldiv:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0020                     I2C_Write@data:	
   622                           ; 4 bytes @ 0x0
   623                           
   624  0020                     ___lldiv@divisor:	
   625                           ; 2 bytes @ 0x0
   626                           
   627                           
   628                           ; 4 bytes @ 0x0
   629  0020                     	ds	4
   630  0024                     ___lldiv@dividend:
   631                           
   632                           ; 4 bytes @ 0x4
   633  0024                     	ds	4
   634  0028                     ___lldiv@quotient:
   635                           
   636                           ; 4 bytes @ 0x8
   637  0028                     	ds	4
   638  002C                     ___lldiv@counter:
   639                           
   640                           ; 1 bytes @ 0xC
   641  002C                     	ds	1
   642  002D                     ?_I2C_Initialize:
   643  002D                     I2C_Initialize@feq_K:	
   644                           ; 1 bytes @ 0xD
   645                           
   646                           
   647                           ; 4 bytes @ 0xD
   648  002D                     	ds	4
   649  0031                     ??_I2C_Initialize:
   650                           
   651                           ; 1 bytes @ 0x11
   652  0031                     	ds	4
   653  0035                     ??_main:
   654                           
   655                           ; 1 bytes @ 0x15
   656  0035                     	ds	3
   657  0038                     main@sec_0:
   658                           
   659                           ; 1 bytes @ 0x18
   660  0038                     	ds	1
   661  0039                     main@sec_1:
   662                           
   663                           ; 1 bytes @ 0x19
   664  0039                     	ds	1
   665  003A                     main@min_0:
   666                           
   667                           ; 1 bytes @ 0x1A
   668  003A                     	ds	1
   669  003B                     main@min_1:
   670                           
   671                           ; 1 bytes @ 0x1B
   672  003B                     	ds	1
   673  003C                     main@hour_0:
   674                           
   675                           ; 1 bytes @ 0x1C
   676  003C                     	ds	1
   677  003D                     main@hour_1:
   678                           
   679                           ; 1 bytes @ 0x1D
   680  003D                     	ds	1
   681  003E                     main@date_0:
   682                           
   683                           ; 1 bytes @ 0x1E
   684  003E                     	ds	1
   685  003F                     main@date_1:
   686                           
   687                           ; 1 bytes @ 0x1F
   688  003F                     	ds	1
   689  0040                     main@month_0:
   690                           
   691                           ; 1 bytes @ 0x20
   692  0040                     	ds	1
   693  0041                     main@month_1:
   694                           
   695                           ; 1 bytes @ 0x21
   696  0041                     	ds	1
   697  0042                     main@year_0:
   698                           
   699                           ; 1 bytes @ 0x22
   700  0042                     	ds	1
   701  0043                     main@year_1:
   702                           
   703                           ; 1 bytes @ 0x23
   704  0043                     	ds	1
   705                           
   706                           	psect	maintext
   707  05FD                     __pmaintext:	
   708 ;;
   709 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   710 ;;
   711 ;; *************** function _main *****************
   712 ;; Defined at:
   713 ;;		line 37 in file "RTC_with_PIC_main.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  year_1          1   35[BANK0 ] unsigned char 
   718 ;;  year_0          1   34[BANK0 ] unsigned char 
   719 ;;  month_1         1   33[BANK0 ] unsigned char 
   720 ;;  month_0         1   32[BANK0 ] unsigned char 
   721 ;;  date_1          1   31[BANK0 ] unsigned char 
   722 ;;  date_0          1   30[BANK0 ] unsigned char 
   723 ;;  hour_1          1   29[BANK0 ] unsigned char 
   724 ;;  hour_0          1   28[BANK0 ] unsigned char 
   725 ;;  min_1           1   27[BANK0 ] unsigned char 
   726 ;;  min_0           1   26[BANK0 ] unsigned char 
   727 ;;  sec_1           1   25[BANK0 ] unsigned char 
   728 ;;  sec_0           1   24[BANK0 ] unsigned char 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  2  132[None  ] int 
   731 ;; Registers used:
   732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : B00/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   738 ;;      Params:         0       0       0       0       0
   739 ;;      Locals:         0      12       0       0       0
   740 ;;      Temps:          0       3       0       0       0
   741 ;;      Totals:         0      15       0       0       0
   742 ;;Total ram usage:       15 bytes
   743 ;; Hardware stack levels required when called: 3
   744 ;; This function calls:
   745 ;;		_I2C_Initialize
   746 ;;		_Lcd_Clear
   747 ;;		_Lcd_Print_Char
   748 ;;		_Lcd_Print_String
   749 ;;		_Lcd_Set_Cursor
   750 ;;		_Lcd_Start
   751 ;;		_Set_Time_Date
   752 ;;		_Update_Current_Date_Time
   753 ;;		___awdiv
   754 ;;		___awmod
   755 ;; This function is called by:
   756 ;;		Startup code after reset
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760  05FD                     _main:	
   761                           ;psect for function _main
   762                           
   763  05FD                     l1430:	
   764                           ;incstack = 0
   765                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   766                           
   767                           
   768                           ;RTC_with_PIC_main.c: 40:     TRISD = 0x00;
   769  05FD  1683               	bsf	3,5	;RP0=1, select bank1
   770  05FE  1303               	bcf	3,6	;RP1=0, select bank1
   771  05FF  0188               	clrf	8	;volatile
   772  0600                     l1432:
   773                           
   774                           ;RTC_with_PIC_main.c: 42:     Lcd_Start();
   775  0600  120A  118A  2286  120A  118A  	fcall	_Lcd_Start
   776  0605                     l1434:
   777                           
   778                           ;RTC_with_PIC_main.c: 44:     I2C_Initialize(100);
   779  0605  3000               	movlw	0
   780  0606  1283               	bcf	3,5	;RP0=0, select bank0
   781  0607  1303               	bcf	3,6	;RP1=0, select bank0
   782  0608  00B0               	movwf	I2C_Initialize@feq_K+3
   783  0609  3000               	movlw	0
   784  060A  00AF               	movwf	I2C_Initialize@feq_K+2
   785  060B  3000               	movlw	0
   786  060C  00AE               	movwf	I2C_Initialize@feq_K+1
   787  060D  3064               	movlw	100
   788  060E  00AD               	movwf	I2C_Initialize@feq_K
   789  060F  120A  118A  2233  120A  118A  	fcall	_I2C_Initialize
   790  0614                     l1436:
   791                           
   792                           ;RTC_with_PIC_main.c: 46:     Set_Time_Date();
   793  0614  120A  118A  2462  120A  118A  	fcall	_Set_Time_Date
   794  0619                     l1438:
   795                           
   796                           ;RTC_with_PIC_main.c: 49:      Lcd_Clear();
   797  0619  120A  118A  2066  120A  118A  	fcall	_Lcd_Clear
   798  061E                     l1440:
   799                           
   800                           ;RTC_with_PIC_main.c: 50:      Lcd_Set_Cursor(1,1);
   801  061E  01F4               	clrf	Lcd_Set_Cursor@b
   802  061F  0AF4               	incf	Lcd_Set_Cursor@b,f
   803  0620  3001               	movlw	1
   804  0621  120A  118A  21E1  120A  118A  	fcall	_Lcd_Set_Cursor
   805  0626                     l1442:
   806                           
   807                           ;RTC_with_PIC_main.c: 51:      Lcd_Print_String("  RTC with PIC");
   808  0626  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   809  0627  120A  118A  20CF  120A  118A  	fcall	_Lcd_Print_String
   810  062C                     l1444:
   811                           
   812                           ;RTC_with_PIC_main.c: 52:      Lcd_Set_Cursor(2,1);
   813  062C  01F4               	clrf	Lcd_Set_Cursor@b
   814  062D  0AF4               	incf	Lcd_Set_Cursor@b,f
   815  062E  3002               	movlw	2
   816  062F  120A  118A  21E1  120A  118A  	fcall	_Lcd_Set_Cursor
   817  0634                     l1446:
   818                           
   819                           ;RTC_with_PIC_main.c: 53:      Lcd_Print_String(" -Circuit Digest");
   820  0634  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   821  0635  120A  118A  20CF  120A  118A  	fcall	_Lcd_Print_String
   822  063A                     l1448:
   823                           
   824                           ;RTC_with_PIC_main.c: 54:      _delay((unsigned long)((1500)*(20000000/4000.0)));
   825  063A  3027               	movlw	39
   826  063B  1283               	bcf	3,5	;RP0=0, select bank0
   827  063C  1303               	bcf	3,6	;RP1=0, select bank0
   828  063D  00B7               	movwf	??_main+2
   829  063E  300D               	movlw	13
   830  063F  00B6               	movwf	??_main+1
   831  0640  3025               	movlw	37
   832  0641  00B5               	movwf	??_main
   833  0642                     u1057:
   834  0642  0BB5               	decfsz	??_main,f
   835  0643  2E42               	goto	u1057
   836  0644  0BB6               	decfsz	??_main+1,f
   837  0645  2E42               	goto	u1057
   838  0646  0BB7               	decfsz	??_main+2,f
   839  0647  2E42               	goto	u1057
   840  0648  2E49               	nop2
   841  0649                     l1450:
   842                           
   843                           ;RTC_with_PIC_main.c: 57:   {;RTC_with_PIC_main.c: 59:     Update_Current_Date_Time();
   844  0649  120A  118A  2511  120A  118A  	fcall	_Update_Current_Date_Time
   845  064E                     l1452:
   846                           
   847                           ;RTC_with_PIC_main.c: 62:      char sec_0 = sec%10;
   848  064E  300A               	movlw	10
   849  064F  00F0               	movwf	___awmod@divisor
   850  0650  3000               	movlw	0
   851  0651  00F1               	movwf	___awmod@divisor+1
   852  0652  1283               	bcf	3,5	;RP0=0, select bank0
   853  0653  1303               	bcf	3,6	;RP1=0, select bank0
   854  0654  084F               	movf	_sec+1,w
   855  0655  00F3               	movwf	___awmod@dividend+1
   856  0656  084E               	movf	_sec,w
   857  0657  00F2               	movwf	___awmod@dividend
   858  0658  120A  118A  22DB  120A  118A  	fcall	___awmod
   859  065D  0870               	movf	?___awmod,w
   860  065E  1283               	bcf	3,5	;RP0=0, select bank0
   861  065F  1303               	bcf	3,6	;RP1=0, select bank0
   862  0660  00B5               	movwf	??_main
   863  0661  0835               	movf	??_main,w
   864  0662  00B8               	movwf	main@sec_0
   865  0663                     l1454:
   866                           
   867                           ;RTC_with_PIC_main.c: 63:      char sec_1 = (sec/10);
   868  0663  300A               	movlw	10
   869  0664  00F0               	movwf	___awdiv@divisor
   870  0665  3000               	movlw	0
   871  0666  00F1               	movwf	___awdiv@divisor+1
   872  0667  084F               	movf	_sec+1,w
   873  0668  00F3               	movwf	___awdiv@dividend+1
   874  0669  084E               	movf	_sec,w
   875  066A  00F2               	movwf	___awdiv@dividend
   876  066B  120A  118A  2393  120A  118A  	fcall	___awdiv
   877  0670  0870               	movf	?___awdiv,w
   878  0671  1283               	bcf	3,5	;RP0=0, select bank0
   879  0672  1303               	bcf	3,6	;RP1=0, select bank0
   880  0673  00B5               	movwf	??_main
   881  0674  0835               	movf	??_main,w
   882  0675  00B9               	movwf	main@sec_1
   883  0676                     l1456:
   884                           
   885                           ;RTC_with_PIC_main.c: 64:      char min_0 = min%10;
   886  0676  300A               	movlw	10
   887  0677  00F0               	movwf	___awmod@divisor
   888  0678  3000               	movlw	0
   889  0679  00F1               	movwf	___awmod@divisor+1
   890  067A  084D               	movf	_min+1,w
   891  067B  00F3               	movwf	___awmod@dividend+1
   892  067C  084C               	movf	_min,w
   893  067D  00F2               	movwf	___awmod@dividend
   894  067E  120A  118A  22DB  120A  118A  	fcall	___awmod
   895  0683  0870               	movf	?___awmod,w
   896  0684  1283               	bcf	3,5	;RP0=0, select bank0
   897  0685  1303               	bcf	3,6	;RP1=0, select bank0
   898  0686  00B5               	movwf	??_main
   899  0687  0835               	movf	??_main,w
   900  0688  00BA               	movwf	main@min_0
   901  0689                     l1458:
   902                           
   903                           ;RTC_with_PIC_main.c: 65:      char min_1 = min/10;
   904  0689  300A               	movlw	10
   905  068A  00F0               	movwf	___awdiv@divisor
   906  068B  3000               	movlw	0
   907  068C  00F1               	movwf	___awdiv@divisor+1
   908  068D  084D               	movf	_min+1,w
   909  068E  00F3               	movwf	___awdiv@dividend+1
   910  068F  084C               	movf	_min,w
   911  0690  00F2               	movwf	___awdiv@dividend
   912  0691  120A  118A  2393  120A  118A  	fcall	___awdiv
   913  0696  0870               	movf	?___awdiv,w
   914  0697  1283               	bcf	3,5	;RP0=0, select bank0
   915  0698  1303               	bcf	3,6	;RP1=0, select bank0
   916  0699  00B5               	movwf	??_main
   917  069A  0835               	movf	??_main,w
   918  069B  00BB               	movwf	main@min_1
   919  069C                     l1460:
   920                           
   921                           ;RTC_with_PIC_main.c: 66:      char hour_0 = hour%10;
   922  069C  300A               	movlw	10
   923  069D  00F0               	movwf	___awmod@divisor
   924  069E  3000               	movlw	0
   925  069F  00F1               	movwf	___awmod@divisor+1
   926  06A0  084B               	movf	_hour+1,w
   927  06A1  00F3               	movwf	___awmod@dividend+1
   928  06A2  084A               	movf	_hour,w
   929  06A3  00F2               	movwf	___awmod@dividend
   930  06A4  120A  118A  22DB  120A  118A  	fcall	___awmod
   931  06A9  0870               	movf	?___awmod,w
   932  06AA  1283               	bcf	3,5	;RP0=0, select bank0
   933  06AB  1303               	bcf	3,6	;RP1=0, select bank0
   934  06AC  00B5               	movwf	??_main
   935  06AD  0835               	movf	??_main,w
   936  06AE  00BC               	movwf	main@hour_0
   937  06AF                     l1462:
   938                           
   939                           ;RTC_with_PIC_main.c: 67:      char hour_1 = hour/10;
   940  06AF  300A               	movlw	10
   941  06B0  00F0               	movwf	___awdiv@divisor
   942  06B1  3000               	movlw	0
   943  06B2  00F1               	movwf	___awdiv@divisor+1
   944  06B3  084B               	movf	_hour+1,w
   945  06B4  00F3               	movwf	___awdiv@dividend+1
   946  06B5  084A               	movf	_hour,w
   947  06B6  00F2               	movwf	___awdiv@dividend
   948  06B7  120A  118A  2393  120A  118A  	fcall	___awdiv
   949  06BC  0870               	movf	?___awdiv,w
   950  06BD  1283               	bcf	3,5	;RP0=0, select bank0
   951  06BE  1303               	bcf	3,6	;RP1=0, select bank0
   952  06BF  00B5               	movwf	??_main
   953  06C0  0835               	movf	??_main,w
   954  06C1  00BD               	movwf	main@hour_1
   955  06C2                     l1464:
   956                           
   957                           ;RTC_with_PIC_main.c: 68:      char date_0 = date%10;
   958  06C2  300A               	movlw	10
   959  06C3  00F0               	movwf	___awmod@divisor
   960  06C4  3000               	movlw	0
   961  06C5  00F1               	movwf	___awmod@divisor+1
   962  06C6  0849               	movf	_date+1,w
   963  06C7  00F3               	movwf	___awmod@dividend+1
   964  06C8  0848               	movf	_date,w
   965  06C9  00F2               	movwf	___awmod@dividend
   966  06CA  120A  118A  22DB  120A  118A  	fcall	___awmod
   967  06CF  0870               	movf	?___awmod,w
   968  06D0  1283               	bcf	3,5	;RP0=0, select bank0
   969  06D1  1303               	bcf	3,6	;RP1=0, select bank0
   970  06D2  00B5               	movwf	??_main
   971  06D3  0835               	movf	??_main,w
   972  06D4  00BE               	movwf	main@date_0
   973  06D5                     l1466:
   974                           
   975                           ;RTC_with_PIC_main.c: 69:      char date_1 = date/10;
   976  06D5  300A               	movlw	10
   977  06D6  00F0               	movwf	___awdiv@divisor
   978  06D7  3000               	movlw	0
   979  06D8  00F1               	movwf	___awdiv@divisor+1
   980  06D9  0849               	movf	_date+1,w
   981  06DA  00F3               	movwf	___awdiv@dividend+1
   982  06DB  0848               	movf	_date,w
   983  06DC  00F2               	movwf	___awdiv@dividend
   984  06DD  120A  118A  2393  120A  118A  	fcall	___awdiv
   985  06E2  0870               	movf	?___awdiv,w
   986  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   987  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   988  06E5  00B5               	movwf	??_main
   989  06E6  0835               	movf	??_main,w
   990  06E7  00BF               	movwf	main@date_1
   991  06E8                     l1468:
   992                           
   993                           ;RTC_with_PIC_main.c: 70:      char month_0 = month%10;
   994  06E8  300A               	movlw	10
   995  06E9  00F0               	movwf	___awmod@divisor
   996  06EA  3000               	movlw	0
   997  06EB  00F1               	movwf	___awmod@divisor+1
   998  06EC  0847               	movf	_month+1,w
   999  06ED  00F3               	movwf	___awmod@dividend+1
  1000  06EE  0846               	movf	_month,w
  1001  06EF  00F2               	movwf	___awmod@dividend
  1002  06F0  120A  118A  22DB  120A  118A  	fcall	___awmod
  1003  06F5  0870               	movf	?___awmod,w
  1004  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1005  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1006  06F8  00B5               	movwf	??_main
  1007  06F9  0835               	movf	??_main,w
  1008  06FA  00C0               	movwf	main@month_0
  1009  06FB                     l1470:
  1010                           
  1011                           ;RTC_with_PIC_main.c: 71:      char month_1 = month/10;
  1012  06FB  300A               	movlw	10
  1013  06FC  00F0               	movwf	___awdiv@divisor
  1014  06FD  3000               	movlw	0
  1015  06FE  00F1               	movwf	___awdiv@divisor+1
  1016  06FF  0847               	movf	_month+1,w
  1017  0700  00F3               	movwf	___awdiv@dividend+1
  1018  0701  0846               	movf	_month,w
  1019  0702  00F2               	movwf	___awdiv@dividend
  1020  0703  120A  118A  2393  120A  118A  	fcall	___awdiv
  1021  0708  0870               	movf	?___awdiv,w
  1022  0709  1283               	bcf	3,5	;RP0=0, select bank0
  1023  070A  1303               	bcf	3,6	;RP1=0, select bank0
  1024  070B  00B5               	movwf	??_main
  1025  070C  0835               	movf	??_main,w
  1026  070D  00C1               	movwf	main@month_1
  1027  070E                     l1472:
  1028                           
  1029                           ;RTC_with_PIC_main.c: 72:      char year_0 = year%10;
  1030  070E  300A               	movlw	10
  1031  070F  00F0               	movwf	___awmod@divisor
  1032  0710  3000               	movlw	0
  1033  0711  00F1               	movwf	___awmod@divisor+1
  1034  0712  0845               	movf	_year+1,w
  1035  0713  00F3               	movwf	___awmod@dividend+1
  1036  0714  0844               	movf	_year,w
  1037  0715  00F2               	movwf	___awmod@dividend
  1038  0716  120A  118A  22DB  120A  118A  	fcall	___awmod
  1039  071B  0870               	movf	?___awmod,w
  1040  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1041  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1042  071E  00B5               	movwf	??_main
  1043  071F  0835               	movf	??_main,w
  1044  0720  00C2               	movwf	main@year_0
  1045  0721                     l1474:
  1046                           
  1047                           ;RTC_with_PIC_main.c: 73:      char year_1 = year/10;
  1048  0721  300A               	movlw	10
  1049  0722  00F0               	movwf	___awdiv@divisor
  1050  0723  3000               	movlw	0
  1051  0724  00F1               	movwf	___awdiv@divisor+1
  1052  0725  0845               	movf	_year+1,w
  1053  0726  00F3               	movwf	___awdiv@dividend+1
  1054  0727  0844               	movf	_year,w
  1055  0728  00F2               	movwf	___awdiv@dividend
  1056  0729  120A  118A  2393  120A  118A  	fcall	___awdiv
  1057  072E  0870               	movf	?___awdiv,w
  1058  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1059  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1060  0731  00B5               	movwf	??_main
  1061  0732  0835               	movf	??_main,w
  1062  0733  00C3               	movwf	main@year_1
  1063  0734                     l1476:
  1064                           
  1065                           ;RTC_with_PIC_main.c: 76:         Lcd_Clear();
  1066  0734  120A  118A  2066  120A  118A  	fcall	_Lcd_Clear
  1067  0739                     l1478:
  1068                           
  1069                           ;RTC_with_PIC_main.c: 77:         Lcd_Set_Cursor(1,1);
  1070  0739  01F4               	clrf	Lcd_Set_Cursor@b
  1071  073A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1072  073B  3001               	movlw	1
  1073  073C  120A  118A  21E1  120A  118A  	fcall	_Lcd_Set_Cursor
  1074  0741                     l1480:
  1075                           
  1076                           ;RTC_with_PIC_main.c: 78:         Lcd_Print_String("TIME: ");
  1077  0741  3021               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1078  0742  120A  118A  20CF  120A  118A  	fcall	_Lcd_Print_String
  1079  0747                     l1482:
  1080                           
  1081                           ;RTC_with_PIC_main.c: 79:         Lcd_Print_Char(hour_1+'0');
  1082  0747  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0748  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0749  083D               	movf	main@hour_1,w
  1085  074A  3E30               	addlw	48
  1086  074B  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1087  0750                     l1484:
  1088                           
  1089                           ;RTC_with_PIC_main.c: 80:         Lcd_Print_Char(hour_0+'0');
  1090  0750  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0751  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0752  083C               	movf	main@hour_0,w
  1093  0753  3E30               	addlw	48
  1094  0754  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1095  0759                     l1486:
  1096                           
  1097                           ;RTC_with_PIC_main.c: 81:         Lcd_Print_Char(':');
  1098  0759  303A               	movlw	58
  1099  075A  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1100  075F                     l1488:
  1101                           
  1102                           ;RTC_with_PIC_main.c: 82:         Lcd_Print_Char(min_1+'0');
  1103  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0761  083B               	movf	main@min_1,w
  1106  0762  3E30               	addlw	48
  1107  0763  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1108  0768                     l1490:
  1109                           
  1110                           ;RTC_with_PIC_main.c: 83:         Lcd_Print_Char(min_0+'0');
  1111  0768  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0769  1303               	bcf	3,6	;RP1=0, select bank0
  1113  076A  083A               	movf	main@min_0,w
  1114  076B  3E30               	addlw	48
  1115  076C  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1116  0771                     l1492:
  1117                           
  1118                           ;RTC_with_PIC_main.c: 84:         Lcd_Print_Char(':');
  1119  0771  303A               	movlw	58
  1120  0772  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1121  0777                     l1494:
  1122                           
  1123                           ;RTC_with_PIC_main.c: 85:         Lcd_Print_Char(sec_1+'0');
  1124  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0779  0839               	movf	main@sec_1,w
  1127  077A  3E30               	addlw	48
  1128  077B  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1129  0780                     l1496:
  1130                           
  1131                           ;RTC_with_PIC_main.c: 86:         Lcd_Print_Char(sec_0+'0');
  1132  0780  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0781  1303               	bcf	3,6	;RP1=0, select bank0
  1134  0782  0838               	movf	main@sec_0,w
  1135  0783  3E30               	addlw	48
  1136  0784  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1137  0789                     l1498:
  1138                           
  1139                           ;RTC_with_PIC_main.c: 89:         Lcd_Set_Cursor(2,1);
  1140  0789  01F4               	clrf	Lcd_Set_Cursor@b
  1141  078A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1142  078B  3002               	movlw	2
  1143  078C  120A  118A  21E1  120A  118A  	fcall	_Lcd_Set_Cursor
  1144  0791                     l1500:
  1145                           
  1146                           ;RTC_with_PIC_main.c: 90:         Lcd_Print_String("DATE: ");
  1147  0791  3028               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1148  0792  120A  118A  20CF  120A  118A  	fcall	_Lcd_Print_String
  1149  0797                     l1502:
  1150                           
  1151                           ;RTC_with_PIC_main.c: 91:         Lcd_Print_Char(date_1+'0');
  1152  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0799  083F               	movf	main@date_1,w
  1155  079A  3E30               	addlw	48
  1156  079B  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1157  07A0                     l1504:
  1158                           
  1159                           ;RTC_with_PIC_main.c: 92:         Lcd_Print_Char(date_0+'0');
  1160  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  1161  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  1162  07A2  083E               	movf	main@date_0,w
  1163  07A3  3E30               	addlw	48
  1164  07A4  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1165  07A9                     l1506:
  1166                           
  1167                           ;RTC_with_PIC_main.c: 93:         Lcd_Print_Char(':');
  1168  07A9  303A               	movlw	58
  1169  07AA  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1170  07AF                     l1508:
  1171                           
  1172                           ;RTC_with_PIC_main.c: 94:         Lcd_Print_Char(month_1+'0');
  1173  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1174  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1175  07B1  0841               	movf	main@month_1,w
  1176  07B2  3E30               	addlw	48
  1177  07B3  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1178  07B8                     l1510:
  1179                           
  1180                           ;RTC_with_PIC_main.c: 95:         Lcd_Print_Char(month_0+'0');
  1181  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1182  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1183  07BA  0840               	movf	main@month_0,w
  1184  07BB  3E30               	addlw	48
  1185  07BC  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1186  07C1                     l1512:
  1187                           
  1188                           ;RTC_with_PIC_main.c: 96:         Lcd_Print_Char(':');
  1189  07C1  303A               	movlw	58
  1190  07C2  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1191  07C7                     l1514:
  1192                           
  1193                           ;RTC_with_PIC_main.c: 97:         Lcd_Print_Char(year_1+'0');
  1194  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1195  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1196  07C9  0843               	movf	main@year_1,w
  1197  07CA  3E30               	addlw	48
  1198  07CB  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1199  07D0                     l1516:
  1200                           
  1201                           ;RTC_with_PIC_main.c: 98:         Lcd_Print_Char(year_0+'0');
  1202  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1203  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1204  07D2  0842               	movf	main@year_0,w
  1205  07D3  3E30               	addlw	48
  1206  07D4  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  1207  07D9                     l1518:
  1208                           
  1209                           ;RTC_with_PIC_main.c: 99:         _delay((unsigned long)((500)*(20000000/4000.0)));
  1210  07D9  300D               	movlw	13
  1211  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1212  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1213  07DC  00B7               	movwf	??_main+2
  1214  07DD  30AF               	movlw	175
  1215  07DE  00B6               	movwf	??_main+1
  1216  07DF  30B5               	movlw	181
  1217  07E0  00B5               	movwf	??_main
  1218  07E1                     u1067:
  1219  07E1  0BB5               	decfsz	??_main,f
  1220  07E2  2FE1               	goto	u1067
  1221  07E3  0BB6               	decfsz	??_main+1,f
  1222  07E4  2FE1               	goto	u1067
  1223  07E5  0BB7               	decfsz	??_main+2,f
  1224  07E6  2FE1               	goto	u1067
  1225  07E7  2FE8               	nop2
  1226  07E8  2E49               	goto	l1450
  1227  07E9  120A  118A  2800   	ljmp	start
  1228  07EC                     __end_of_main:
  1229                           
  1230                           	psect	text1
  1231  0511                     __ptext1:	
  1232 ;; *************** function _Update_Current_Date_Time *****************
  1233 ;; Defined at:
  1234 ;;		line 34 in file "./PIC16F877a_DS3231.h"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, pclath, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1248 ;;      Params:         0       0       0       0       0
  1249 ;;      Locals:         0       0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0
  1251 ;;      Totals:         0       0       0       0       0
  1252 ;;Total ram usage:        0 bytes
  1253 ;; Hardware stack levels used: 1
  1254 ;; Hardware stack levels required when called: 2
  1255 ;; This function calls:
  1256 ;;		_BCD_2_DEC
  1257 ;;		_I2C_Begin
  1258 ;;		_I2C_End
  1259 ;;		_I2C_Read
  1260 ;;		_I2C_Write
  1261 ;; This function is called by:
  1262 ;;		_main
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266  0511                     _Update_Current_Date_Time:	
  1267                           ;psect for function _Update_Current_Date_Time
  1268                           
  1269  0511                     l1428:	
  1270                           ;incstack = 0
  1271                           ; Regs used in _Update_Current_Date_Time: [wreg+status,2+status,0+pclath+cstack]
  1272                           
  1273                           
  1274                           ;./PIC16F877a_DS3231.h: 37:    I2C_Begin();
  1275  0511  120A  118A  2040  120A  118A  	fcall	_I2C_Begin
  1276                           
  1277                           ;./PIC16F877a_DS3231.h: 38:    I2C_Write(0xD0);
  1278  0516  30D0               	movlw	208
  1279  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1280  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1281  0519  00A0               	movwf	I2C_Write@data
  1282  051A  3000               	movlw	0
  1283  051B  00A1               	movwf	I2C_Write@data+1
  1284  051C  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1285                           
  1286                           ;./PIC16F877a_DS3231.h: 39:    I2C_Write(0);
  1287  0521  3000               	movlw	0
  1288  0522  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0523  1303               	bcf	3,6	;RP1=0, select bank0
  1290  0524  00A0               	movwf	I2C_Write@data
  1291  0525  00A1               	movwf	I2C_Write@data+1
  1292  0526  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1293                           
  1294                           ;./PIC16F877a_DS3231.h: 40:    I2C_End();
  1295  052B  120A  118A  2049  120A  118A  	fcall	_I2C_End
  1296                           
  1297                           ;./PIC16F877a_DS3231.h: 43:    I2C_Begin();
  1298  0530  120A  118A  2040  120A  118A  	fcall	_I2C_Begin
  1299                           
  1300                           ;./PIC16F877a_DS3231.h: 44:    I2C_Write(0xD1);
  1301  0535  30D1               	movlw	209
  1302  0536  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0537  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0538  00A0               	movwf	I2C_Write@data
  1305  0539  3000               	movlw	0
  1306  053A  00A1               	movwf	I2C_Write@data+1
  1307  053B  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1308                           
  1309                           ;./PIC16F877a_DS3231.h: 45:    sec = BCD_2_DEC(I2C_Read(1));
  1310  0540  3001               	movlw	1
  1311  0541  00F0               	movwf	I2C_Read@ack
  1312  0542  3000               	movlw	0
  1313  0543  00F1               	movwf	I2C_Read@ack+1
  1314  0544  120A  118A  213E  120A  118A  	fcall	_I2C_Read
  1315  0549  0871               	movf	?_I2C_Read+1,w
  1316  054A  00F7               	movwf	BCD_2_DEC@to_convert+1
  1317  054B  0870               	movf	?_I2C_Read,w
  1318  054C  00F6               	movwf	BCD_2_DEC@to_convert
  1319  054D  120A  118A  2119  120A  118A  	fcall	_BCD_2_DEC
  1320  0552  0877               	movf	?_BCD_2_DEC+1,w
  1321  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0555  00CF               	movwf	_sec+1
  1324  0556  0876               	movf	?_BCD_2_DEC,w
  1325  0557  00CE               	movwf	_sec
  1326                           
  1327                           ;./PIC16F877a_DS3231.h: 46:    min = BCD_2_DEC(I2C_Read(1));
  1328  0558  3001               	movlw	1
  1329  0559  00F0               	movwf	I2C_Read@ack
  1330  055A  3000               	movlw	0
  1331  055B  00F1               	movwf	I2C_Read@ack+1
  1332  055C  120A  118A  213E  120A  118A  	fcall	_I2C_Read
  1333  0561  0871               	movf	?_I2C_Read+1,w
  1334  0562  00F7               	movwf	BCD_2_DEC@to_convert+1
  1335  0563  0870               	movf	?_I2C_Read,w
  1336  0564  00F6               	movwf	BCD_2_DEC@to_convert
  1337  0565  120A  118A  2119  120A  118A  	fcall	_BCD_2_DEC
  1338  056A  0877               	movf	?_BCD_2_DEC+1,w
  1339  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1340  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1341  056D  00CD               	movwf	_min+1
  1342  056E  0876               	movf	?_BCD_2_DEC,w
  1343  056F  00CC               	movwf	_min
  1344                           
  1345                           ;./PIC16F877a_DS3231.h: 47:    hour = BCD_2_DEC(I2C_Read(1));
  1346  0570  3001               	movlw	1
  1347  0571  00F0               	movwf	I2C_Read@ack
  1348  0572  3000               	movlw	0
  1349  0573  00F1               	movwf	I2C_Read@ack+1
  1350  0574  120A  118A  213E  120A  118A  	fcall	_I2C_Read
  1351  0579  0871               	movf	?_I2C_Read+1,w
  1352  057A  00F7               	movwf	BCD_2_DEC@to_convert+1
  1353  057B  0870               	movf	?_I2C_Read,w
  1354  057C  00F6               	movwf	BCD_2_DEC@to_convert
  1355  057D  120A  118A  2119  120A  118A  	fcall	_BCD_2_DEC
  1356  0582  0877               	movf	?_BCD_2_DEC+1,w
  1357  0583  1283               	bcf	3,5	;RP0=0, select bank0
  1358  0584  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0585  00CB               	movwf	_hour+1
  1360  0586  0876               	movf	?_BCD_2_DEC,w
  1361  0587  00CA               	movwf	_hour
  1362                           
  1363                           ;./PIC16F877a_DS3231.h: 48:    I2C_Read(1);
  1364  0588  3001               	movlw	1
  1365  0589  00F0               	movwf	I2C_Read@ack
  1366  058A  3000               	movlw	0
  1367  058B  00F1               	movwf	I2C_Read@ack+1
  1368  058C  120A  118A  213E  120A  118A  	fcall	_I2C_Read
  1369                           
  1370                           ;./PIC16F877a_DS3231.h: 49:    date = BCD_2_DEC(I2C_Read(1));
  1371  0591  3001               	movlw	1
  1372  0592  00F0               	movwf	I2C_Read@ack
  1373  0593  3000               	movlw	0
  1374  0594  00F1               	movwf	I2C_Read@ack+1
  1375  0595  120A  118A  213E  120A  118A  	fcall	_I2C_Read
  1376  059A  0871               	movf	?_I2C_Read+1,w
  1377  059B  00F7               	movwf	BCD_2_DEC@to_convert+1
  1378  059C  0870               	movf	?_I2C_Read,w
  1379  059D  00F6               	movwf	BCD_2_DEC@to_convert
  1380  059E  120A  118A  2119  120A  118A  	fcall	_BCD_2_DEC
  1381  05A3  0877               	movf	?_BCD_2_DEC+1,w
  1382  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1383  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1384  05A6  00C9               	movwf	_date+1
  1385  05A7  0876               	movf	?_BCD_2_DEC,w
  1386  05A8  00C8               	movwf	_date
  1387                           
  1388                           ;./PIC16F877a_DS3231.h: 50:    month = BCD_2_DEC(I2C_Read(1));
  1389  05A9  3001               	movlw	1
  1390  05AA  00F0               	movwf	I2C_Read@ack
  1391  05AB  3000               	movlw	0
  1392  05AC  00F1               	movwf	I2C_Read@ack+1
  1393  05AD  120A  118A  213E  120A  118A  	fcall	_I2C_Read
  1394  05B2  0871               	movf	?_I2C_Read+1,w
  1395  05B3  00F7               	movwf	BCD_2_DEC@to_convert+1
  1396  05B4  0870               	movf	?_I2C_Read,w
  1397  05B5  00F6               	movwf	BCD_2_DEC@to_convert
  1398  05B6  120A  118A  2119  120A  118A  	fcall	_BCD_2_DEC
  1399  05BB  0877               	movf	?_BCD_2_DEC+1,w
  1400  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1401  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1402  05BE  00C7               	movwf	_month+1
  1403  05BF  0876               	movf	?_BCD_2_DEC,w
  1404  05C0  00C6               	movwf	_month
  1405                           
  1406                           ;./PIC16F877a_DS3231.h: 51:    year = BCD_2_DEC(I2C_Read(1));
  1407  05C1  3001               	movlw	1
  1408  05C2  00F0               	movwf	I2C_Read@ack
  1409  05C3  3000               	movlw	0
  1410  05C4  00F1               	movwf	I2C_Read@ack+1
  1411  05C5  120A  118A  213E  120A  118A  	fcall	_I2C_Read
  1412  05CA  0871               	movf	?_I2C_Read+1,w
  1413  05CB  00F7               	movwf	BCD_2_DEC@to_convert+1
  1414  05CC  0870               	movf	?_I2C_Read,w
  1415  05CD  00F6               	movwf	BCD_2_DEC@to_convert
  1416  05CE  120A  118A  2119  120A  118A  	fcall	_BCD_2_DEC
  1417  05D3  0877               	movf	?_BCD_2_DEC+1,w
  1418  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  1419  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  1420  05D6  00C5               	movwf	_year+1
  1421  05D7  0876               	movf	?_BCD_2_DEC,w
  1422  05D8  00C4               	movwf	_year
  1423                           
  1424                           ;./PIC16F877a_DS3231.h: 52:    I2C_End();
  1425  05D9  120A  118A  2049  120A  118A  	fcall	_I2C_End
  1426                           
  1427                           ;./PIC16F877a_DS3231.h: 55:     I2C_Begin();
  1428  05DE  120A  118A  2040  120A  118A  	fcall	_I2C_Begin
  1429                           
  1430                           ;./PIC16F877a_DS3231.h: 56:     I2C_Write(0xD1);
  1431  05E3  30D1               	movlw	209
  1432  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1433  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  1434  05E6  00A0               	movwf	I2C_Write@data
  1435  05E7  3000               	movlw	0
  1436  05E8  00A1               	movwf	I2C_Write@data+1
  1437  05E9  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1438                           
  1439                           ;./PIC16F877a_DS3231.h: 57:     I2C_Read(1);
  1440  05EE  3001               	movlw	1
  1441  05EF  00F0               	movwf	I2C_Read@ack
  1442  05F0  3000               	movlw	0
  1443  05F1  00F1               	movwf	I2C_Read@ack+1
  1444  05F2  120A  118A  213E  120A  118A  	fcall	_I2C_Read
  1445                           
  1446                           ;./PIC16F877a_DS3231.h: 58:     I2C_End();
  1447  05F7  120A  118A  2049  120A  118A  	fcall	_I2C_End
  1448  05FC                     l128:
  1449  05FC  0008               	return
  1450  05FD                     __end_of_Update_Current_Date_Time:
  1451                           
  1452                           	psect	text2
  1453  013E                     __ptext2:	
  1454 ;; *************** function _I2C_Read *****************
  1455 ;; Defined at:
  1456 ;;		line 41 in file "./PIC16F877a_I2C.h"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  ack             2    0[COMMON] unsigned short 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  incoming        2    4[COMMON] unsigned short 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  2    0[COMMON] unsigned short 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0, pclath, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1470 ;;      Params:         2       0       0       0       0
  1471 ;;      Locals:         2       0       0       0       0
  1472 ;;      Temps:          2       0       0       0       0
  1473 ;;      Totals:         6       0       0       0       0
  1474 ;;Total ram usage:        6 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; Hardware stack levels required when called: 1
  1477 ;; This function calls:
  1478 ;;		_I2C_Hold
  1479 ;; This function is called by:
  1480 ;;		_Update_Current_Date_Time
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484  013E                     _I2C_Read:	
  1485                           ;psect for function _I2C_Read
  1486                           
  1487  013E                     l1290:	
  1488                           ;incstack = 0
  1489                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  1490                           
  1491                           
  1492                           ;./PIC16F877a_I2C.h: 41: unsigned short I2C_Read(unsigned short ack);./PIC16F877a_I2C.h:
      +                           42: {;./PIC16F877a_I2C.h: 43:   unsigned short incoming;;./PIC16F877a_I2C.h: 44:   I2C_
      +                          Hold();
  1493  013E  120A  118A  2073  120A  118A  	fcall	_I2C_Hold
  1494  0143                     l1292:
  1495                           
  1496                           ;./PIC16F877a_I2C.h: 45:   RCEN = 1;
  1497  0143  1683               	bsf	3,5	;RP0=1, select bank1
  1498  0144  1303               	bcf	3,6	;RP1=0, select bank1
  1499  0145  1591               	bsf	17,3	;volatile
  1500                           
  1501                           ;./PIC16F877a_I2C.h: 47:   I2C_Hold();
  1502  0146  120A  118A  2073  120A  118A  	fcall	_I2C_Hold
  1503  014B                     l1294:
  1504                           
  1505                           ;./PIC16F877a_I2C.h: 48:   incoming = SSPBUF;
  1506  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1507  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1508  014D  0813               	movf	19,w	;volatile
  1509  014E  00F2               	movwf	??_I2C_Read
  1510  014F  01F3               	clrf	??_I2C_Read+1
  1511  0150  0872               	movf	??_I2C_Read,w
  1512  0151  00F4               	movwf	I2C_Read@incoming
  1513  0152  0873               	movf	??_I2C_Read+1,w
  1514  0153  00F5               	movwf	I2C_Read@incoming+1
  1515  0154                     l1296:
  1516                           
  1517                           ;./PIC16F877a_I2C.h: 50:   I2C_Hold();
  1518  0154  120A  118A  2073  120A  118A  	fcall	_I2C_Hold
  1519  0159                     l1298:
  1520                           
  1521                           ;./PIC16F877a_I2C.h: 51:   ACKDT = (ack)?0:1;
  1522  0159  0870               	movf	I2C_Read@ack,w
  1523  015A  0471               	iorwf	I2C_Read@ack+1,w
  1524  015B  1903               	btfsc	3,2
  1525  015C  295E               	goto	u851
  1526  015D  2962               	goto	u850
  1527  015E                     u851:
  1528  015E  1683               	bsf	3,5	;RP0=1, select bank1
  1529  015F  1303               	bcf	3,6	;RP1=0, select bank1
  1530  0160  1691               	bsf	17,5	;volatile
  1531  0161  2965               	goto	u864
  1532  0162                     u850:
  1533  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1534  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1535  0164  1291               	bcf	17,5	;volatile
  1536  0165                     u864:
  1537  0165                     l1300:
  1538                           
  1539                           ;./PIC16F877a_I2C.h: 52:   ACKEN = 1;
  1540  0165  1611               	bsf	17,4	;volatile
  1541  0166                     l1302:
  1542                           
  1543                           ;./PIC16F877a_I2C.h: 54:   return incoming;
  1544  0166  0875               	movf	I2C_Read@incoming+1,w
  1545  0167  00F1               	movwf	?_I2C_Read+1
  1546  0168  0874               	movf	I2C_Read@incoming,w
  1547  0169  00F0               	movwf	?_I2C_Read
  1548  016A                     l116:
  1549  016A  0008               	return
  1550  016B                     __end_of_I2C_Read:
  1551                           
  1552                           	psect	text3
  1553  0119                     __ptext3:	
  1554 ;; *************** function _BCD_2_DEC *****************
  1555 ;; Defined at:
  1556 ;;		line 9 in file "./PIC16F877a_DS3231.h"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  to_convert      2    6[COMMON] int 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  2    6[COMMON] int 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0, pclath, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         2       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0
  1572 ;;      Temps:          2       0       0       0       0
  1573 ;;      Totals:         4       0       0       0       0
  1574 ;;Total ram usage:        4 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 1
  1577 ;; This function calls:
  1578 ;;		___wmul
  1579 ;; This function is called by:
  1580 ;;		_Update_Current_Date_Time
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584  0119                     _BCD_2_DEC:	
  1585                           ;psect for function _BCD_2_DEC
  1586                           
  1587  0119                     l1306:	
  1588                           ;incstack = 0
  1589                           ; Regs used in _BCD_2_DEC: [wreg+status,2+status,0+pclath+cstack]
  1590                           
  1591                           
  1592                           ;./PIC16F877a_DS3231.h: 9: int BCD_2_DEC(int to_convert);./PIC16F877a_DS3231.h: 10: {;./
      +                          PIC16F877a_DS3231.h: 11:    return (to_convert >> 4) * 10 + (to_convert & 0x0F);
  1593  0119  300F               	movlw	15
  1594  011A  0576               	andwf	BCD_2_DEC@to_convert,w
  1595  011B  00F8               	movwf	??_BCD_2_DEC
  1596  011C  3000               	movlw	0
  1597  011D  0577               	andwf	BCD_2_DEC@to_convert+1,w
  1598  011E  00F9               	movwf	??_BCD_2_DEC+1
  1599  011F  0E76               	swapf	BCD_2_DEC@to_convert,w
  1600  0120  390F               	andlw	15
  1601  0121  00F0               	movwf	___wmul@multiplier
  1602  0122  0E77               	swapf	BCD_2_DEC@to_convert+1,w
  1603  0123  39F0               	andlw	240
  1604  0124  04F0               	iorwf	___wmul@multiplier,f
  1605  0125  0E77               	swapf	BCD_2_DEC@to_convert+1,w
  1606  0126  390F               	andlw	15
  1607  0127  00F1               	movwf	___wmul@multiplier+1
  1608  0128  30F0               	movlw	240
  1609  0129  1DF1               	btfss	___wmul@multiplier+1,3
  1610  012A  3000               	movlw	0
  1611  012B  04F1               	iorwf	___wmul@multiplier+1,f
  1612  012C  300A               	movlw	10
  1613  012D  00F2               	movwf	___wmul@multiplicand
  1614  012E  3000               	movlw	0
  1615  012F  00F3               	movwf	___wmul@multiplicand+1
  1616  0130  120A  118A  20F4  120A  118A  	fcall	___wmul
  1617  0135  0878               	movf	??_BCD_2_DEC,w
  1618  0136  0770               	addwf	?___wmul,w
  1619  0137  00F6               	movwf	?_BCD_2_DEC
  1620  0138  0879               	movf	??_BCD_2_DEC+1,w
  1621  0139  1803               	skipnc
  1622  013A  0A79               	incf	??_BCD_2_DEC+1,w
  1623  013B  0771               	addwf	?___wmul+1,w
  1624  013C  00F7               	movwf	?_BCD_2_DEC+1
  1625  013D                     l119:
  1626  013D  0008               	return
  1627  013E                     __end_of_BCD_2_DEC:
  1628                           
  1629                           	psect	text4
  1630  00F4                     __ptext4:	
  1631 ;; *************** function ___wmul *****************
  1632 ;; Defined at:
  1633 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  multiplier      2    0[COMMON] unsigned int 
  1636 ;;  multiplicand    2    2[COMMON] unsigned int 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  product         2    4[COMMON] unsigned int 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  2    0[COMMON] unsigned int 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1648 ;;      Params:         4       0       0       0       0
  1649 ;;      Locals:         2       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0
  1651 ;;      Totals:         6       0       0       0       0
  1652 ;;Total ram usage:        6 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_BCD_2_DEC
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661  00F4                     ___wmul:	
  1662                           ;psect for function ___wmul
  1663                           
  1664  00F4                     l1140:	
  1665                           ;incstack = 0
  1666                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1667                           
  1668  00F4  01F4               	clrf	___wmul@product
  1669  00F5  01F5               	clrf	___wmul@product+1
  1670  00F6                     l1142:
  1671  00F6  1C70               	btfss	___wmul@multiplier,0
  1672  00F7  28F9               	goto	u591
  1673  00F8  28FA               	goto	u590
  1674  00F9                     u591:
  1675  00F9  2900               	goto	l222
  1676  00FA                     u590:
  1677  00FA                     l1144:
  1678  00FA  0872               	movf	___wmul@multiplicand,w
  1679  00FB  07F4               	addwf	___wmul@product,f
  1680  00FC  1803               	skipnc
  1681  00FD  0AF5               	incf	___wmul@product+1,f
  1682  00FE  0873               	movf	___wmul@multiplicand+1,w
  1683  00FF  07F5               	addwf	___wmul@product+1,f
  1684  0100                     l222:
  1685  0100  3001               	movlw	1
  1686  0101                     u605:
  1687  0101  1003               	clrc
  1688  0102  0DF2               	rlf	___wmul@multiplicand,f
  1689  0103  0DF3               	rlf	___wmul@multiplicand+1,f
  1690  0104  3EFF               	addlw	-1
  1691  0105  1D03               	skipz
  1692  0106  2901               	goto	u605
  1693  0107                     l1146:
  1694  0107  3001               	movlw	1
  1695  0108                     u615:
  1696  0108  1003               	clrc
  1697  0109  0CF1               	rrf	___wmul@multiplier+1,f
  1698  010A  0CF0               	rrf	___wmul@multiplier,f
  1699  010B  3EFF               	addlw	-1
  1700  010C  1D03               	skipz
  1701  010D  2908               	goto	u615
  1702  010E                     l1148:
  1703  010E  0870               	movf	___wmul@multiplier,w
  1704  010F  0471               	iorwf	___wmul@multiplier+1,w
  1705  0110  1D03               	btfss	3,2
  1706  0111  2913               	goto	u621
  1707  0112  2914               	goto	u620
  1708  0113                     u621:
  1709  0113  28F6               	goto	l1142
  1710  0114                     u620:
  1711  0114                     l1150:
  1712  0114  0875               	movf	___wmul@product+1,w
  1713  0115  00F1               	movwf	?___wmul+1
  1714  0116  0874               	movf	___wmul@product,w
  1715  0117  00F0               	movwf	?___wmul
  1716  0118                     l224:
  1717  0118  0008               	return
  1718  0119                     __end_of___wmul:
  1719                           
  1720                           	psect	text5
  1721  0462                     __ptext5:	
  1722 ;; *************** function _Set_Time_Date *****************
  1723 ;; Defined at:
  1724 ;;		line 19 in file "./PIC16F877a_DS3231.h"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0, pclath, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1738 ;;      Params:         0       0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0
  1741 ;;      Totals:         0       0       0       0       0
  1742 ;;Total ram usage:        0 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 2
  1745 ;; This function calls:
  1746 ;;		_DEC_2_BCD
  1747 ;;		_I2C_Begin
  1748 ;;		_I2C_End
  1749 ;;		_I2C_Write
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755  0462                     _Set_Time_Date:	
  1756                           ;psect for function _Set_Time_Date
  1757                           
  1758  0462                     l1426:	
  1759                           ;incstack = 0
  1760                           ; Regs used in _Set_Time_Date: [wreg+status,2+status,0+pclath+cstack]
  1761                           
  1762                           
  1763                           ;./PIC16F877a_DS3231.h: 21:    I2C_Begin();
  1764  0462  120A  118A  2040  120A  118A  	fcall	_I2C_Begin
  1765                           
  1766                           ;./PIC16F877a_DS3231.h: 22:    I2C_Write(0xD0);
  1767  0467  30D0               	movlw	208
  1768  0468  1283               	bcf	3,5	;RP0=0, select bank0
  1769  0469  1303               	bcf	3,6	;RP1=0, select bank0
  1770  046A  00A0               	movwf	I2C_Write@data
  1771  046B  3000               	movlw	0
  1772  046C  00A1               	movwf	I2C_Write@data+1
  1773  046D  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1774                           
  1775                           ;./PIC16F877a_DS3231.h: 23:    I2C_Write(0);
  1776  0472  3000               	movlw	0
  1777  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0475  00A0               	movwf	I2C_Write@data
  1780  0476  00A1               	movwf	I2C_Write@data+1
  1781  0477  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1782                           
  1783                           ;./PIC16F877a_DS3231.h: 24:    I2C_Write(DEC_2_BCD(sec));
  1784  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1785  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1786  047E  084F               	movf	_sec+1,w
  1787  047F  00FA               	movwf	DEC_2_BCD@to_convert+1
  1788  0480  084E               	movf	_sec,w
  1789  0481  00F9               	movwf	DEC_2_BCD@to_convert
  1790  0482  120A  118A  216B  120A  118A  	fcall	_DEC_2_BCD
  1791  0487  087A               	movf	?_DEC_2_BCD+1,w
  1792  0488  1283               	bcf	3,5	;RP0=0, select bank0
  1793  0489  1303               	bcf	3,6	;RP1=0, select bank0
  1794  048A  00A1               	movwf	I2C_Write@data+1
  1795  048B  0879               	movf	?_DEC_2_BCD,w
  1796  048C  00A0               	movwf	I2C_Write@data
  1797  048D  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1798                           
  1799                           ;./PIC16F877a_DS3231.h: 25:    I2C_Write(DEC_2_BCD(min));
  1800  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0494  084D               	movf	_min+1,w
  1803  0495  00FA               	movwf	DEC_2_BCD@to_convert+1
  1804  0496  084C               	movf	_min,w
  1805  0497  00F9               	movwf	DEC_2_BCD@to_convert
  1806  0498  120A  118A  216B  120A  118A  	fcall	_DEC_2_BCD
  1807  049D  087A               	movf	?_DEC_2_BCD+1,w
  1808  049E  1283               	bcf	3,5	;RP0=0, select bank0
  1809  049F  1303               	bcf	3,6	;RP1=0, select bank0
  1810  04A0  00A1               	movwf	I2C_Write@data+1
  1811  04A1  0879               	movf	?_DEC_2_BCD,w
  1812  04A2  00A0               	movwf	I2C_Write@data
  1813  04A3  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1814                           
  1815                           ;./PIC16F877a_DS3231.h: 26:    I2C_Write(DEC_2_BCD(hour));
  1816  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1817  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1818  04AA  084B               	movf	_hour+1,w
  1819  04AB  00FA               	movwf	DEC_2_BCD@to_convert+1
  1820  04AC  084A               	movf	_hour,w
  1821  04AD  00F9               	movwf	DEC_2_BCD@to_convert
  1822  04AE  120A  118A  216B  120A  118A  	fcall	_DEC_2_BCD
  1823  04B3  087A               	movf	?_DEC_2_BCD+1,w
  1824  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  1825  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  1826  04B6  00A1               	movwf	I2C_Write@data+1
  1827  04B7  0879               	movf	?_DEC_2_BCD,w
  1828  04B8  00A0               	movwf	I2C_Write@data
  1829  04B9  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1830                           
  1831                           ;./PIC16F877a_DS3231.h: 27:    I2C_Write(1);
  1832  04BE  3001               	movlw	1
  1833  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  1834  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  1835  04C1  00A0               	movwf	I2C_Write@data
  1836  04C2  3000               	movlw	0
  1837  04C3  00A1               	movwf	I2C_Write@data+1
  1838  04C4  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1839                           
  1840                           ;./PIC16F877a_DS3231.h: 28:    I2C_Write(DEC_2_BCD(date));
  1841  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1842  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1843  04CB  0849               	movf	_date+1,w
  1844  04CC  00FA               	movwf	DEC_2_BCD@to_convert+1
  1845  04CD  0848               	movf	_date,w
  1846  04CE  00F9               	movwf	DEC_2_BCD@to_convert
  1847  04CF  120A  118A  216B  120A  118A  	fcall	_DEC_2_BCD
  1848  04D4  087A               	movf	?_DEC_2_BCD+1,w
  1849  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  1850  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1851  04D7  00A1               	movwf	I2C_Write@data+1
  1852  04D8  0879               	movf	?_DEC_2_BCD,w
  1853  04D9  00A0               	movwf	I2C_Write@data
  1854  04DA  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1855                           
  1856                           ;./PIC16F877a_DS3231.h: 29:    I2C_Write(DEC_2_BCD(month));
  1857  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  1858  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  1859  04E1  0847               	movf	_month+1,w
  1860  04E2  00FA               	movwf	DEC_2_BCD@to_convert+1
  1861  04E3  0846               	movf	_month,w
  1862  04E4  00F9               	movwf	DEC_2_BCD@to_convert
  1863  04E5  120A  118A  216B  120A  118A  	fcall	_DEC_2_BCD
  1864  04EA  087A               	movf	?_DEC_2_BCD+1,w
  1865  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  1866  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  1867  04ED  00A1               	movwf	I2C_Write@data+1
  1868  04EE  0879               	movf	?_DEC_2_BCD,w
  1869  04EF  00A0               	movwf	I2C_Write@data
  1870  04F0  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1871                           
  1872                           ;./PIC16F877a_DS3231.h: 30:    I2C_Write(DEC_2_BCD(year));
  1873  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1874  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1875  04F7  0845               	movf	_year+1,w
  1876  04F8  00FA               	movwf	DEC_2_BCD@to_convert+1
  1877  04F9  0844               	movf	_year,w
  1878  04FA  00F9               	movwf	DEC_2_BCD@to_convert
  1879  04FB  120A  118A  216B  120A  118A  	fcall	_DEC_2_BCD
  1880  0500  087A               	movf	?_DEC_2_BCD+1,w
  1881  0501  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0502  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0503  00A1               	movwf	I2C_Write@data+1
  1884  0504  0879               	movf	?_DEC_2_BCD,w
  1885  0505  00A0               	movwf	I2C_Write@data
  1886  0506  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1887                           
  1888                           ;./PIC16F877a_DS3231.h: 31:    I2C_End();
  1889  050B  120A  118A  2049  120A  118A  	fcall	_I2C_End
  1890  0510                     l125:
  1891  0510  0008               	return
  1892  0511                     __end_of_Set_Time_Date:
  1893                           
  1894                           	psect	text6
  1895  0052                     __ptext6:	
  1896 ;; *************** function _I2C_Write *****************
  1897 ;; Defined at:
  1898 ;;		line 35 in file "./PIC16F877a_I2C.h"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  data            2    0[BANK0 ] unsigned int 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         0       2       0       0       0
  1913 ;;      Locals:         0       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0
  1915 ;;      Totals:         0       2       0       0       0
  1916 ;;Total ram usage:        2 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; Hardware stack levels required when called: 1
  1919 ;; This function calls:
  1920 ;;		_I2C_Hold
  1921 ;; This function is called by:
  1922 ;;		_Set_Time_Date
  1923 ;;		_Update_Current_Date_Time
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927  0052                     _I2C_Write:	
  1928                           ;psect for function _I2C_Write
  1929                           
  1930  0052                     l1286:	
  1931                           ;incstack = 0
  1932                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  1933                           
  1934                           
  1935                           ;./PIC16F877a_I2C.h: 35: void I2C_Write(unsigned data);./PIC16F877a_I2C.h: 36: {;./PIC16
      +                          F877a_I2C.h: 37:   I2C_Hold();
  1936  0052  120A  118A  2073  120A  118A  	fcall	_I2C_Hold
  1937  0057                     l1288:
  1938                           
  1939                           ;./PIC16F877a_I2C.h: 38:   SSPBUF = data;
  1940  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0059  0820               	movf	I2C_Write@data,w
  1943  005A  0093               	movwf	19	;volatile
  1944  005B                     l113:
  1945  005B  0008               	return
  1946  005C                     __end_of_I2C_Write:
  1947                           
  1948                           	psect	text7
  1949  0049                     __ptext7:	
  1950 ;; *************** function _I2C_End *****************
  1951 ;; Defined at:
  1952 ;;		line 29 in file "./PIC16F877a_I2C.h"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         0       0       0       0       0
  1967 ;;      Locals:         0       0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0
  1969 ;;      Totals:         0       0       0       0       0
  1970 ;;Total ram usage:        0 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; Hardware stack levels required when called: 1
  1973 ;; This function calls:
  1974 ;;		_I2C_Hold
  1975 ;; This function is called by:
  1976 ;;		_Set_Time_Date
  1977 ;;		_Update_Current_Date_Time
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981  0049                     _I2C_End:	
  1982                           ;psect for function _I2C_End
  1983                           
  1984  0049                     l1282:	
  1985                           ;incstack = 0
  1986                           ; Regs used in _I2C_End: [wreg+status,2+status,0+pclath+cstack]
  1987                           
  1988                           
  1989                           ;./PIC16F877a_I2C.h: 31:   I2C_Hold();
  1990  0049  120A  118A  2073  120A  118A  	fcall	_I2C_Hold
  1991  004E                     l1284:
  1992                           
  1993                           ;./PIC16F877a_I2C.h: 32:   PEN = 1;
  1994  004E  1683               	bsf	3,5	;RP0=1, select bank1
  1995  004F  1303               	bcf	3,6	;RP1=0, select bank1
  1996  0050  1511               	bsf	17,2	;volatile
  1997  0051                     l110:
  1998  0051  0008               	return
  1999  0052                     __end_of_I2C_End:
  2000                           
  2001                           	psect	text8
  2002  0040                     __ptext8:	
  2003 ;; *************** function _I2C_Begin *****************
  2004 ;; Defined at:
  2005 ;;		line 21 in file "./PIC16F877a_I2C.h"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0, pclath, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2019 ;;      Params:         0       0       0       0       0
  2020 ;;      Locals:         0       0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0
  2022 ;;      Totals:         0       0       0       0       0
  2023 ;;Total ram usage:        0 bytes
  2024 ;; Hardware stack levels used: 1
  2025 ;; Hardware stack levels required when called: 1
  2026 ;; This function calls:
  2027 ;;		_I2C_Hold
  2028 ;; This function is called by:
  2029 ;;		_Set_Time_Date
  2030 ;;		_Update_Current_Date_Time
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034  0040                     _I2C_Begin:	
  2035                           ;psect for function _I2C_Begin
  2036                           
  2037  0040                     l1278:	
  2038                           ;incstack = 0
  2039                           ; Regs used in _I2C_Begin: [wreg+status,2+status,0+pclath+cstack]
  2040                           
  2041                           
  2042                           ;./PIC16F877a_I2C.h: 23:   I2C_Hold();
  2043  0040  120A  118A  2073  120A  118A  	fcall	_I2C_Hold
  2044  0045                     l1280:
  2045                           
  2046                           ;./PIC16F877a_I2C.h: 24:   SEN = 1;
  2047  0045  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0046  1303               	bcf	3,6	;RP1=0, select bank1
  2049  0047  1411               	bsf	17,0	;volatile
  2050  0048                     l107:
  2051  0048  0008               	return
  2052  0049                     __end_of_I2C_Begin:
  2053                           
  2054                           	psect	text9
  2055  0073                     __ptext9:	
  2056 ;; *************** function _I2C_Hold *****************
  2057 ;; Defined at:
  2058 ;;		line 16 in file "./PIC16F877a_I2C.h"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2072 ;;      Params:         0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0
  2075 ;;      Totals:         0       0       0       0       0
  2076 ;;Total ram usage:        0 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_I2C_Begin
  2082 ;;		_I2C_End
  2083 ;;		_I2C_Write
  2084 ;;		_I2C_Read
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088  0073                     _I2C_Hold:	
  2089                           ;psect for function _I2C_Hold
  2090                           
  2091  0073                     l1134:	
  2092                           ;incstack = 0
  2093                           ; Regs used in _I2C_Hold: [wreg+status,2]
  2094                           
  2095  0073                     l1136:	
  2096                           ;./PIC16F877a_I2C.h: 18:     while ( (SSPCON2 & 0b00011111) || (SSPSTAT & 0b00000100) ) 
      +                          ;
  2097                           
  2098  0073  1683               	bsf	3,5	;RP0=1, select bank1
  2099  0074  1303               	bcf	3,6	;RP1=0, select bank1
  2100  0075  0811               	movf	17,w	;volatile
  2101  0076  391F               	andlw	31
  2102  0077  1D03               	btfss	3,2
  2103  0078  287A               	goto	u571
  2104  0079  287B               	goto	u570
  2105  007A                     u571:
  2106  007A  2873               	goto	l1136
  2107  007B                     u570:
  2108  007B                     l1138:
  2109  007B  1914               	btfsc	20,2	;volatile
  2110  007C  287E               	goto	u581
  2111  007D  287F               	goto	u580
  2112  007E                     u581:
  2113  007E  2873               	goto	l1136
  2114  007F                     u580:
  2115  007F                     l104:
  2116  007F  0008               	return
  2117  0080                     __end_of_I2C_Hold:
  2118                           
  2119                           	psect	text10
  2120  016B                     __ptext10:	
  2121 ;; *************** function _DEC_2_BCD *****************
  2122 ;; Defined at:
  2123 ;;		line 14 in file "./PIC16F877a_DS3231.h"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  to_convert      2    9[COMMON] int 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  2    9[COMMON] int 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, pclath, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2137 ;;      Params:         2       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0
  2139 ;;      Temps:          2       0       0       0       0
  2140 ;;      Totals:         4       0       0       0       0
  2141 ;;Total ram usage:        4 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 1
  2144 ;; This function calls:
  2145 ;;		___awdiv
  2146 ;;		___awmod
  2147 ;; This function is called by:
  2148 ;;		_Set_Time_Date
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152  016B                     _DEC_2_BCD:	
  2153                           ;psect for function _DEC_2_BCD
  2154                           
  2155  016B                     l1310:	
  2156                           ;incstack = 0
  2157                           ; Regs used in _DEC_2_BCD: [wreg+status,2+status,0+pclath+cstack]
  2158                           
  2159                           
  2160                           ;./PIC16F877a_DS3231.h: 14: int DEC_2_BCD (int to_convert);./PIC16F877a_DS3231.h: 15: {;
      +                          ./PIC16F877a_DS3231.h: 16:    return ((to_convert / 10) << 4) + (to_convert % 10);
  2161  016B  300A               	movlw	10
  2162  016C  00F0               	movwf	___awdiv@divisor
  2163  016D  3000               	movlw	0
  2164  016E  00F1               	movwf	___awdiv@divisor+1
  2165  016F  087A               	movf	DEC_2_BCD@to_convert+1,w
  2166  0170  00F3               	movwf	___awdiv@dividend+1
  2167  0171  0879               	movf	DEC_2_BCD@to_convert,w
  2168  0172  00F2               	movwf	___awdiv@dividend
  2169  0173  120A  118A  2393  120A  118A  	fcall	___awdiv
  2170  0178  0870               	movf	?___awdiv,w
  2171  0179  00FB               	movwf	??_DEC_2_BCD
  2172  017A  0871               	movf	?___awdiv+1,w
  2173  017B  00FC               	movwf	??_DEC_2_BCD+1
  2174  017C  0EFB               	swapf	??_DEC_2_BCD,f
  2175  017D  0EFC               	swapf	??_DEC_2_BCD+1,f
  2176  017E  30F0               	movlw	240
  2177  017F  05FC               	andwf	??_DEC_2_BCD+1,f
  2178  0180  087B               	movf	??_DEC_2_BCD,w
  2179  0181  390F               	andlw	15
  2180  0182  04FC               	iorwf	??_DEC_2_BCD+1,f
  2181  0183  30F0               	movlw	240
  2182  0184  05FB               	andwf	??_DEC_2_BCD,f
  2183  0185  300A               	movlw	10
  2184  0186  00F0               	movwf	___awmod@divisor
  2185  0187  3000               	movlw	0
  2186  0188  00F1               	movwf	___awmod@divisor+1
  2187  0189  087A               	movf	DEC_2_BCD@to_convert+1,w
  2188  018A  00F3               	movwf	___awmod@dividend+1
  2189  018B  0879               	movf	DEC_2_BCD@to_convert,w
  2190  018C  00F2               	movwf	___awmod@dividend
  2191  018D  120A  118A  22DB  120A  118A  	fcall	___awmod
  2192  0192  0870               	movf	?___awmod,w
  2193  0193  077B               	addwf	??_DEC_2_BCD,w
  2194  0194  00F9               	movwf	?_DEC_2_BCD
  2195  0195  0871               	movf	?___awmod+1,w
  2196  0196  1803               	skipnc
  2197  0197  0A71               	incf	?___awmod+1,w
  2198  0198  077C               	addwf	??_DEC_2_BCD+1,w
  2199  0199  00FA               	movwf	?_DEC_2_BCD+1
  2200  019A                     l122:
  2201  019A  0008               	return
  2202  019B                     __end_of_DEC_2_BCD:
  2203                           
  2204                           	psect	text11
  2205  02DB                     __ptext11:	
  2206 ;; *************** function ___awmod *****************
  2207 ;; Defined at:
  2208 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  divisor         2    0[COMMON] int 
  2211 ;;  dividend        2    2[COMMON] int 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  sign            1    6[COMMON] unsigned char 
  2214 ;;  counter         1    5[COMMON] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  2    0[COMMON] int 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         4       0       0       0       0
  2225 ;;      Locals:         2       0       0       0       0
  2226 ;;      Temps:          1       0       0       0       0
  2227 ;;      Totals:         7       0       0       0       0
  2228 ;;Total ram usage:        7 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_DEC_2_BCD
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238  02DB                     ___awmod:	
  2239                           ;psect for function ___awmod
  2240                           
  2241  02DB                     l1198:	
  2242                           ;incstack = 0
  2243                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2244                           
  2245  02DB  01F6               	clrf	___awmod@sign
  2246  02DC                     l1200:
  2247  02DC  1FF3               	btfss	___awmod@dividend+1,7
  2248  02DD  2ADF               	goto	u731
  2249  02DE  2AE0               	goto	u730
  2250  02DF                     u731:
  2251  02DF  2AE7               	goto	l1206
  2252  02E0                     u730:
  2253  02E0                     l1202:
  2254  02E0  09F2               	comf	___awmod@dividend,f
  2255  02E1  09F3               	comf	___awmod@dividend+1,f
  2256  02E2  0AF2               	incf	___awmod@dividend,f
  2257  02E3  1903               	skipnz
  2258  02E4  0AF3               	incf	___awmod@dividend+1,f
  2259  02E5                     l1204:
  2260  02E5  01F6               	clrf	___awmod@sign
  2261  02E6  0AF6               	incf	___awmod@sign,f
  2262  02E7                     l1206:
  2263  02E7  1FF1               	btfss	___awmod@divisor+1,7
  2264  02E8  2AEA               	goto	u741
  2265  02E9  2AEB               	goto	u740
  2266  02EA                     u741:
  2267  02EA  2AF0               	goto	l1210
  2268  02EB                     u740:
  2269  02EB                     l1208:
  2270  02EB  09F0               	comf	___awmod@divisor,f
  2271  02EC  09F1               	comf	___awmod@divisor+1,f
  2272  02ED  0AF0               	incf	___awmod@divisor,f
  2273  02EE  1903               	skipnz
  2274  02EF  0AF1               	incf	___awmod@divisor+1,f
  2275  02F0                     l1210:
  2276  02F0  0870               	movf	___awmod@divisor,w
  2277  02F1  0471               	iorwf	___awmod@divisor+1,w
  2278  02F2  1903               	btfsc	3,2
  2279  02F3  2AF5               	goto	u751
  2280  02F4  2AF6               	goto	u750
  2281  02F5                     u751:
  2282  02F5  2B25               	goto	l1228
  2283  02F6                     u750:
  2284  02F6                     l1212:
  2285  02F6  01F5               	clrf	___awmod@counter
  2286  02F7  0AF5               	incf	___awmod@counter,f
  2287  02F8  2B04               	goto	l1218
  2288  02F9                     l1214:
  2289  02F9  3001               	movlw	1
  2290  02FA                     u765:
  2291  02FA  1003               	clrc
  2292  02FB  0DF0               	rlf	___awmod@divisor,f
  2293  02FC  0DF1               	rlf	___awmod@divisor+1,f
  2294  02FD  3EFF               	addlw	-1
  2295  02FE  1D03               	skipz
  2296  02FF  2AFA               	goto	u765
  2297  0300                     l1216:
  2298  0300  3001               	movlw	1
  2299  0301  00F4               	movwf	??___awmod
  2300  0302  0874               	movf	??___awmod,w
  2301  0303  07F5               	addwf	___awmod@counter,f
  2302  0304                     l1218:
  2303  0304  1FF1               	btfss	___awmod@divisor+1,7
  2304  0305  2B07               	goto	u771
  2305  0306  2B08               	goto	u770
  2306  0307                     u771:
  2307  0307  2AF9               	goto	l1214
  2308  0308                     u770:
  2309  0308                     l1220:
  2310  0308  0871               	movf	___awmod@divisor+1,w
  2311  0309  0273               	subwf	___awmod@dividend+1,w
  2312  030A  1D03               	skipz
  2313  030B  2B0E               	goto	u785
  2314  030C  0870               	movf	___awmod@divisor,w
  2315  030D  0272               	subwf	___awmod@dividend,w
  2316  030E                     u785:
  2317  030E  1C03               	skipc
  2318  030F  2B11               	goto	u781
  2319  0310  2B12               	goto	u780
  2320  0311                     u781:
  2321  0311  2B18               	goto	l1224
  2322  0312                     u780:
  2323  0312                     l1222:
  2324  0312  0870               	movf	___awmod@divisor,w
  2325  0313  02F2               	subwf	___awmod@dividend,f
  2326  0314  0871               	movf	___awmod@divisor+1,w
  2327  0315  1C03               	skipc
  2328  0316  03F3               	decf	___awmod@dividend+1,f
  2329  0317  02F3               	subwf	___awmod@dividend+1,f
  2330  0318                     l1224:
  2331  0318  3001               	movlw	1
  2332  0319                     u795:
  2333  0319  1003               	clrc
  2334  031A  0CF1               	rrf	___awmod@divisor+1,f
  2335  031B  0CF0               	rrf	___awmod@divisor,f
  2336  031C  3EFF               	addlw	-1
  2337  031D  1D03               	skipz
  2338  031E  2B19               	goto	u795
  2339  031F                     l1226:
  2340  031F  3001               	movlw	1
  2341  0320  02F5               	subwf	___awmod@counter,f
  2342  0321  1D03               	btfss	3,2
  2343  0322  2B24               	goto	u801
  2344  0323  2B25               	goto	u800
  2345  0324                     u801:
  2346  0324  2B08               	goto	l1220
  2347  0325                     u800:
  2348  0325                     l1228:
  2349  0325  0876               	movf	___awmod@sign,w
  2350  0326  1903               	btfsc	3,2
  2351  0327  2B29               	goto	u811
  2352  0328  2B2A               	goto	u810
  2353  0329                     u811:
  2354  0329  2B2F               	goto	l1232
  2355  032A                     u810:
  2356  032A                     l1230:
  2357  032A  09F2               	comf	___awmod@dividend,f
  2358  032B  09F3               	comf	___awmod@dividend+1,f
  2359  032C  0AF2               	incf	___awmod@dividend,f
  2360  032D  1903               	skipnz
  2361  032E  0AF3               	incf	___awmod@dividend+1,f
  2362  032F                     l1232:
  2363  032F  0873               	movf	___awmod@dividend+1,w
  2364  0330  00F1               	movwf	?___awmod+1
  2365  0331  0872               	movf	___awmod@dividend,w
  2366  0332  00F0               	movwf	?___awmod
  2367  0333                     l388:
  2368  0333  0008               	return
  2369  0334                     __end_of___awmod:
  2370                           
  2371                           	psect	text12
  2372  0393                     __ptext12:	
  2373 ;; *************** function ___awdiv *****************
  2374 ;; Defined at:
  2375 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  divisor         2    0[COMMON] int 
  2378 ;;  dividend        2    2[COMMON] int 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  quotient        2    7[COMMON] int 
  2381 ;;  sign            1    6[COMMON] unsigned char 
  2382 ;;  counter         1    5[COMMON] unsigned char 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  2    0[COMMON] int 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2392 ;;      Params:         4       0       0       0       0
  2393 ;;      Locals:         4       0       0       0       0
  2394 ;;      Temps:          1       0       0       0       0
  2395 ;;      Totals:         9       0       0       0       0
  2396 ;;Total ram usage:        9 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_DEC_2_BCD
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406  0393                     ___awdiv:	
  2407                           ;psect for function ___awdiv
  2408                           
  2409  0393                     l1154:	
  2410                           ;incstack = 0
  2411                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2412                           
  2413  0393  01F6               	clrf	___awdiv@sign
  2414  0394                     l1156:
  2415  0394  1FF1               	btfss	___awdiv@divisor+1,7
  2416  0395  2B97               	goto	u631
  2417  0396  2B98               	goto	u630
  2418  0397                     u631:
  2419  0397  2B9F               	goto	l1162
  2420  0398                     u630:
  2421  0398                     l1158:
  2422  0398  09F0               	comf	___awdiv@divisor,f
  2423  0399  09F1               	comf	___awdiv@divisor+1,f
  2424  039A  0AF0               	incf	___awdiv@divisor,f
  2425  039B  1903               	skipnz
  2426  039C  0AF1               	incf	___awdiv@divisor+1,f
  2427  039D                     l1160:
  2428  039D  01F6               	clrf	___awdiv@sign
  2429  039E  0AF6               	incf	___awdiv@sign,f
  2430  039F                     l1162:
  2431  039F  1FF3               	btfss	___awdiv@dividend+1,7
  2432  03A0  2BA2               	goto	u641
  2433  03A1  2BA3               	goto	u640
  2434  03A2                     u641:
  2435  03A2  2BAC               	goto	l1168
  2436  03A3                     u640:
  2437  03A3                     l1164:
  2438  03A3  09F2               	comf	___awdiv@dividend,f
  2439  03A4  09F3               	comf	___awdiv@dividend+1,f
  2440  03A5  0AF2               	incf	___awdiv@dividend,f
  2441  03A6  1903               	skipnz
  2442  03A7  0AF3               	incf	___awdiv@dividend+1,f
  2443  03A8                     l1166:
  2444  03A8  3001               	movlw	1
  2445  03A9  00F4               	movwf	??___awdiv
  2446  03AA  0874               	movf	??___awdiv,w
  2447  03AB  06F6               	xorwf	___awdiv@sign,f
  2448  03AC                     l1168:
  2449  03AC  01F7               	clrf	___awdiv@quotient
  2450  03AD  01F8               	clrf	___awdiv@quotient+1
  2451  03AE                     l1170:
  2452  03AE  0870               	movf	___awdiv@divisor,w
  2453  03AF  0471               	iorwf	___awdiv@divisor+1,w
  2454  03B0  1903               	btfsc	3,2
  2455  03B1  2BB3               	goto	u651
  2456  03B2  2BB4               	goto	u650
  2457  03B3                     u651:
  2458  03B3  2BEB               	goto	l1190
  2459  03B4                     u650:
  2460  03B4                     l1172:
  2461  03B4  01F5               	clrf	___awdiv@counter
  2462  03B5  0AF5               	incf	___awdiv@counter,f
  2463  03B6  2BC2               	goto	l1178
  2464  03B7                     l1174:
  2465  03B7  3001               	movlw	1
  2466  03B8                     u665:
  2467  03B8  1003               	clrc
  2468  03B9  0DF0               	rlf	___awdiv@divisor,f
  2469  03BA  0DF1               	rlf	___awdiv@divisor+1,f
  2470  03BB  3EFF               	addlw	-1
  2471  03BC  1D03               	skipz
  2472  03BD  2BB8               	goto	u665
  2473  03BE                     l1176:
  2474  03BE  3001               	movlw	1
  2475  03BF  00F4               	movwf	??___awdiv
  2476  03C0  0874               	movf	??___awdiv,w
  2477  03C1  07F5               	addwf	___awdiv@counter,f
  2478  03C2                     l1178:
  2479  03C2  1FF1               	btfss	___awdiv@divisor+1,7
  2480  03C3  2BC5               	goto	u671
  2481  03C4  2BC6               	goto	u670
  2482  03C5                     u671:
  2483  03C5  2BB7               	goto	l1174
  2484  03C6                     u670:
  2485  03C6                     l1180:
  2486  03C6  3001               	movlw	1
  2487  03C7                     u685:
  2488  03C7  1003               	clrc
  2489  03C8  0DF7               	rlf	___awdiv@quotient,f
  2490  03C9  0DF8               	rlf	___awdiv@quotient+1,f
  2491  03CA  3EFF               	addlw	-1
  2492  03CB  1D03               	skipz
  2493  03CC  2BC7               	goto	u685
  2494  03CD  0871               	movf	___awdiv@divisor+1,w
  2495  03CE  0273               	subwf	___awdiv@dividend+1,w
  2496  03CF  1D03               	skipz
  2497  03D0  2BD3               	goto	u695
  2498  03D1  0870               	movf	___awdiv@divisor,w
  2499  03D2  0272               	subwf	___awdiv@dividend,w
  2500  03D3                     u695:
  2501  03D3  1C03               	skipc
  2502  03D4  2BD6               	goto	u691
  2503  03D5  2BD7               	goto	u690
  2504  03D6                     u691:
  2505  03D6  2BDE               	goto	l1186
  2506  03D7                     u690:
  2507  03D7                     l1182:
  2508  03D7  0870               	movf	___awdiv@divisor,w
  2509  03D8  02F2               	subwf	___awdiv@dividend,f
  2510  03D9  0871               	movf	___awdiv@divisor+1,w
  2511  03DA  1C03               	skipc
  2512  03DB  03F3               	decf	___awdiv@dividend+1,f
  2513  03DC  02F3               	subwf	___awdiv@dividend+1,f
  2514  03DD                     l1184:
  2515  03DD  1477               	bsf	___awdiv@quotient,0
  2516  03DE                     l1186:
  2517  03DE  3001               	movlw	1
  2518  03DF                     u705:
  2519  03DF  1003               	clrc
  2520  03E0  0CF1               	rrf	___awdiv@divisor+1,f
  2521  03E1  0CF0               	rrf	___awdiv@divisor,f
  2522  03E2  3EFF               	addlw	-1
  2523  03E3  1D03               	skipz
  2524  03E4  2BDF               	goto	u705
  2525  03E5                     l1188:
  2526  03E5  3001               	movlw	1
  2527  03E6  02F5               	subwf	___awdiv@counter,f
  2528  03E7  1D03               	btfss	3,2
  2529  03E8  2BEA               	goto	u711
  2530  03E9  2BEB               	goto	u710
  2531  03EA                     u711:
  2532  03EA  2BC6               	goto	l1180
  2533  03EB                     u710:
  2534  03EB                     l1190:
  2535  03EB  0876               	movf	___awdiv@sign,w
  2536  03EC  1903               	btfsc	3,2
  2537  03ED  2BEF               	goto	u721
  2538  03EE  2BF0               	goto	u720
  2539  03EF                     u721:
  2540  03EF  2BF5               	goto	l1194
  2541  03F0                     u720:
  2542  03F0                     l1192:
  2543  03F0  09F7               	comf	___awdiv@quotient,f
  2544  03F1  09F8               	comf	___awdiv@quotient+1,f
  2545  03F2  0AF7               	incf	___awdiv@quotient,f
  2546  03F3  1903               	skipnz
  2547  03F4  0AF8               	incf	___awdiv@quotient+1,f
  2548  03F5                     l1194:
  2549  03F5  0878               	movf	___awdiv@quotient+1,w
  2550  03F6  00F1               	movwf	?___awdiv+1
  2551  03F7  0877               	movf	___awdiv@quotient,w
  2552  03F8  00F0               	movwf	?___awdiv
  2553  03F9                     l375:
  2554  03F9  0008               	return
  2555  03FA                     __end_of___awdiv:
  2556                           
  2557                           	psect	text13
  2558  0286                     __ptext13:	
  2559 ;; *************** function _Lcd_Start *****************
  2560 ;; Defined at:
  2561 ;;		line 70 in file "./lcd.h"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  i               2    0        int 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0, pclath, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2575 ;;      Params:         0       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0
  2577 ;;      Temps:          2       0       0       0       0
  2578 ;;      Totals:         2       0       0       0       0
  2579 ;;Total ram usage:        2 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 2
  2582 ;; This function calls:
  2583 ;;		_Lcd_Cmd
  2584 ;;		_Lcd_SetBit
  2585 ;; This function is called by:
  2586 ;;		_main
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590  0286                     _Lcd_Start:	
  2591                           ;psect for function _Lcd_Start
  2592                           
  2593  0286                     l1374:	
  2594                           ;incstack = 0
  2595                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  2596                           
  2597                           
  2598                           ;./lcd.h: 72:   Lcd_SetBit(0x00);
  2599  0286  3000               	movlw	0
  2600  0287  120A  118A  20AD  120A  118A  	fcall	_Lcd_SetBit
  2601  028C                     l1376:
  2602  028C                     l1378:
  2603  028C                     l1386:
  2604                           
  2605                           ;./lcd.h: 74:   Lcd_Cmd(0x03);
  2606  028C  3003               	movlw	3
  2607  028D  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2608  0292                     l1388:
  2609                           
  2610                           ;./lcd.h: 75:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2611  0292  3021               	movlw	33
  2612  0293  00F5               	movwf	??_Lcd_Start+1
  2613  0294  3076               	movlw	118
  2614  0295  00F4               	movwf	??_Lcd_Start
  2615  0296                     u1077:
  2616  0296  0BF4               	decfsz	??_Lcd_Start,f
  2617  0297  2A96               	goto	u1077
  2618  0298  0BF5               	decfsz	??_Lcd_Start+1,f
  2619  0299  2A96               	goto	u1077
  2620  029A  0000               	nop
  2621  029B                     l1390:
  2622                           
  2623                           ;./lcd.h: 76:   Lcd_Cmd(0x03);
  2624  029B  3003               	movlw	3
  2625  029C  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2626                           
  2627                           ;./lcd.h: 77:     _delay((unsigned long)((11)*(20000000/4000.0)));
  2628  02A1  3048               	movlw	72
  2629  02A2  00F5               	movwf	??_Lcd_Start+1
  2630  02A3  306C               	movlw	108
  2631  02A4  00F4               	movwf	??_Lcd_Start
  2632  02A5                     u1087:
  2633  02A5  0BF4               	decfsz	??_Lcd_Start,f
  2634  02A6  2AA5               	goto	u1087
  2635  02A7  0BF5               	decfsz	??_Lcd_Start+1,f
  2636  02A8  2AA5               	goto	u1087
  2637  02A9  0000               	nop
  2638  02AA                     l1392:
  2639                           
  2640                           ;./lcd.h: 78:   Lcd_Cmd(0x03);
  2641  02AA  3003               	movlw	3
  2642  02AB  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2643  02B0                     l1394:
  2644                           
  2645                           ;./lcd.h: 79:   Lcd_Cmd(0x02);
  2646  02B0  3002               	movlw	2
  2647  02B1  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2648  02B6                     l1396:
  2649                           
  2650                           ;./lcd.h: 80:   Lcd_Cmd(0x02);
  2651  02B6  3002               	movlw	2
  2652  02B7  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2653  02BC                     l1398:
  2654                           
  2655                           ;./lcd.h: 81:   Lcd_Cmd(0x08);
  2656  02BC  3008               	movlw	8
  2657  02BD  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2658  02C2                     l1400:
  2659                           
  2660                           ;./lcd.h: 82:   Lcd_Cmd(0x00);
  2661  02C2  3000               	movlw	0
  2662  02C3  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2663  02C8                     l1402:
  2664                           
  2665                           ;./lcd.h: 83:   Lcd_Cmd(0x0C);
  2666  02C8  300C               	movlw	12
  2667  02C9  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2668  02CE                     l1404:
  2669                           
  2670                           ;./lcd.h: 84:   Lcd_Cmd(0x00);
  2671  02CE  3000               	movlw	0
  2672  02CF  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2673  02D4                     l1406:
  2674                           
  2675                           ;./lcd.h: 85:   Lcd_Cmd(0x06);
  2676  02D4  3006               	movlw	6
  2677  02D5  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2678  02DA                     l82:
  2679  02DA  0008               	return
  2680  02DB                     __end_of_Lcd_Start:
  2681                           
  2682                           	psect	text14
  2683  01E1                     __ptext14:	
  2684 ;; *************** function _Lcd_Set_Cursor *****************
  2685 ;; Defined at:
  2686 ;;		line 49 in file "./lcd.h"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  a               1    wreg     unsigned char 
  2689 ;;  b               1    4[COMMON] unsigned char 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  a               1    7[COMMON] unsigned char 
  2692 ;;  temp            1   10[COMMON] unsigned char 
  2693 ;;  y               1    9[COMMON] unsigned char 
  2694 ;;  z               1    8[COMMON] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, pclath, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         1       0       0       0       0
  2705 ;;      Locals:         4       0       0       0       0
  2706 ;;      Temps:          2       0       0       0       0
  2707 ;;      Totals:         7       0       0       0       0
  2708 ;;Total ram usage:        7 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 2
  2711 ;; This function calls:
  2712 ;;		_Lcd_Cmd
  2713 ;; This function is called by:
  2714 ;;		_main
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718  01E1                     _Lcd_Set_Cursor:	
  2719                           ;psect for function _Lcd_Set_Cursor
  2720                           
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2724                           ;Lcd_Set_Cursor@a stored from wreg
  2725  01E1  00F7               	movwf	Lcd_Set_Cursor@a
  2726  01E2                     l1354:
  2727                           
  2728                           ;./lcd.h: 49: void Lcd_Set_Cursor(char a, char b);./lcd.h: 50: {;./lcd.h: 51:     char t
      +                          emp,z,y;;./lcd.h: 52:     if(a== 1)
  2729  01E2  0377               	decf	Lcd_Set_Cursor@a,w
  2730  01E3  1D03               	btfss	3,2
  2731  01E4  29E6               	goto	u991
  2732  01E5  29E7               	goto	u990
  2733  01E6                     u991:
  2734  01E6  2A0A               	goto	l1364
  2735  01E7                     u990:
  2736  01E7                     l1356:
  2737                           
  2738                           ;./lcd.h: 53:     {;./lcd.h: 54:       temp = 0x80 + b - 1;
  2739  01E7  0874               	movf	Lcd_Set_Cursor@b,w
  2740  01E8  3E7F               	addlw	127
  2741  01E9  00F5               	movwf	??_Lcd_Set_Cursor
  2742  01EA  0875               	movf	??_Lcd_Set_Cursor,w
  2743  01EB  00FA               	movwf	Lcd_Set_Cursor@temp
  2744                           
  2745                           ;./lcd.h: 55:         z = temp>>4;
  2746  01EC  087A               	movf	Lcd_Set_Cursor@temp,w
  2747  01ED  00F5               	movwf	??_Lcd_Set_Cursor
  2748  01EE  3004               	movlw	4
  2749  01EF                     u1005:
  2750  01EF  1003               	clrc
  2751  01F0  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2752  01F1  3EFF               	addlw	-1
  2753  01F2  1D03               	skipz
  2754  01F3  29EF               	goto	u1005
  2755  01F4  0875               	movf	??_Lcd_Set_Cursor,w
  2756  01F5  00F6               	movwf	??_Lcd_Set_Cursor+1
  2757  01F6  0876               	movf	??_Lcd_Set_Cursor+1,w
  2758  01F7  00F8               	movwf	Lcd_Set_Cursor@z
  2759  01F8                     l1358:
  2760                           
  2761                           ;./lcd.h: 56:         y = temp & 0x0F;
  2762  01F8  087A               	movf	Lcd_Set_Cursor@temp,w
  2763  01F9  390F               	andlw	15
  2764  01FA  00F5               	movwf	??_Lcd_Set_Cursor
  2765  01FB  0875               	movf	??_Lcd_Set_Cursor,w
  2766  01FC  00F9               	movwf	Lcd_Set_Cursor@y
  2767  01FD                     l1360:
  2768                           
  2769                           ;./lcd.h: 57:         Lcd_Cmd(z);
  2770  01FD  0878               	movf	Lcd_Set_Cursor@z,w
  2771  01FE  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2772  0203                     l1362:
  2773                           
  2774                           ;./lcd.h: 58:         Lcd_Cmd(y);
  2775  0203  0879               	movf	Lcd_Set_Cursor@y,w
  2776  0204  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2777                           
  2778                           ;./lcd.h: 59:     }
  2779  0209  2A32               	goto	l77
  2780  020A                     l1364:
  2781  020A  3002               	movlw	2
  2782  020B  0677               	xorwf	Lcd_Set_Cursor@a,w
  2783  020C  1D03               	btfss	3,2
  2784  020D  2A0F               	goto	u1011
  2785  020E  2A10               	goto	u1010
  2786  020F                     u1011:
  2787  020F  2A32               	goto	l77
  2788  0210                     u1010:
  2789  0210                     l1366:
  2790                           
  2791                           ;./lcd.h: 61:     {;./lcd.h: 62:         temp = 0xC0 + b - 1;
  2792  0210  0874               	movf	Lcd_Set_Cursor@b,w
  2793  0211  3EBF               	addlw	191
  2794  0212  00F5               	movwf	??_Lcd_Set_Cursor
  2795  0213  0875               	movf	??_Lcd_Set_Cursor,w
  2796  0214  00FA               	movwf	Lcd_Set_Cursor@temp
  2797                           
  2798                           ;./lcd.h: 63:         z = temp>>4;
  2799  0215  087A               	movf	Lcd_Set_Cursor@temp,w
  2800  0216  00F5               	movwf	??_Lcd_Set_Cursor
  2801  0217  3004               	movlw	4
  2802  0218                     u1025:
  2803  0218  1003               	clrc
  2804  0219  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2805  021A  3EFF               	addlw	-1
  2806  021B  1D03               	skipz
  2807  021C  2A18               	goto	u1025
  2808  021D  0875               	movf	??_Lcd_Set_Cursor,w
  2809  021E  00F6               	movwf	??_Lcd_Set_Cursor+1
  2810  021F  0876               	movf	??_Lcd_Set_Cursor+1,w
  2811  0220  00F8               	movwf	Lcd_Set_Cursor@z
  2812  0221                     l1368:
  2813                           
  2814                           ;./lcd.h: 64:         y = temp & 0x0F;
  2815  0221  087A               	movf	Lcd_Set_Cursor@temp,w
  2816  0222  390F               	andlw	15
  2817  0223  00F5               	movwf	??_Lcd_Set_Cursor
  2818  0224  0875               	movf	??_Lcd_Set_Cursor,w
  2819  0225  00F9               	movwf	Lcd_Set_Cursor@y
  2820  0226                     l1370:
  2821                           
  2822                           ;./lcd.h: 65:         Lcd_Cmd(z);
  2823  0226  0878               	movf	Lcd_Set_Cursor@z,w
  2824  0227  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2825  022C                     l1372:
  2826                           
  2827                           ;./lcd.h: 66:         Lcd_Cmd(y);
  2828  022C  0879               	movf	Lcd_Set_Cursor@y,w
  2829  022D  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  2830  0232                     l77:
  2831  0232  0008               	return
  2832  0233                     __end_of_Lcd_Set_Cursor:
  2833                           
  2834                           	psect	text15
  2835  00CF                     __ptext15:	
  2836 ;; *************** function _Lcd_Print_String *****************
  2837 ;; Defined at:
  2838 ;;		line 104 in file "./lcd.h"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  a               1    wreg     PTR unsigned char 
  2841 ;;		 -> STR_4(7), STR_3(7), STR_2(17), STR_1(15), 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  a               1   11[COMMON] PTR unsigned char 
  2844 ;;		 -> STR_4(7), STR_3(7), STR_2(17), STR_1(15), 
  2845 ;;  i               2    9[COMMON] int 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2855 ;;      Params:         0       0       0       0       0
  2856 ;;      Locals:         3       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0
  2858 ;;      Totals:         3       0       0       0       0
  2859 ;;Total ram usage:        3 bytes
  2860 ;; Hardware stack levels used: 1
  2861 ;; Hardware stack levels required when called: 2
  2862 ;; This function calls:
  2863 ;;		_Lcd_Print_Char
  2864 ;; This function is called by:
  2865 ;;		_main
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869  00CF                     _Lcd_Print_String:	
  2870                           ;psect for function _Lcd_Print_String
  2871                           
  2872                           
  2873                           ;incstack = 0
  2874                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2875                           ;Lcd_Print_String@a stored from wreg
  2876  00CF  00FB               	movwf	Lcd_Print_String@a
  2877  00D0                     l1408:
  2878                           
  2879                           ;./lcd.h: 104: void Lcd_Print_String(char *a);./lcd.h: 105: {;./lcd.h: 106:     int i;;.
      +                          /lcd.h: 107:     for(i=0;a[i]!='\0';i++)
  2880  00D0  01F9               	clrf	Lcd_Print_String@i
  2881  00D1  01FA               	clrf	Lcd_Print_String@i+1
  2882  00D2  28E6               	goto	l1414
  2883  00D3                     l1410:
  2884                           
  2885                           ;./lcd.h: 108:        Lcd_Print_Char(a[i]);
  2886  00D3  0879               	movf	Lcd_Print_String@i,w
  2887  00D4  077B               	addwf	Lcd_Print_String@a,w
  2888  00D5  0084               	movwf	4
  2889  00D6  120A  118A  2003  120A  118A  	fcall	stringdir
  2890  00DB  120A  118A  2334  120A  118A  	fcall	_Lcd_Print_Char
  2891  00E0                     l1412:
  2892  00E0  3001               	movlw	1
  2893  00E1  07F9               	addwf	Lcd_Print_String@i,f
  2894  00E2  1803               	skipnc
  2895  00E3  0AFA               	incf	Lcd_Print_String@i+1,f
  2896  00E4  3000               	movlw	0
  2897  00E5  07FA               	addwf	Lcd_Print_String@i+1,f
  2898  00E6                     l1414:
  2899  00E6  0879               	movf	Lcd_Print_String@i,w
  2900  00E7  077B               	addwf	Lcd_Print_String@a,w
  2901  00E8  0084               	movwf	4
  2902  00E9  120A  118A  2003  120A  118A  	fcall	stringdir
  2903  00EE  3A00               	xorlw	0
  2904  00EF  1D03               	skipz
  2905  00F0  28F2               	goto	u1031
  2906  00F1  28F3               	goto	u1030
  2907  00F2                     u1031:
  2908  00F2  28D3               	goto	l1410
  2909  00F3                     u1030:
  2910  00F3                     l95:
  2911  00F3  0008               	return
  2912  00F4                     __end_of_Lcd_Print_String:
  2913                           
  2914                           	psect	text16
  2915  0334                     __ptext16:	
  2916 ;; *************** function _Lcd_Print_Char *****************
  2917 ;; Defined at:
  2918 ;;		line 88 in file "./lcd.h"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  data            1    wreg     unsigned char 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  data            1    4[COMMON] unsigned char 
  2923 ;;  i               2    7[COMMON] int 
  2924 ;;  i               2    5[COMMON] int 
  2925 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  2926 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         0       0       0       0       0
  2937 ;;      Locals:         7       0       0       0       0
  2938 ;;      Temps:          1       0       0       0       0
  2939 ;;      Totals:         8       0       0       0       0
  2940 ;;Total ram usage:        8 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; Hardware stack levels required when called: 1
  2943 ;; This function calls:
  2944 ;;		_Lcd_SetBit
  2945 ;; This function is called by:
  2946 ;;		_Lcd_Print_String
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951  0334                     _Lcd_Print_Char:	
  2952                           ;psect for function _Lcd_Print_Char
  2953                           
  2954                           
  2955                           ;incstack = 0
  2956                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2957                           ;Lcd_Print_Char@data stored from wreg
  2958  0334  00F4               	movwf	Lcd_Print_Char@data
  2959  0335                     l1246:
  2960                           
  2961                           ;./lcd.h: 88: void Lcd_Print_Char(char data);./lcd.h: 89: {;./lcd.h: 90:    char Lower_N
      +                          ibble,Upper_Nibble;;./lcd.h: 91:    Lower_Nibble = data&0x0F;
  2962  0335  0874               	movf	Lcd_Print_Char@data,w
  2963  0336  390F               	andlw	15
  2964  0337  00F1               	movwf	??_Lcd_Print_Char
  2965  0338  0871               	movf	??_Lcd_Print_Char,w
  2966  0339  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  2967                           
  2968                           ;./lcd.h: 92:    Upper_Nibble = data&0xF0;
  2969  033A  0874               	movf	Lcd_Print_Char@data,w
  2970  033B  39F0               	andlw	240
  2971  033C  00F1               	movwf	??_Lcd_Print_Char
  2972  033D  0871               	movf	??_Lcd_Print_Char,w
  2973  033E  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  2974  033F                     l1248:
  2975                           
  2976                           ;./lcd.h: 93:    RD2 = 1;
  2977  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2978  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2979  0341  1508               	bsf	8,2	;volatile
  2980  0342                     l1250:
  2981                           
  2982                           ;./lcd.h: 94:    Lcd_SetBit(Upper_Nibble>>4);
  2983  0342  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  2984  0343  00F1               	movwf	??_Lcd_Print_Char
  2985  0344  3004               	movlw	4
  2986  0345                     u825:
  2987  0345  1003               	clrc
  2988  0346  0CF1               	rrf	??_Lcd_Print_Char,f
  2989  0347  3EFF               	addlw	-1
  2990  0348  1D03               	skipz
  2991  0349  2B45               	goto	u825
  2992  034A  0871               	movf	??_Lcd_Print_Char,w
  2993  034B  120A  118A  20AD  120A  118A  	fcall	_Lcd_SetBit
  2994  0350                     l1252:
  2995                           
  2996                           ;./lcd.h: 95:    RD3 = 1;
  2997  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0351  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0352  1588               	bsf	8,3	;volatile
  3000  0353                     l1254:
  3001                           
  3002                           ;./lcd.h: 96:    for(int i=2130483; i<=0; i--) __nop();
  3003  0353  3033               	movlw	51
  3004  0354  00F5               	movwf	Lcd_Print_Char@i
  3005  0355  3082               	movlw	130
  3006  0356  00F6               	movwf	Lcd_Print_Char@i+1
  3007  0357                     l85:
  3008  0357  0000               	nop
  3009  0358                     l1260:
  3010  0358  30FF               	movlw	255
  3011  0359  07F5               	addwf	Lcd_Print_Char@i,f
  3012  035A  1803               	skipnc
  3013  035B  0AF6               	incf	Lcd_Print_Char@i+1,f
  3014  035C  30FF               	movlw	255
  3015  035D  07F6               	addwf	Lcd_Print_Char@i+1,f
  3016  035E                     l1262:
  3017  035E  0876               	movf	Lcd_Print_Char@i+1,w
  3018  035F  3A80               	xorlw	128
  3019  0360  00FF               	movwf	btemp+1
  3020  0361  3080               	movlw	128
  3021  0362  027F               	subwf	btemp+1,w
  3022  0363  1D03               	skipz
  3023  0364  2B67               	goto	u835
  3024  0365  3001               	movlw	1
  3025  0366  0275               	subwf	Lcd_Print_Char@i,w
  3026  0367                     u835:
  3027  0367  1C03               	skipc
  3028  0368  2B6A               	goto	u831
  3029  0369  2B6B               	goto	u830
  3030  036A                     u831:
  3031  036A  2B57               	goto	l85
  3032  036B                     u830:
  3033  036B                     l86:
  3034                           
  3035                           ;./lcd.h: 97:    RD3 = 0;
  3036  036B  1283               	bcf	3,5	;RP0=0, select bank0
  3037  036C  1303               	bcf	3,6	;RP1=0, select bank0
  3038  036D  1188               	bcf	8,3	;volatile
  3039  036E                     l1264:
  3040                           
  3041                           ;./lcd.h: 98:    Lcd_SetBit(Lower_Nibble);
  3042  036E  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  3043  036F  120A  118A  20AD  120A  118A  	fcall	_Lcd_SetBit
  3044  0374                     l1266:
  3045                           
  3046                           ;./lcd.h: 99:    RD3 = 1;
  3047  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0375  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0376  1588               	bsf	8,3	;volatile
  3050  0377                     l1268:
  3051                           
  3052                           ;./lcd.h: 100:    for(int i=2130483; i<=0; i--) __nop();
  3053  0377  3033               	movlw	51
  3054  0378  00F7               	movwf	Lcd_Print_Char@i_77
  3055  0379  3082               	movlw	130
  3056  037A  00F8               	movwf	Lcd_Print_Char@i_77+1
  3057  037B                     l87:
  3058  037B  0000               	nop
  3059  037C                     l1274:
  3060  037C  30FF               	movlw	255
  3061  037D  07F7               	addwf	Lcd_Print_Char@i_77,f
  3062  037E  1803               	skipnc
  3063  037F  0AF8               	incf	Lcd_Print_Char@i_77+1,f
  3064  0380  30FF               	movlw	255
  3065  0381  07F8               	addwf	Lcd_Print_Char@i_77+1,f
  3066  0382                     l1276:
  3067  0382  0878               	movf	Lcd_Print_Char@i_77+1,w
  3068  0383  3A80               	xorlw	128
  3069  0384  00FF               	movwf	btemp+1
  3070  0385  3080               	movlw	128
  3071  0386  027F               	subwf	btemp+1,w
  3072  0387  1D03               	skipz
  3073  0388  2B8B               	goto	u845
  3074  0389  3001               	movlw	1
  3075  038A  0277               	subwf	Lcd_Print_Char@i_77,w
  3076  038B                     u845:
  3077  038B  1C03               	skipc
  3078  038C  2B8E               	goto	u841
  3079  038D  2B8F               	goto	u840
  3080  038E                     u841:
  3081  038E  2B7B               	goto	l87
  3082  038F                     u840:
  3083  038F                     l88:
  3084                           
  3085                           ;./lcd.h: 101:    RD3 = 0;
  3086  038F  1283               	bcf	3,5	;RP0=0, select bank0
  3087  0390  1303               	bcf	3,6	;RP1=0, select bank0
  3088  0391  1188               	bcf	8,3	;volatile
  3089  0392                     l89:
  3090  0392  0008               	return
  3091  0393                     __end_of_Lcd_Print_Char:
  3092                           
  3093                           	psect	text17
  3094  0066                     __ptext17:	
  3095 ;; *************** function _Lcd_Clear *****************
  3096 ;; Defined at:
  3097 ;;		line 43 in file "./lcd.h"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  2   70[None  ] int 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0, pclath, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3111 ;;      Params:         0       0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0
  3114 ;;      Totals:         0       0       0       0       0
  3115 ;;Total ram usage:        0 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 2
  3118 ;; This function calls:
  3119 ;;		_Lcd_Cmd
  3120 ;; This function is called by:
  3121 ;;		_main
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125  0066                     _Lcd_Clear:	
  3126                           ;psect for function _Lcd_Clear
  3127                           
  3128  0066                     l1352:	
  3129                           ;incstack = 0
  3130                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3131                           
  3132                           
  3133                           ;./lcd.h: 45:     Lcd_Cmd(0);
  3134  0066  3000               	movlw	0
  3135  0067  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  3136                           
  3137                           ;./lcd.h: 46:     Lcd_Cmd(1);
  3138  006C  3001               	movlw	1
  3139  006D  120A  118A  2093  120A  118A  	fcall	_Lcd_Cmd
  3140  0072                     l71:
  3141  0072  0008               	return
  3142  0073                     __end_of_Lcd_Clear:
  3143                           
  3144                           	psect	text18
  3145  0093                     __ptext18:	
  3146 ;; *************** function _Lcd_Cmd *****************
  3147 ;; Defined at:
  3148 ;;		line 34 in file "./lcd.h"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  a               1    wreg     unsigned char 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  a               1    3[COMMON] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         0       0       0       0       0
  3163 ;;      Locals:         1       0       0       0       0
  3164 ;;      Temps:          2       0       0       0       0
  3165 ;;      Totals:         3       0       0       0       0
  3166 ;;Total ram usage:        3 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 1
  3169 ;; This function calls:
  3170 ;;		_Lcd_SetBit
  3171 ;; This function is called by:
  3172 ;;		_Lcd_Clear
  3173 ;;		_Lcd_Set_Cursor
  3174 ;;		_Lcd_Start
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178  0093                     _Lcd_Cmd:	
  3179                           ;psect for function _Lcd_Cmd
  3180                           
  3181                           
  3182                           ;incstack = 0
  3183                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3184                           ;Lcd_Cmd@a stored from wreg
  3185  0093  00F3               	movwf	Lcd_Cmd@a
  3186  0094                     l1236:
  3187                           
  3188                           ;./lcd.h: 34: void Lcd_Cmd(char a);./lcd.h: 35: {;./lcd.h: 36:     RD2 = 0;
  3189  0094  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0095  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0096  1108               	bcf	8,2	;volatile
  3192  0097                     l1238:
  3193                           
  3194                           ;./lcd.h: 37:     Lcd_SetBit(a);
  3195  0097  0873               	movf	Lcd_Cmd@a,w
  3196  0098  120A  118A  20AD  120A  118A  	fcall	_Lcd_SetBit
  3197  009D                     l1240:
  3198                           
  3199                           ;./lcd.h: 38:     RD3 = 1;
  3200  009D  1283               	bcf	3,5	;RP0=0, select bank0
  3201  009E  1303               	bcf	3,6	;RP1=0, select bank0
  3202  009F  1588               	bsf	8,3	;volatile
  3203  00A0                     l1242:
  3204                           
  3205                           ;./lcd.h: 39:         _delay((unsigned long)((4)*(20000000/4000.0)));
  3206  00A0  301A               	movlw	26
  3207  00A1  00F2               	movwf	??_Lcd_Cmd+1
  3208  00A2  30F8               	movlw	248
  3209  00A3  00F1               	movwf	??_Lcd_Cmd
  3210  00A4                     u1097:
  3211  00A4  0BF1               	decfsz	??_Lcd_Cmd,f
  3212  00A5  28A4               	goto	u1097
  3213  00A6  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3214  00A7  28A4               	goto	u1097
  3215  00A8  0000               	nop
  3216  00A9                     l1244:
  3217                           
  3218                           ;./lcd.h: 40:         RD3 = 0;
  3219  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  3220  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  3221  00AB  1188               	bcf	8,3	;volatile
  3222  00AC                     l68:
  3223  00AC  0008               	return
  3224  00AD                     __end_of_Lcd_Cmd:
  3225                           
  3226                           	psect	text19
  3227  00AD                     __ptext19:	
  3228 ;; *************** function _Lcd_SetBit *****************
  3229 ;; Defined at:
  3230 ;;		line 11 in file "./lcd.h"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  data_bit        1    wreg     unsigned char 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  data_bit        1    0[COMMON] unsigned char 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3244 ;;      Params:         0       0       0       0       0
  3245 ;;      Locals:         1       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0
  3247 ;;      Totals:         1       0       0       0       0
  3248 ;;Total ram usage:        1 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_Lcd_Cmd
  3254 ;;		_Lcd_Start
  3255 ;;		_Lcd_Print_Char
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259  00AD                     _Lcd_SetBit:	
  3260                           ;psect for function _Lcd_SetBit
  3261                           
  3262                           
  3263                           ;incstack = 0
  3264                           ; Regs used in _Lcd_SetBit: [wreg]
  3265                           ;Lcd_SetBit@data_bit stored from wreg
  3266  00AD  00F0               	movwf	Lcd_SetBit@data_bit
  3267  00AE                     l1124:
  3268                           
  3269                           ;./lcd.h: 11: void Lcd_SetBit(char data_bit);./lcd.h: 12: {;./lcd.h: 13:     if(data_bit
      +                          & 1)
  3270  00AE  1C70               	btfss	Lcd_SetBit@data_bit,0
  3271  00AF  28B1               	goto	u531
  3272  00B0  28B2               	goto	u530
  3273  00B1                     u531:
  3274  00B1  28B6               	goto	l57
  3275  00B2                     u530:
  3276  00B2                     l1126:
  3277                           
  3278                           ;./lcd.h: 14:         RD4 = 1;
  3279  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  3280  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  3281  00B4  1608               	bsf	8,4	;volatile
  3282  00B5  28B9               	goto	l58
  3283  00B6                     l57:	
  3284                           ;./lcd.h: 15:     else
  3285                           
  3286                           
  3287                           ;./lcd.h: 16:         RD4 = 0;
  3288  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  3289  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  3290  00B8  1208               	bcf	8,4	;volatile
  3291  00B9                     l58:
  3292                           
  3293                           ;./lcd.h: 18:     if(data_bit& 2)
  3294  00B9  1CF0               	btfss	Lcd_SetBit@data_bit,1
  3295  00BA  28BC               	goto	u541
  3296  00BB  28BD               	goto	u540
  3297  00BC                     u541:
  3298  00BC  28BF               	goto	l59
  3299  00BD                     u540:
  3300  00BD                     l1128:
  3301                           
  3302                           ;./lcd.h: 19:         RD5 = 1;
  3303  00BD  1688               	bsf	8,5	;volatile
  3304  00BE  28C0               	goto	l60
  3305  00BF                     l59:	
  3306                           ;./lcd.h: 20:     else
  3307                           
  3308                           
  3309                           ;./lcd.h: 21:         RD5 = 0;
  3310  00BF  1288               	bcf	8,5	;volatile
  3311  00C0                     l60:
  3312                           
  3313                           ;./lcd.h: 23:     if(data_bit& 4)
  3314  00C0  1D70               	btfss	Lcd_SetBit@data_bit,2
  3315  00C1  28C3               	goto	u551
  3316  00C2  28C4               	goto	u550
  3317  00C3                     u551:
  3318  00C3  28C6               	goto	l61
  3319  00C4                     u550:
  3320  00C4                     l1130:
  3321                           
  3322                           ;./lcd.h: 24:         RD6 = 1;
  3323  00C4  1708               	bsf	8,6	;volatile
  3324  00C5  28C7               	goto	l62
  3325  00C6                     l61:	
  3326                           ;./lcd.h: 25:     else
  3327                           
  3328                           
  3329                           ;./lcd.h: 26:         RD6 = 0;
  3330  00C6  1308               	bcf	8,6	;volatile
  3331  00C7                     l62:
  3332                           
  3333                           ;./lcd.h: 28:     if(data_bit& 8)
  3334  00C7  1DF0               	btfss	Lcd_SetBit@data_bit,3
  3335  00C8  28CA               	goto	u561
  3336  00C9  28CB               	goto	u560
  3337  00CA                     u561:
  3338  00CA  28CD               	goto	l63
  3339  00CB                     u560:
  3340  00CB                     l1132:
  3341                           
  3342                           ;./lcd.h: 29:         RD7 = 1;
  3343  00CB  1788               	bsf	8,7	;volatile
  3344  00CC  28CE               	goto	l65
  3345  00CD                     l63:	
  3346                           ;./lcd.h: 30:     else
  3347                           
  3348                           
  3349                           ;./lcd.h: 31:         RD7 = 0;
  3350  00CD  1388               	bcf	8,7	;volatile
  3351  00CE                     l65:
  3352  00CE  0008               	return
  3353  00CF                     __end_of_Lcd_SetBit:
  3354                           
  3355                           	psect	text20
  3356  0233                     __ptext20:	
  3357 ;; *************** function _I2C_Initialize *****************
  3358 ;; Defined at:
  3359 ;;		line 5 in file "./PIC16F877a_I2C.h"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  feq_K           4   13[BANK0 ] const unsigned long 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;		None
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0, pclath, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3373 ;;      Params:         0       4       0       0       0
  3374 ;;      Locals:         0       0       0       0       0
  3375 ;;      Temps:          0       4       0       0       0
  3376 ;;      Totals:         0       8       0       0       0
  3377 ;;Total ram usage:        8 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 1
  3380 ;; This function calls:
  3381 ;;		___lldiv
  3382 ;;		___lmul
  3383 ;; This function is called by:
  3384 ;;		_main
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388  0233                     _I2C_Initialize:	
  3389                           ;psect for function _I2C_Initialize
  3390                           
  3391  0233                     l1416:	
  3392                           ;incstack = 0
  3393                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3394                           
  3395                           
  3396                           ;./PIC16F877a_I2C.h: 5: void I2C_Initialize(const unsigned long feq_K);./PIC16F877a_I2C.
      +                          h: 6: {;./PIC16F877a_I2C.h: 7:   TRISC3 = 1; TRISC4 = 1;
  3397  0233  1683               	bsf	3,5	;RP0=1, select bank1
  3398  0234  1303               	bcf	3,6	;RP1=0, select bank1
  3399  0235  1587               	bsf	7,3	;volatile
  3400  0236  1607               	bsf	7,4	;volatile
  3401  0237                     l1418:
  3402                           
  3403                           ;./PIC16F877a_I2C.h: 9:   SSPCON = 0b00101000;
  3404  0237  3028               	movlw	40
  3405  0238  1283               	bcf	3,5	;RP0=0, select bank0
  3406  0239  1303               	bcf	3,6	;RP1=0, select bank0
  3407  023A  0094               	movwf	20	;volatile
  3408  023B                     l1420:
  3409                           
  3410                           ;./PIC16F877a_I2C.h: 10:   SSPCON2 = 0b00000000;
  3411  023B  1683               	bsf	3,5	;RP0=1, select bank1
  3412  023C  1303               	bcf	3,6	;RP1=0, select bank1
  3413  023D  0191               	clrf	17	;volatile
  3414  023E                     l1422:
  3415                           
  3416                           ;./PIC16F877a_I2C.h: 12:   SSPADD = (20000000/(4*feq_K*100))-1;
  3417  023E  1283               	bcf	3,5	;RP0=0, select bank0
  3418  023F  1303               	bcf	3,6	;RP1=0, select bank0
  3419  0240  082D               	movf	I2C_Initialize@feq_K,w
  3420  0241  00B1               	movwf	??_I2C_Initialize
  3421  0242  082E               	movf	I2C_Initialize@feq_K+1,w
  3422  0243  00B2               	movwf	??_I2C_Initialize+1
  3423  0244  082F               	movf	I2C_Initialize@feq_K+2,w
  3424  0245  00B3               	movwf	??_I2C_Initialize+2
  3425  0246  0830               	movf	I2C_Initialize@feq_K+3,w
  3426  0247  00B4               	movwf	??_I2C_Initialize+3
  3427  0248  3002               	movlw	2
  3428  0249                     u1045:
  3429  0249  1003               	clrc
  3430  024A  0DB1               	rlf	??_I2C_Initialize,f
  3431  024B  0DB2               	rlf	??_I2C_Initialize+1,f
  3432  024C  0DB3               	rlf	??_I2C_Initialize+2,f
  3433  024D  0DB4               	rlf	??_I2C_Initialize+3,f
  3434  024E                     u1040:
  3435  024E  3EFF               	addlw	-1
  3436  024F  1D03               	skipz
  3437  0250  2A49               	goto	u1045
  3438  0251  0834               	movf	??_I2C_Initialize+3,w
  3439  0252  00F3               	movwf	___lmul@multiplier+3
  3440  0253  0833               	movf	??_I2C_Initialize+2,w
  3441  0254  00F2               	movwf	___lmul@multiplier+2
  3442  0255  0832               	movf	??_I2C_Initialize+1,w
  3443  0256  00F1               	movwf	___lmul@multiplier+1
  3444  0257  0831               	movf	??_I2C_Initialize,w
  3445  0258  00F0               	movwf	___lmul@multiplier
  3446  0259  3000               	movlw	0
  3447  025A  00F7               	movwf	___lmul@multiplicand+3
  3448  025B  3000               	movlw	0
  3449  025C  00F6               	movwf	___lmul@multiplicand+2
  3450  025D  3000               	movlw	0
  3451  025E  00F5               	movwf	___lmul@multiplicand+1
  3452  025F  3064               	movlw	100
  3453  0260  00F4               	movwf	___lmul@multiplicand
  3454  0261  120A  118A  219B  120A  118A  	fcall	___lmul
  3455  0266  0873               	movf	?___lmul+3,w
  3456  0267  1283               	bcf	3,5	;RP0=0, select bank0
  3457  0268  1303               	bcf	3,6	;RP1=0, select bank0
  3458  0269  00A3               	movwf	___lldiv@divisor+3
  3459  026A  0872               	movf	?___lmul+2,w
  3460  026B  00A2               	movwf	___lldiv@divisor+2
  3461  026C  0871               	movf	?___lmul+1,w
  3462  026D  00A1               	movwf	___lldiv@divisor+1
  3463  026E  0870               	movf	?___lmul,w
  3464  026F  00A0               	movwf	___lldiv@divisor
  3465  0270  3001               	movlw	1
  3466  0271  00A7               	movwf	___lldiv@dividend+3
  3467  0272  3031               	movlw	49
  3468  0273  00A6               	movwf	___lldiv@dividend+2
  3469  0274  302D               	movlw	45
  3470  0275  00A5               	movwf	___lldiv@dividend+1
  3471  0276  3000               	movlw	0
  3472  0277  00A4               	movwf	___lldiv@dividend
  3473  0278  120A  118A  23FA  120A  118A  	fcall	___lldiv
  3474  027D  1283               	bcf	3,5	;RP0=0, select bank0
  3475  027E  1303               	bcf	3,6	;RP1=0, select bank0
  3476  027F  0820               	movf	?___lldiv,w
  3477  0280  3EFF               	addlw	255
  3478  0281  1683               	bsf	3,5	;RP0=1, select bank1
  3479  0282  1303               	bcf	3,6	;RP1=0, select bank1
  3480  0283  0093               	movwf	19	;volatile
  3481  0284                     l1424:
  3482                           
  3483                           ;./PIC16F877a_I2C.h: 13:   SSPSTAT = 0b00000000;
  3484  0284  0194               	clrf	20	;volatile
  3485  0285                     l98:
  3486  0285  0008               	return
  3487  0286                     __end_of_I2C_Initialize:
  3488                           
  3489                           	psect	text21
  3490  019B                     __ptext21:	
  3491 ;; *************** function ___lmul *****************
  3492 ;; Defined at:
  3493 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  multiplier      4    0[COMMON] unsigned long 
  3496 ;;  multiplicand    4    4[COMMON] unsigned long 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  product         4    9[COMMON] unsigned long 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  4    0[COMMON] unsigned long 
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3508 ;;      Params:         8       0       0       0       0
  3509 ;;      Locals:         4       0       0       0       0
  3510 ;;      Temps:          1       0       0       0       0
  3511 ;;      Totals:        13       0       0       0       0
  3512 ;;Total ram usage:       13 bytes
  3513 ;; Hardware stack levels used: 1
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_I2C_Initialize
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521  019B                     ___lmul:	
  3522                           ;psect for function ___lmul
  3523                           
  3524  019B                     l1314:	
  3525                           ;incstack = 0
  3526                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3527                           
  3528  019B  3000               	movlw	0
  3529  019C  00FC               	movwf	___lmul@product+3
  3530  019D  3000               	movlw	0
  3531  019E  00FB               	movwf	___lmul@product+2
  3532  019F  3000               	movlw	0
  3533  01A0  00FA               	movwf	___lmul@product+1
  3534  01A1  3000               	movlw	0
  3535  01A2  00F9               	movwf	___lmul@product
  3536  01A3                     l1316:
  3537  01A3  1C70               	btfss	___lmul@multiplier,0
  3538  01A4  29A6               	goto	u871
  3539  01A5  29A7               	goto	u870
  3540  01A6                     u871:
  3541  01A6  29BE               	goto	l1320
  3542  01A7                     u870:
  3543  01A7                     l1318:
  3544  01A7  0874               	movf	___lmul@multiplicand,w
  3545  01A8  07F9               	addwf	___lmul@product,f
  3546  01A9  0875               	movf	___lmul@multiplicand+1,w
  3547  01AA  1103               	clrz
  3548  01AB  1803               	skipnc
  3549  01AC  3E01               	addlw	1
  3550  01AD  1903               	skipnz
  3551  01AE  29B0               	goto	u881
  3552  01AF  07FA               	addwf	___lmul@product+1,f
  3553  01B0                     u881:
  3554  01B0  0876               	movf	___lmul@multiplicand+2,w
  3555  01B1  1103               	clrz
  3556  01B2  1803               	skipnc
  3557  01B3  3E01               	addlw	1
  3558  01B4  1903               	skipnz
  3559  01B5  29B7               	goto	u882
  3560  01B6  07FB               	addwf	___lmul@product+2,f
  3561  01B7                     u882:
  3562  01B7  0877               	movf	___lmul@multiplicand+3,w
  3563  01B8  1103               	clrz
  3564  01B9  1803               	skipnc
  3565  01BA  3E01               	addlw	1
  3566  01BB  1903               	skipnz
  3567  01BC  29BE               	goto	u883
  3568  01BD  07FC               	addwf	___lmul@product+3,f
  3569  01BE                     u883:
  3570  01BE                     l1320:
  3571  01BE  3001               	movlw	1
  3572  01BF  00F8               	movwf	??___lmul
  3573  01C0                     u895:
  3574  01C0  1003               	clrc
  3575  01C1  0DF4               	rlf	___lmul@multiplicand,f
  3576  01C2  0DF5               	rlf	___lmul@multiplicand+1,f
  3577  01C3  0DF6               	rlf	___lmul@multiplicand+2,f
  3578  01C4  0DF7               	rlf	___lmul@multiplicand+3,f
  3579  01C5  0BF8               	decfsz	??___lmul,f
  3580  01C6  29C0               	goto	u895
  3581  01C7                     l1322:
  3582  01C7  3001               	movlw	1
  3583  01C8                     u905:
  3584  01C8  1003               	clrc
  3585  01C9  0CF3               	rrf	___lmul@multiplier+3,f
  3586  01CA  0CF2               	rrf	___lmul@multiplier+2,f
  3587  01CB  0CF1               	rrf	___lmul@multiplier+1,f
  3588  01CC  0CF0               	rrf	___lmul@multiplier,f
  3589  01CD  3EFF               	addlw	-1
  3590  01CE  1D03               	skipz
  3591  01CF  29C8               	goto	u905
  3592  01D0  0873               	movf	___lmul@multiplier+3,w
  3593  01D1  0472               	iorwf	___lmul@multiplier+2,w
  3594  01D2  0471               	iorwf	___lmul@multiplier+1,w
  3595  01D3  0470               	iorwf	___lmul@multiplier,w
  3596  01D4  1D03               	skipz
  3597  01D5  29D7               	goto	u911
  3598  01D6  29D8               	goto	u910
  3599  01D7                     u911:
  3600  01D7  29A3               	goto	l1316
  3601  01D8                     u910:
  3602  01D8                     l1324:
  3603  01D8  087C               	movf	___lmul@product+3,w
  3604  01D9  00F3               	movwf	?___lmul+3
  3605  01DA  087B               	movf	___lmul@product+2,w
  3606  01DB  00F2               	movwf	?___lmul+2
  3607  01DC  087A               	movf	___lmul@product+1,w
  3608  01DD  00F1               	movwf	?___lmul+1
  3609  01DE  0879               	movf	___lmul@product,w
  3610  01DF  00F0               	movwf	?___lmul
  3611  01E0                     l236:
  3612  01E0  0008               	return
  3613  01E1                     __end_of___lmul:
  3614                           
  3615                           	psect	text22
  3616  03FA                     __ptext22:	
  3617 ;; *************** function ___lldiv *****************
  3618 ;; Defined at:
  3619 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  divisor         4    0[BANK0 ] unsigned long 
  3622 ;;  dividend        4    4[BANK0 ] unsigned long 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  quotient        4    8[BANK0 ] unsigned long 
  3625 ;;  counter         1   12[BANK0 ] unsigned char 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  4    0[BANK0 ] unsigned long 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2, status,0
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3635 ;;      Params:         0       8       0       0       0
  3636 ;;      Locals:         0       5       0       0       0
  3637 ;;      Temps:          1       0       0       0       0
  3638 ;;      Totals:         1      13       0       0       0
  3639 ;;Total ram usage:       14 bytes
  3640 ;; Hardware stack levels used: 1
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_I2C_Initialize
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648  03FA                     ___lldiv:	
  3649                           ;psect for function ___lldiv
  3650                           
  3651  03FA                     l1328:	
  3652                           ;incstack = 0
  3653                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3654                           
  3655  03FA  3000               	movlw	0
  3656  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  3657  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  3658  03FD  00AB               	movwf	___lldiv@quotient+3
  3659  03FE  3000               	movlw	0
  3660  03FF  00AA               	movwf	___lldiv@quotient+2
  3661  0400  3000               	movlw	0
  3662  0401  00A9               	movwf	___lldiv@quotient+1
  3663  0402  3000               	movlw	0
  3664  0403  00A8               	movwf	___lldiv@quotient
  3665  0404  0823               	movf	___lldiv@divisor+3,w
  3666  0405  0422               	iorwf	___lldiv@divisor+2,w
  3667  0406  0421               	iorwf	___lldiv@divisor+1,w
  3668  0407  0420               	iorwf	___lldiv@divisor,w
  3669  0408  1903               	skipnz
  3670  0409  2C0B               	goto	u921
  3671  040A  2C0C               	goto	u920
  3672  040B                     u921:
  3673  040B  2C59               	goto	l1348
  3674  040C                     u920:
  3675  040C                     l1330:
  3676  040C  01AC               	clrf	___lldiv@counter
  3677  040D  0AAC               	incf	___lldiv@counter,f
  3678  040E  2C1C               	goto	l1334
  3679  040F                     l1332:
  3680  040F  3001               	movlw	1
  3681  0410  00FD               	movwf	??___lldiv
  3682  0411                     u935:
  3683  0411  1003               	clrc
  3684  0412  0DA0               	rlf	___lldiv@divisor,f
  3685  0413  0DA1               	rlf	___lldiv@divisor+1,f
  3686  0414  0DA2               	rlf	___lldiv@divisor+2,f
  3687  0415  0DA3               	rlf	___lldiv@divisor+3,f
  3688  0416  0BFD               	decfsz	??___lldiv,f
  3689  0417  2C11               	goto	u935
  3690  0418  3001               	movlw	1
  3691  0419  00FD               	movwf	??___lldiv
  3692  041A  087D               	movf	??___lldiv,w
  3693  041B  07AC               	addwf	___lldiv@counter,f
  3694  041C                     l1334:
  3695  041C  1FA3               	btfss	___lldiv@divisor+3,7
  3696  041D  2C1F               	goto	u941
  3697  041E  2C20               	goto	u940
  3698  041F                     u941:
  3699  041F  2C0F               	goto	l1332
  3700  0420                     u940:
  3701  0420                     l1336:
  3702  0420  3001               	movlw	1
  3703  0421  00FD               	movwf	??___lldiv
  3704  0422                     u955:
  3705  0422  1003               	clrc
  3706  0423  0DA8               	rlf	___lldiv@quotient,f
  3707  0424  0DA9               	rlf	___lldiv@quotient+1,f
  3708  0425  0DAA               	rlf	___lldiv@quotient+2,f
  3709  0426  0DAB               	rlf	___lldiv@quotient+3,f
  3710  0427  0BFD               	decfsz	??___lldiv,f
  3711  0428  2C22               	goto	u955
  3712  0429                     l1338:
  3713  0429  0823               	movf	___lldiv@divisor+3,w
  3714  042A  0227               	subwf	___lldiv@dividend+3,w
  3715  042B  1D03               	skipz
  3716  042C  2C37               	goto	u965
  3717  042D  0822               	movf	___lldiv@divisor+2,w
  3718  042E  0226               	subwf	___lldiv@dividend+2,w
  3719  042F  1D03               	skipz
  3720  0430  2C37               	goto	u965
  3721  0431  0821               	movf	___lldiv@divisor+1,w
  3722  0432  0225               	subwf	___lldiv@dividend+1,w
  3723  0433  1D03               	skipz
  3724  0434  2C37               	goto	u965
  3725  0435  0820               	movf	___lldiv@divisor,w
  3726  0436  0224               	subwf	___lldiv@dividend,w
  3727  0437                     u965:
  3728  0437  1C03               	skipc
  3729  0438  2C3A               	goto	u961
  3730  0439  2C3B               	goto	u960
  3731  043A                     u961:
  3732  043A  2C4A               	goto	l1344
  3733  043B                     u960:
  3734  043B                     l1340:
  3735  043B  0820               	movf	___lldiv@divisor,w
  3736  043C  02A4               	subwf	___lldiv@dividend,f
  3737  043D  0821               	movf	___lldiv@divisor+1,w
  3738  043E  1C03               	skipc
  3739  043F  0F21               	incfsz	___lldiv@divisor+1,w
  3740  0440  02A5               	subwf	___lldiv@dividend+1,f
  3741  0441  0822               	movf	___lldiv@divisor+2,w
  3742  0442  1C03               	skipc
  3743  0443  0F22               	incfsz	___lldiv@divisor+2,w
  3744  0444  02A6               	subwf	___lldiv@dividend+2,f
  3745  0445  0823               	movf	___lldiv@divisor+3,w
  3746  0446  1C03               	skipc
  3747  0447  0F23               	incfsz	___lldiv@divisor+3,w
  3748  0448  02A7               	subwf	___lldiv@dividend+3,f
  3749  0449                     l1342:
  3750  0449  1428               	bsf	___lldiv@quotient,0
  3751  044A                     l1344:
  3752  044A  3001               	movlw	1
  3753  044B                     u975:
  3754  044B  1003               	clrc
  3755  044C  0CA3               	rrf	___lldiv@divisor+3,f
  3756  044D  0CA2               	rrf	___lldiv@divisor+2,f
  3757  044E  0CA1               	rrf	___lldiv@divisor+1,f
  3758  044F  0CA0               	rrf	___lldiv@divisor,f
  3759  0450  3EFF               	addlw	-1
  3760  0451  1D03               	skipz
  3761  0452  2C4B               	goto	u975
  3762  0453                     l1346:
  3763  0453  3001               	movlw	1
  3764  0454  02AC               	subwf	___lldiv@counter,f
  3765  0455  1D03               	btfss	3,2
  3766  0456  2C58               	goto	u981
  3767  0457  2C59               	goto	u980
  3768  0458                     u981:
  3769  0458  2C20               	goto	l1336
  3770  0459                     u980:
  3771  0459                     l1348:
  3772  0459  082B               	movf	___lldiv@quotient+3,w
  3773  045A  00A3               	movwf	?___lldiv+3
  3774  045B  082A               	movf	___lldiv@quotient+2,w
  3775  045C  00A2               	movwf	?___lldiv+2
  3776  045D  0829               	movf	___lldiv@quotient+1,w
  3777  045E  00A1               	movwf	?___lldiv+1
  3778  045F  0828               	movf	___lldiv@quotient,w
  3779  0460  00A0               	movwf	?___lldiv
  3780  0461                     l258:
  3781  0461  0008               	return
  3782  0462                     __end_of___lldiv:
  3783  007E                     btemp	set	126	;btemp
  3784  007E                     wtemp0	set	126
  3785                           
  3786                           	psect	idloc
  3787                           
  3788                           ;Config register IDLOC0 @ 0x2000
  3789                           ;	unspecified, using default values
  3790  2000                     	org	8192
  3791  2000  3FFF               	dw	16383
  3792                           
  3793                           ;Config register IDLOC1 @ 0x2001
  3794                           ;	unspecified, using default values
  3795  2001                     	org	8193
  3796  2001  3FFF               	dw	16383
  3797                           
  3798                           ;Config register IDLOC2 @ 0x2002
  3799                           ;	unspecified, using default values
  3800  2002                     	org	8194
  3801  2002  3FFF               	dw	16383
  3802                           
  3803                           ;Config register IDLOC3 @ 0x2003
  3804                           ;	unspecified, using default values
  3805  2003                     	org	8195
  3806  2003  3FFF               	dw	16383
  3807                           
  3808                           	psect	config
  3809                           
  3810                           ;Config register CONFIG @ 0x2007
  3811                           ;	Oscillator Selection bits
  3812                           ;	FOSC = HS, HS oscillator
  3813                           ;	Watchdog Timer Enable bit
  3814                           ;	WDTE = OFF, WDT disabled
  3815                           ;	Power-up Timer Enable bit
  3816                           ;	PWRTE = ON, PWRT enabled
  3817                           ;	Brown-out Reset Enable bit
  3818                           ;	BOREN = ON, BOR enabled
  3819                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3820                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3821                           ;	Data EEPROM Memory Code Protection bit
  3822                           ;	CPD = OFF, Data EEPROM code protection off
  3823                           ;	Flash Program Memory Write Enable bits
  3824                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3825                           ;	In-Circuit Debugger Mode bit
  3826                           ;	DEBUG = 0x1, unprogrammed default
  3827                           ;	Flash Program Memory Code Protection bit
  3828                           ;	CP = OFF, Code protection off
  3829  2007                     	org	8199
  3830  2007  3F72               	dw	16242

Data Sizes:
    Strings     46
    Constant    0
    Data        10
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      48
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[17]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _BCD_2_DEC->_I2C_Read
    _BCD_2_DEC->___wmul
    _Set_Time_Date->_DEC_2_BCD
    _I2C_Write->_DEC_2_BCD
    _DEC_2_BCD->___awdiv
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _I2C_Initialize->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->_I2C_Initialize
    _Update_Current_Date_Time->_I2C_Write
    _Set_Time_Date->_I2C_Write
    _I2C_Initialize->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   12097
                                             21 BANK0     15    15      0
                     _I2C_Initialize
                          _Lcd_Clear
                     _Lcd_Print_Char
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                      _Set_Time_Date
           _Update_Current_Date_Time
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _Update_Current_Date_Time                             0     0      0    2407
                          _BCD_2_DEC
                          _I2C_Begin
                            _I2C_End
                           _I2C_Read
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             6     4      2     653
                                              0 COMMON     6     4      2
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _BCD_2_DEC                                            4     2      2     744
                                              6 COMMON     4     2      2
                           _I2C_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Set_Time_Date                                        0     0      0    4234
                          _DEC_2_BCD
                          _I2C_Begin
                            _I2C_End
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2    1010
                                              0 BANK0      2     0      2
                          _DEC_2_BCD (ARG)
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_End                                              0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Begin                                            0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (3) _I2C_Hold                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DEC_2_BCD                                            4     2      2    3224
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            4     4      0     244
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     684
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     3     3      0     492
                                              9 COMMON     3     3      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       8     8      0     270
                                              1 COMMON     8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       8     4      4     656
                                             13 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialize
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_Char
     _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Start
     _Lcd_Cmd
     _Lcd_SetBit
   _Set_Time_Date
     _DEC_2_BCD
       ___awdiv
       ___awmod
     _I2C_Begin
       _I2C_Hold
     _I2C_End
       _I2C_Hold
     _I2C_Write
       _DEC_2_BCD (ARG)
       _I2C_Hold (ARG)
   _Update_Current_Date_Time
     _BCD_2_DEC
       _I2C_Read (ARG)
         _I2C_Hold
       ___wmul (ARG)
     _I2C_Begin
     _I2C_End
     _I2C_Read
     _I2C_Write
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      30       5       60.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Sep 30 17:32:00 2022

                               pc 0002                                l60 00C0                                l61 00C6  
                              l62 00C7                                l63 00CD                                l71 0072  
                              l65 00CE                                l57 00B6                                l58 00B9  
                              l82 02DA                                l59 00BF                                l68 00AC  
                              l85 0357                                l77 0232                                l86 036B  
                              l87 037B                                l95 00F3                                l88 038F  
                              l89 0392                                l98 0285                      ___awdiv@sign 0076  
                              fsr 0004               ___wmul@multiplicand 0072                               l110 0051  
                             l104 007F                               l113 005B                               l122 019A  
                             l107 0048                               l116 016A                               l125 0510  
                             l222 0100                               l119 013D                               l224 0118  
                             l128 05FC                               l236 01E0                               l258 0461  
                             l375 03F9                               l388 0333                               _RD2 0042  
                             _RD3 0043                               _RD4 0044                               _RD5 0045  
                             _RD6 0046                               _RD7 0047                               _PEN 048A  
                             u530 00B2                               u531 00B1                               u540 00BD  
                             u620 0114                               u541 00BC                               u621 0113  
                             u605 0101                               u550 00C4                               u710 03EB  
                             u630 0398                               u551 00C3                               u711 03EA  
                             u631 0397                               u615 0108                               u560 00CB  
                             u720 03F0                               u640 03A3                               u800 0325  
                             u561 00CA                               u721 03EF                               u705 03DF  
                             u641 03A2                               u801 0324                               u650 03B4  
                             u810 032A                               u730 02E0                               u570 007B  
                             u651 03B3                               u811 0329                               u731 02DF  
                             u571 007A                               u740 02EB                               u580 007F  
                             _SEN 0488                               u741 02EA                               u581 007E  
                             u910 01D8                               u830 036B                               u670 03C6  
                             u750 02F6                               u590 00FA                               u911 01D7  
                             u831 036A                               u671 03C5                               u751 02F5  
                             u591 00F9                               u920 040C                               u840 038F  
                             u921 040B                               u905 01C8                               u841 038E  
                             u825 0345                               u665 03B8                               u690 03D7  
                             u770 0308                               u850 0162                               u835 0367  
                             u691 03D6                               u771 0307                               u851 015E  
                             u940 0420                               u780 0312                               u941 041F  
                             u845 038B                               u685 03C7                               u781 0311  
                             u765 02FA                               u870 01A7                               u935 0411  
                             u871 01A6                               u695 03D3                               u960 043B  
                             u864 0165                               u961 043A                               u881 01B0  
                             u785 030E                               u882 01B7                               u955 0422  
                             u883 01BE                               u795 0319                               u980 0459  
                             u981 0458                               u965 0437                               u990 01E7  
                             u975 044B                               u895 01C0                               u991 01E6  
                 __end_of_I2C_End 0052                               _min 004C                               _sec 004E  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0076  
                            l1200 02DC                              l1130 00C4                              l1210 02F0  
                            l1202 02E0                              l1132 00CB                              l1124 00AE  
                            l1220 0308                              l1212 02F6                              l1204 02E5  
                            l1140 00F4                              l1300 0165                              l1126 00B2  
                            l1230 032A                              l1222 0312                              l1214 02F9  
                            l1206 02E7                              l1310 016B                              l1134 0073  
                            l1150 0114                              l1142 00F6                              l1302 0166  
                            l1320 01BE                              l1128 00BD                              l1240 009D  
                            l1400 02C2                              l1160 039D                              l1232 032F  
                            l1224 0318                              l1216 0300                              l1208 02EB  
                            l1136 0073                              l1144 00FA                              l1330 040C  
                            l1322 01C7                              l1314 019B                              l1242 00A0  
                            l1250 0342                              l1410 00D3                              l1402 02C8  
                            l1170 03AE                              l1162 039F                              l1154 0393  
                            l1226 031F                              l1218 0304                              l1138 007B  
                            l1146 0107                              l1306 0119                              l1340 043B  
                            l1332 040F                              l1324 01D8                              l1316 01A3  
                            l1420 023B                              l1244 00A9                              l1236 0094  
                            l1260 0358                              l1252 0350                              l1412 00E0  
                            l1404 02CE                              l1180 03C6                              l1172 03B4  
                            l1164 03A3                              l1156 0394                              l1228 0325  
                            l1148 010E                              l1500 0791                              l1342 0449  
                            l1334 041C                              l1318 01A7                              l1422 023E  
                            l1238 0097                              l1262 035E                              l1254 0353  
                            l1246 0335                              l1414 00E6                              l1406 02D4  
                            l1182 03D7                              l1174 03B7                              l1190 03EB  
                            l1166 03A8                              l1158 0398                              l1510 07B8  
                            l1502 0797                              l1430 05FD                              l1344 044A  
                            l1336 0420                              l1328 03FA                              l1424 0284  
                            l1416 0233                              l1352 0066                              l1264 036E  
                            l1248 033F                              l1408 00D0                              l1360 01FD  
                            l1192 03F0                              l1184 03DD                              l1176 03BE  
                            l1168 03AC                              l1280 0045                              l1512 07C1  
                            l1504 07A0                              l1440 061E                              l1432 0600  
                            l1346 0453                              l1338 0429                              l1418 0237  
                            l1274 037C                              l1266 0374                              l1370 0226  
                            l1362 0203                              l1354 01E2                              l1194 03F5  
                            l1186 03DE                              l1178 03C2                              l1282 0049  
                            l1426 0462                              l1290 013E                              l1514 07C7  
                            l1506 07A9                              l1450 0649                              l1442 0626  
                            l1434 0605                              l1348 0459                              l1276 0382  
                            l1268 0377                              l1372 022C                              l1356 01E7  
                            l1364 020A                              l1188 03E5                              l1284 004E  
                            l1292 0143                              l1428 0511                              l1516 07D0  
                            l1508 07AF                              l1460 069C                              l1452 064E  
                            l1444 062C                              l1436 0614                              l1366 0210  
                            l1358 01F8                              l1390 029B                              l1374 0286  
                            l1198 02DB                              l1278 0040                              l1286 0052  
                            l1294 014B                              l1518 07D9                              l1470 06FB  
                            l1462 06AF                              l1454 0663                              l1446 0634  
                            l1438 0619                              l1368 0221                              l1392 02AA  
                            l1376 028C                              l1288 0057                              l1296 0154  
                            l1480 0741                              l1472 070E                              l1464 06C2  
                            l1456 0676                              l1448 063A                              l1394 02B0  
                            l1386 028C                              l1378 028C                              l1298 0159  
                            l1490 0768                              l1482 0747                              l1474 0721  
                            l1466 06D5                              l1458 0689                              l1396 02B6  
                            l1388 0292                              l1492 0771                              l1484 0750  
                            l1476 0734                              l1468 06E8                              l1398 02BC  
                            l1494 0777                              l1486 0759                              l1478 0739  
                            l1496 0780                              l1488 075F                              l1498 0789  
                            STR_1 001A                              STR_2 0009                              STR_3 0029  
                            STR_4 0030                              u1010 0210                              u1011 020F  
                            u1005 01EF                              u1030 00F3                              u1031 00F2  
                            u1040 024E                              u1025 0218                              u1045 0249  
                            u1057 0642                              u1067 07E1                              u1077 0296  
                            u1087 02A5                              u1097 00A4                              _RCEN 048B  
                            _date 0048                       main@month_0 0040                       main@month_1 0041  
                            _main 05FD                              _hour 004A                  __end_of_I2C_Hold 0080  
                __end_of_I2C_Read 016B                              _year 0044                              btemp 007E  
                            start 0000                Lcd_Print_Char@i_77 0077                Lcd_Print_Char@data 0074  
                 __end_of_Lcd_Cmd 00AD                        _Lcd_SetBit 00AD                             ?_main 0070  
                           _ACKEN 048C                             _ACKDT 048D                   __end_of___awdiv 03FA  
                 __end_of___awmod 0334                   __end_of___lldiv 0462                   ___awdiv@divisor 0070  
                 ___awdiv@counter 0075                             _TRISD 0088               ___lmul@multiplicand 0074  
               __end_of_BCD_2_DEC 013E                 __end_of_I2C_Begin 0049                             _month 0046  
               __end_of_I2C_Write 005C                             pclath 000A                 __end_of_DEC_2_BCD 019B  
                           status 0003                             wtemp0 007E                   __initialization 07EC  
                    __end_of_main 07EC                         ??_I2C_End 0070                            ??_main 0035  
                ___awdiv@dividend 0072                         ??_Lcd_Cmd 0071                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _SSPCON 0014  
                          _SSPBUF 0013                            ___lmul 019B                            ___wmul 00F4  
                       ??___awdiv 0074                         ??___awmod 0074                         ??___lldiv 007D  
                     ?_Lcd_SetBit 0070                  ___awdiv@quotient 0077                   ___awmod@divisor 0070  
                 ___awmod@counter 0075  __end_of_Update_Current_Date_Time 05FD                         ?_I2C_Hold 0070  
                       ?_I2C_Read 0070                   Lcd_Set_Cursor@a 0077                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0079                   Lcd_Set_Cursor@z 0078           __end_of__initialization 07FC  
               __end_of_Lcd_Clear 0073                 __end_of_Lcd_Start 02DB                    __pcstackCOMMON 0070  
                    __pidataBANK0 005C                    _Lcd_Set_Cursor 01E1                        ??_I2C_Hold 0070  
                      ??_I2C_Read 0072                        __pbssBANK0 004E                  _Lcd_Print_String 00CF  
                  _Lcd_Print_Char 0334                        __pmaintext 05FD                           ?___lmul 0070  
                         ?___wmul 0070                           _I2C_End 0049                    ___lmul@product 0079  
              Lcd_SetBit@data_bit 0070            __end_of_Lcd_Set_Cursor 0233                  I2C_Read@incoming 0074  
        _Update_Current_Date_Time 0511                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0003                         _BCD_2_DEC 0119                   Lcd_Print_Char@i 0075  
                         _Lcd_Cmd 0093            __end_of_Lcd_Print_Char 0393                         _I2C_Begin 0040  
                       _I2C_Write 0052                         _DEC_2_BCD 016B                           ___awdiv 0393  
                         ___awmod 02DB                           ___lldiv 03FA                    _I2C_Initialize 0233  
                 ?_Lcd_Set_Cursor 0074                           __ptext1 0511                           __ptext2 013E  
                         __ptext3 0119                           __ptext4 00F4                           __ptext5 0462  
                         __ptext6 0052                           __ptext7 0049                           __ptext8 0040  
                         __ptext9 0073                  ___awmod@dividend 0072              end_of_initialization 07FC  
                      ?_BCD_2_DEC 0076                        ?_I2C_Begin 0070                   ?_Lcd_Print_Char 0070  
                      ?_I2C_Write 0020                        ?_DEC_2_BCD 0079                   ___lldiv@divisor 0020  
                 ___lldiv@counter 002C                     _Set_Time_Date 0462            __end_of_I2C_Initialize 0286  
                    ??_Lcd_SetBit 0070                        main@date_0 003E                        main@date_1 003F  
              __end_of_Lcd_SetBit 00CF                        main@hour_0 003C                        main@hour_1 003D  
                      main@year_0 0042                        main@year_1 0043                    ?_Set_Time_Date 0070  
                       _Lcd_Clear 0066               BCD_2_DEC@to_convert 0076                   ?_I2C_Initialize 002D  
                       _Lcd_Start 0286                    __end_of___lmul 01E1                    __end_of___wmul 0119  
        __end_of_Lcd_Print_String 00F4               start_initialization 07EC                       ??_BCD_2_DEC 0078  
                     ??_I2C_Begin 0070                 Lcd_Print_String@a 007B                 Lcd_Print_String@i 0079  
                     ??_I2C_Write 007D                       ??_DEC_2_BCD 007B                        ?_Lcd_Clear 0070  
                        ??___lmul 0078                          ??___wmul 0074                        init_fetch0 0080  
                      ?_Lcd_Start 0070                       __pdataBANK0 0044                          ?_I2C_End 0070  
      ??_Update_Current_Date_Time 007D        Lcd_Print_Char@Lower_Nibble 0072                         ___latbits 0002  
                   __pcstackBANK0 0020                          ?_Lcd_Cmd 0070                   ??_Set_Time_Date 007D  
                     I2C_Read@ack 0070                  ??_Lcd_Set_Cursor 0075                          ?___awdiv 0070  
                        ?___awmod 0070                          ?___lldiv 0020                         __pstrings 0003  
                        _I2C_Hold 0073                          _I2C_Read 013E                  ??_Lcd_Print_Char 0071  
                  ___wmul@product 0074                          Lcd_Cmd@a 0073                       ??_Lcd_Clear 0074  
                     ??_Lcd_Start 0074                       __stringbase 0008                 ___wmul@multiplier 0070  
                       main@min_0 003A                         main@min_1 003B                         main@sec_0 0038  
                       main@sec_1 0039                 ___lmul@multiplier 0070                  ??_I2C_Initialize 0031  
                   I2C_Write@data 0020                __end_of__stringtab 0009                 ?_Lcd_Print_String 0070  
              ??_Lcd_Print_String 0079                          __ptext10 016B                          __ptext11 02DB  
                        __ptext20 0233                          __ptext12 0393                          __ptext21 019B  
                        __ptext13 0286                          __ptext22 03FA                          __ptext14 01E1  
                        __ptext15 00CF                          __ptext16 0334                          __ptext17 0066  
                        __ptext18 0093                          __ptext19 00AD               I2C_Initialize@feq_K 002D  
      Lcd_Print_Char@Upper_Nibble 0073                          init_ram0 0084                  ___lldiv@dividend 0024  
                       stringcode 0003                Lcd_Set_Cursor@temp 007A                  ___lldiv@quotient 0028  
                        stringdir 0003                          stringtab 0003         ?_Update_Current_Date_Time 0070  
           __end_of_Set_Time_Date 0511               DEC_2_BCD@to_convert 0079  
