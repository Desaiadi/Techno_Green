

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Aug 02 17:28:04 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193                           
   194                           	psect	idataBANK0
   195  005C                     __pidataBANK0:
   196                           
   197                           ;initializer for _year
   198  005C  3416               	retlw	22
   199  005D  3400               	retlw	0
   200                           
   201                           ;initializer for _month
   202  005E  3407               	retlw	7
   203  005F  3400               	retlw	0
   204                           
   205                           ;initializer for _date
   206  0060  3419               	retlw	25
   207  0061  3400               	retlw	0
   208                           
   209                           ;initializer for _hour
   210  0062  340C               	retlw	12
   211  0063  3400               	retlw	0
   212                           
   213                           ;initializer for _min
   214  0064  340C               	retlw	12
   215  0065  3400               	retlw	0
   216                           
   217                           ;initializer for _sec
   218  0066  340C               	retlw	12
   219  0067  3400               	retlw	0
   220  0013                     _SSPBUF	set	19
   221  0014                     _SSPCON	set	20
   222  0043                     _RD3	set	67
   223  0042                     _RD2	set	66
   224  0047                     _RD7	set	71
   225  0046                     _RD6	set	70
   226  0045                     _RD5	set	69
   227  0044                     _RD4	set	68
   228  0088                     _TRISD	set	136
   229  0094                     _SSPSTAT	set	148
   230  0093                     _SSPADD	set	147
   231  0091                     _SSPCON2	set	145
   232  048C                     _ACKEN	set	1164
   233  048D                     _ACKDT	set	1165
   234  048B                     _RCEN	set	1163
   235  048A                     _PEN	set	1162
   236  0488                     _SEN	set	1160
   237  043C                     _TRISC4	set	1084
   238  043B                     _TRISC3	set	1083
   239                           
   240                           	psect	strings
   241  0003                     __pstrings:
   242  0003                     stringtab:
   243  0003                     __stringtab:
   244  0003                     stringcode:	
   245                           ;	String table - string pointers are 1 byte each
   246                           
   247  0003                     stringdir:
   248  0003  3000               	movlw	high stringdir
   249  0004  008A               	movwf	10
   250  0005  0804               	movf	4,w
   251  0006  0A84               	incf	4,f
   252  0007  0782               	addwf	2,f
   253  0008                     __stringbase:
   254  0008  3400               	retlw	0
   255  0009                     __end_of__stringtab:
   256  0009                     STR_2:
   257  0009  3453               	retlw	83	;'S'
   258  000A  344D               	retlw	77	;'M'
   259  000B  3441               	retlw	65	;'A'
   260  000C  3452               	retlw	82	;'R'
   261  000D  3454               	retlw	84	;'T'
   262  000E  3420               	retlw	32	;' '
   263  000F  3449               	retlw	73	;'I'
   264  0010  3452               	retlw	82	;'R'
   265  0011  3452               	retlw	82	;'R'
   266  0012  3449               	retlw	73	;'I'
   267  0013  3447               	retlw	71	;'G'
   268  0014  3441               	retlw	65	;'A'
   269  0015  3454               	retlw	84	;'T'
   270  0016  3449               	retlw	73	;'I'
   271  0017  344F               	retlw	79	;'O'
   272  0018  344E               	retlw	78	;'N'
   273  0019  3400               	retlw	0
   274  001A                     STR_1:
   275  001A  3420               	retlw	32	;' '
   276  001B  3420               	retlw	32	;' '
   277  001C  3454               	retlw	84	;'T'
   278  001D  3455               	retlw	85	;'U'
   279  001E  344C               	retlw	76	;'L'
   280  001F  3449               	retlw	73	;'I'
   281  0020  3450               	retlw	80	;'P'
   282  0021  3420               	retlw	32	;' '
   283  0022  3446               	retlw	70	;'F'
   284  0023  3441               	retlw	65	;'A'
   285  0024  3452               	retlw	82	;'R'
   286  0025  344D               	retlw	77	;'M'
   287  0026  3420               	retlw	32	;' '
   288  0027  3420               	retlw	32	;' '
   289  0028  3400               	retlw	0
   290  0029                     STR_3:
   291  0029  3454               	retlw	84	;'T'
   292  002A  3449               	retlw	73	;'I'
   293  002B  344D               	retlw	77	;'M'
   294  002C  3445               	retlw	69	;'E'
   295  002D  343A               	retlw	58	;':'
   296  002E  3420               	retlw	32	;' '
   297  002F  3400               	retlw	0
   298  0030                     STR_4:
   299  0030  3444               	retlw	68	;'D'
   300  0031  3441               	retlw	65	;'A'
   301  0032  3454               	retlw	84	;'T'
   302  0033  3445               	retlw	69	;'E'
   303  0034  343A               	retlw	58	;':'
   304  0035  3420               	retlw	32	;' '
   305  0036  3400               	retlw	0
   306                           
   307                           	psect	cinit
   308  07EE                     start_initialization:	
   309                           ; #config settings
   310                           
   311  07EE                     __initialization:
   312                           
   313                           ; Initialize objects allocated to BANK0
   314  07EE  1383               	bcf	3,7	;select IRP bank0
   315  07EF  3050               	movlw	low (__pdataBANK0+12)
   316  07F0  00FD               	movwf	btemp+-1
   317  07F1  3000               	movlw	high __pidataBANK0
   318  07F2  00FE               	movwf	btemp
   319  07F3  305C               	movlw	low __pidataBANK0
   320  07F4  00FF               	movwf	btemp+1
   321  07F5  3044               	movlw	low __pdataBANK0
   322  07F6  0084               	movwf	4
   323  07F7  120A  118A  2086  120A  118A  	fcall	init_ram0
   324  07FC                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327  07FC                     __end_of__initialization:
   328  07FC  0183               	clrf	3
   329  07FD  120A  118A  2DFF   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	dataBANK0
   332  0044                     __pdataBANK0:
   333  0044                     _year:
   334  0044                     	ds	2
   335  0046                     _month:
   336  0046                     	ds	2
   337  0048                     _date:
   338  0048                     	ds	2
   339  004A                     _hour:
   340  004A                     	ds	2
   341  004C                     _min:
   342  004C                     	ds	2
   343  004E                     _sec:
   344  004E                     	ds	2
   345                           
   346                           	psect	inittext
   347  0082                     init_fetch0:	
   348                           ;	Called with low address in FSR and high address in W
   349                           
   350  0082  087E               	movf	btemp,w
   351  0083  008A               	movwf	10
   352  0084  087F               	movf	btemp+1,w
   353  0085  0082               	movwf	2
   354  0086                     init_ram0:	
   355                           ;Called with:
   356                           ;	high address of idata address in btemp 
   357                           ;	low address of idata address in btemp+1 
   358                           ;	low address of data in FSR
   359                           ;	high address + 1 of data in btemp-1
   360                           
   361  0086  120A  118A  2082  120A  118A  	fcall	init_fetch0
   362  008B  0080               	movwf	0
   363  008C  0A84               	incf	4,f
   364  008D  0804               	movf	4,w
   365  008E  067D               	xorwf	btemp+-1,w
   366  008F  1903               	btfsc	3,2
   367  0090  3400               	retlw	0
   368  0091  0AFF               	incf	btemp+1,f
   369  0092  1903               	btfsc	3,2
   370  0093  0AFE               	incf	btemp,f
   371  0094  2886               	goto	init_ram0
   372                           
   373                           	psect	cstackCOMMON
   374  0070                     __pcstackCOMMON:
   375  0070                     ?_Lcd_SetBit:
   376  0070                     ??_Lcd_SetBit:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_Lcd_Cmd:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_Lcd_Start:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_Lcd_Print_Char:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_Lcd_Print_String:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_I2C_Hold:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ??_I2C_Hold:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_I2C_Begin:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ??_I2C_Begin:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_I2C_End:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ??_I2C_End:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_Set_Time_Date:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_Update_Current_Date_Time:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_Lcd_Clear:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_I2C_Read:	
   419                           ; 2 bytes @ 0x0
   420                           
   421  0070                     ?_main:	
   422                           ; 2 bytes @ 0x0
   423                           
   424  0070                     ?___wmul:	
   425                           ; 2 bytes @ 0x0
   426                           
   427  0070                     ?___awdiv:	
   428                           ; 2 bytes @ 0x0
   429                           
   430  0070                     ?___awmod:	
   431                           ; 2 bytes @ 0x0
   432                           
   433  0070                     ?___lmul:	
   434                           ; 2 bytes @ 0x0
   435                           
   436  0070                     Lcd_SetBit@data_bit:	
   437                           ; 4 bytes @ 0x0
   438                           
   439  0070                     I2C_Read@ack:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ___wmul@multiplier:	
   443                           ; 2 bytes @ 0x0
   444                           
   445  0070                     ___awdiv@divisor:	
   446                           ; 2 bytes @ 0x0
   447                           
   448  0070                     ___awmod@divisor:	
   449                           ; 2 bytes @ 0x0
   450                           
   451  0070                     ___lmul@multiplier:	
   452                           ; 2 bytes @ 0x0
   453                           
   454                           
   455                           ; 4 bytes @ 0x0
   456  0070                     	ds	1
   457  0071                     ??_Lcd_Cmd:
   458  0071                     ??_Lcd_Print_Char:	
   459                           ; 1 bytes @ 0x1
   460                           
   461                           
   462                           ; 1 bytes @ 0x1
   463  0071                     	ds	1
   464  0072                     ??_I2C_Read:
   465  0072                     Lcd_Print_Char@Lower_Nibble:	
   466                           ; 1 bytes @ 0x2
   467                           
   468  0072                     ___wmul@multiplicand:	
   469                           ; 1 bytes @ 0x2
   470                           
   471  0072                     ___awdiv@dividend:	
   472                           ; 2 bytes @ 0x2
   473                           
   474  0072                     ___awmod@dividend:	
   475                           ; 2 bytes @ 0x2
   476                           
   477                           
   478                           ; 2 bytes @ 0x2
   479  0072                     	ds	1
   480  0073                     Lcd_Cmd@a:
   481  0073                     Lcd_Print_Char@Upper_Nibble:	
   482                           ; 1 bytes @ 0x3
   483                           
   484                           
   485                           ; 1 bytes @ 0x3
   486  0073                     	ds	1
   487  0074                     ??_Lcd_Clear:
   488  0074                     ?_Lcd_Set_Cursor:	
   489                           ; 1 bytes @ 0x4
   490                           
   491  0074                     ??_Lcd_Start:	
   492                           ; 1 bytes @ 0x4
   493                           
   494  0074                     ??___wmul:	
   495                           ; 1 bytes @ 0x4
   496                           
   497  0074                     ??___awdiv:	
   498                           ; 1 bytes @ 0x4
   499                           
   500  0074                     ??___awmod:	
   501                           ; 1 bytes @ 0x4
   502                           
   503  0074                     Lcd_Set_Cursor@b:	
   504                           ; 1 bytes @ 0x4
   505                           
   506  0074                     Lcd_Print_Char@data:	
   507                           ; 1 bytes @ 0x4
   508                           
   509  0074                     I2C_Read@incoming:	
   510                           ; 1 bytes @ 0x4
   511                           
   512  0074                     ___wmul@product:	
   513                           ; 2 bytes @ 0x4
   514                           
   515  0074                     ___lmul@multiplicand:	
   516                           ; 2 bytes @ 0x4
   517                           
   518                           
   519                           ; 4 bytes @ 0x4
   520  0074                     	ds	1
   521  0075                     ??_Lcd_Set_Cursor:
   522  0075                     ___awdiv@counter:	
   523                           ; 1 bytes @ 0x5
   524                           
   525  0075                     ___awmod@counter:	
   526                           ; 1 bytes @ 0x5
   527                           
   528  0075                     Lcd_Print_Char@i:	
   529                           ; 1 bytes @ 0x5
   530                           
   531                           
   532                           ; 2 bytes @ 0x5
   533  0075                     	ds	1
   534  0076                     ?_BCD_2_DEC:
   535  0076                     ___awdiv@sign:	
   536                           ; 2 bytes @ 0x6
   537                           
   538  0076                     ___awmod@sign:	
   539                           ; 1 bytes @ 0x6
   540                           
   541  0076                     BCD_2_DEC@to_convert:	
   542                           ; 1 bytes @ 0x6
   543                           
   544                           
   545                           ; 2 bytes @ 0x6
   546  0076                     	ds	1
   547  0077                     Lcd_Set_Cursor@a:
   548  0077                     Lcd_Print_Char@i_77:	
   549                           ; 1 bytes @ 0x7
   550                           
   551  0077                     ___awdiv@quotient:	
   552                           ; 2 bytes @ 0x7
   553                           
   554                           
   555                           ; 2 bytes @ 0x7
   556  0077                     	ds	1
   557  0078                     ??_BCD_2_DEC:
   558  0078                     ??___lmul:	
   559                           ; 1 bytes @ 0x8
   560                           
   561  0078                     Lcd_Set_Cursor@z:	
   562                           ; 1 bytes @ 0x8
   563                           
   564                           
   565                           ; 1 bytes @ 0x8
   566  0078                     	ds	1
   567  0079                     ??_Lcd_Print_String:
   568  0079                     ?_DEC_2_BCD:	
   569                           ; 1 bytes @ 0x9
   570                           
   571  0079                     Lcd_Set_Cursor@y:	
   572                           ; 2 bytes @ 0x9
   573                           
   574  0079                     Lcd_Print_String@i:	
   575                           ; 1 bytes @ 0x9
   576                           
   577  0079                     DEC_2_BCD@to_convert:	
   578                           ; 2 bytes @ 0x9
   579                           
   580  0079                     ___lmul@product:	
   581                           ; 2 bytes @ 0x9
   582                           
   583                           
   584                           ; 4 bytes @ 0x9
   585  0079                     	ds	1
   586  007A                     Lcd_Set_Cursor@temp:
   587                           
   588                           ; 1 bytes @ 0xA
   589  007A                     	ds	1
   590  007B                     ??_DEC_2_BCD:
   591  007B                     Lcd_Print_String@a:	
   592                           ; 1 bytes @ 0xB
   593                           
   594                           
   595                           ; 1 bytes @ 0xB
   596  007B                     	ds	2
   597  007D                     ??_I2C_Write:
   598  007D                     ??_Set_Time_Date:	
   599                           ; 1 bytes @ 0xD
   600                           
   601  007D                     ??_Update_Current_Date_Time:	
   602                           ; 1 bytes @ 0xD
   603                           
   604  007D                     ??___lldiv:	
   605                           ; 1 bytes @ 0xD
   606                           
   607                           
   608                           ; 1 bytes @ 0xD
   609  007D                     	ds	1
   610                           
   611                           	psect	cstackBANK0
   612  0020                     __pcstackBANK0:
   613  0020                     ?_I2C_Write:
   614  0020                     ?___lldiv:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0020                     I2C_Write@data:	
   618                           ; 4 bytes @ 0x0
   619                           
   620  0020                     ___lldiv@divisor:	
   621                           ; 2 bytes @ 0x0
   622                           
   623                           
   624                           ; 4 bytes @ 0x0
   625  0020                     	ds	4
   626  0024                     ___lldiv@dividend:
   627                           
   628                           ; 4 bytes @ 0x4
   629  0024                     	ds	4
   630  0028                     ___lldiv@quotient:
   631                           
   632                           ; 4 bytes @ 0x8
   633  0028                     	ds	4
   634  002C                     ___lldiv@counter:
   635                           
   636                           ; 1 bytes @ 0xC
   637  002C                     	ds	1
   638  002D                     ?_I2C_Initialize:
   639  002D                     I2C_Initialize@feq_K:	
   640                           ; 1 bytes @ 0xD
   641                           
   642                           
   643                           ; 4 bytes @ 0xD
   644  002D                     	ds	4
   645  0031                     ??_I2C_Initialize:
   646                           
   647                           ; 1 bytes @ 0x11
   648  0031                     	ds	4
   649  0035                     ??_main:
   650                           
   651                           ; 1 bytes @ 0x15
   652  0035                     	ds	3
   653  0038                     main@sec_0:
   654                           
   655                           ; 1 bytes @ 0x18
   656  0038                     	ds	1
   657  0039                     main@sec_1:
   658                           
   659                           ; 1 bytes @ 0x19
   660  0039                     	ds	1
   661  003A                     main@min_0:
   662                           
   663                           ; 1 bytes @ 0x1A
   664  003A                     	ds	1
   665  003B                     main@min_1:
   666                           
   667                           ; 1 bytes @ 0x1B
   668  003B                     	ds	1
   669  003C                     main@hour_0:
   670                           
   671                           ; 1 bytes @ 0x1C
   672  003C                     	ds	1
   673  003D                     main@hour_1:
   674                           
   675                           ; 1 bytes @ 0x1D
   676  003D                     	ds	1
   677  003E                     main@date_0:
   678                           
   679                           ; 1 bytes @ 0x1E
   680  003E                     	ds	1
   681  003F                     main@date_1:
   682                           
   683                           ; 1 bytes @ 0x1F
   684  003F                     	ds	1
   685  0040                     main@month_0:
   686                           
   687                           ; 1 bytes @ 0x20
   688  0040                     	ds	1
   689  0041                     main@month_1:
   690                           
   691                           ; 1 bytes @ 0x21
   692  0041                     	ds	1
   693  0042                     main@year_0:
   694                           
   695                           ; 1 bytes @ 0x22
   696  0042                     	ds	1
   697  0043                     main@year_1:
   698                           
   699                           ; 1 bytes @ 0x23
   700  0043                     	ds	1
   701                           
   702                           	psect	maintext
   703  05FF                     __pmaintext:	
   704 ;;
   705 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   706 ;;
   707 ;; *************** function _main *****************
   708 ;; Defined at:
   709 ;;		line 38 in file "RTC_with_PIC_main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  year_1          1   35[BANK0 ] unsigned char 
   714 ;;  year_0          1   34[BANK0 ] unsigned char 
   715 ;;  month_1         1   33[BANK0 ] unsigned char 
   716 ;;  month_0         1   32[BANK0 ] unsigned char 
   717 ;;  date_1          1   31[BANK0 ] unsigned char 
   718 ;;  date_0          1   30[BANK0 ] unsigned char 
   719 ;;  hour_1          1   29[BANK0 ] unsigned char 
   720 ;;  hour_0          1   28[BANK0 ] unsigned char 
   721 ;;  min_1           1   27[BANK0 ] unsigned char 
   722 ;;  min_0           1   26[BANK0 ] unsigned char 
   723 ;;  sec_1           1   25[BANK0 ] unsigned char 
   724 ;;  sec_0           1   24[BANK0 ] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  2  132[None  ] int 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B00/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         0      12       0       0       0
   736 ;;      Temps:          0       3       0       0       0
   737 ;;      Totals:         0      15       0       0       0
   738 ;;Total ram usage:       15 bytes
   739 ;; Hardware stack levels required when called: 3
   740 ;; This function calls:
   741 ;;		_I2C_Initialize
   742 ;;		_Lcd_Clear
   743 ;;		_Lcd_Print_Char
   744 ;;		_Lcd_Print_String
   745 ;;		_Lcd_Set_Cursor
   746 ;;		_Lcd_Start
   747 ;;		_Set_Time_Date
   748 ;;		_Update_Current_Date_Time
   749 ;;		___awdiv
   750 ;;		___awmod
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756  05FF                     _main:	
   757                           ;psect for function _main
   758                           
   759  05FF                     l1430:	
   760                           ;incstack = 0
   761                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   762                           
   763                           
   764                           ;RTC_with_PIC_main.c: 41:     TRISD = 0x00;
   765  05FF  1683               	bsf	3,5	;RP0=1, select bank1
   766  0600  1303               	bcf	3,6	;RP1=0, select bank1
   767  0601  0188               	clrf	8	;volatile
   768  0602                     l1432:
   769                           
   770                           ;RTC_with_PIC_main.c: 43:     Lcd_Start();
   771  0602  120A  118A  2288  120A  118A  	fcall	_Lcd_Start
   772  0607                     l1434:
   773                           
   774                           ;RTC_with_PIC_main.c: 45:     I2C_Initialize(100);
   775  0607  3000               	movlw	0
   776  0608  1283               	bcf	3,5	;RP0=0, select bank0
   777  0609  1303               	bcf	3,6	;RP1=0, select bank0
   778  060A  00B0               	movwf	I2C_Initialize@feq_K+3
   779  060B  3000               	movlw	0
   780  060C  00AF               	movwf	I2C_Initialize@feq_K+2
   781  060D  3000               	movlw	0
   782  060E  00AE               	movwf	I2C_Initialize@feq_K+1
   783  060F  3064               	movlw	100
   784  0610  00AD               	movwf	I2C_Initialize@feq_K
   785  0611  120A  118A  2235  120A  118A  	fcall	_I2C_Initialize
   786  0616                     l1436:
   787                           
   788                           ;RTC_with_PIC_main.c: 47:     Set_Time_Date();
   789  0616  120A  118A  2464  120A  118A  	fcall	_Set_Time_Date
   790  061B                     l1438:
   791                           
   792                           ;RTC_with_PIC_main.c: 50:      Lcd_Clear();
   793  061B  120A  118A  2068  120A  118A  	fcall	_Lcd_Clear
   794  0620                     l1440:
   795                           
   796                           ;RTC_with_PIC_main.c: 51:      Lcd_Set_Cursor(1,1);
   797  0620  01F4               	clrf	Lcd_Set_Cursor@b
   798  0621  0AF4               	incf	Lcd_Set_Cursor@b,f
   799  0622  3001               	movlw	1
   800  0623  120A  118A  21E3  120A  118A  	fcall	_Lcd_Set_Cursor
   801  0628                     l1442:
   802                           
   803                           ;RTC_with_PIC_main.c: 52:      Lcd_Print_String("  TULIP FARM  ");
   804  0628  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   805  0629  120A  118A  20D1  120A  118A  	fcall	_Lcd_Print_String
   806  062E                     l1444:
   807                           
   808                           ;RTC_with_PIC_main.c: 53:      Lcd_Set_Cursor(2,1);
   809  062E  01F4               	clrf	Lcd_Set_Cursor@b
   810  062F  0AF4               	incf	Lcd_Set_Cursor@b,f
   811  0630  3002               	movlw	2
   812  0631  120A  118A  21E3  120A  118A  	fcall	_Lcd_Set_Cursor
   813  0636                     l1446:
   814                           
   815                           ;RTC_with_PIC_main.c: 54:      Lcd_Print_String("SMART IRRIGATION");
   816  0636  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   817  0637  120A  118A  20D1  120A  118A  	fcall	_Lcd_Print_String
   818  063C                     l1448:
   819                           
   820                           ;RTC_with_PIC_main.c: 55:      _delay((unsigned long)((1500)*(20000000/4000.0)));
   821  063C  3027               	movlw	39
   822  063D  1283               	bcf	3,5	;RP0=0, select bank0
   823  063E  1303               	bcf	3,6	;RP1=0, select bank0
   824  063F  00B7               	movwf	??_main+2
   825  0640  300D               	movlw	13
   826  0641  00B6               	movwf	??_main+1
   827  0642  3025               	movlw	37
   828  0643  00B5               	movwf	??_main
   829  0644                     u1057:
   830  0644  0BB5               	decfsz	??_main,f
   831  0645  2E44               	goto	u1057
   832  0646  0BB6               	decfsz	??_main+1,f
   833  0647  2E44               	goto	u1057
   834  0648  0BB7               	decfsz	??_main+2,f
   835  0649  2E44               	goto	u1057
   836  064A  2E4B               	nop2
   837  064B                     l1450:
   838                           
   839                           ;RTC_with_PIC_main.c: 58:   {;RTC_with_PIC_main.c: 60:     Update_Current_Date_Time();
   840  064B  120A  118A  2513  120A  118A  	fcall	_Update_Current_Date_Time
   841  0650                     l1452:
   842                           
   843                           ;RTC_with_PIC_main.c: 63:      char sec_0 = sec%10;
   844  0650  300A               	movlw	10
   845  0651  00F0               	movwf	___awmod@divisor
   846  0652  3000               	movlw	0
   847  0653  00F1               	movwf	___awmod@divisor+1
   848  0654  1283               	bcf	3,5	;RP0=0, select bank0
   849  0655  1303               	bcf	3,6	;RP1=0, select bank0
   850  0656  084F               	movf	_sec+1,w
   851  0657  00F3               	movwf	___awmod@dividend+1
   852  0658  084E               	movf	_sec,w
   853  0659  00F2               	movwf	___awmod@dividend
   854  065A  120A  118A  22DD  120A  118A  	fcall	___awmod
   855  065F  0870               	movf	?___awmod,w
   856  0660  1283               	bcf	3,5	;RP0=0, select bank0
   857  0661  1303               	bcf	3,6	;RP1=0, select bank0
   858  0662  00B5               	movwf	??_main
   859  0663  0835               	movf	??_main,w
   860  0664  00B8               	movwf	main@sec_0
   861  0665                     l1454:
   862                           
   863                           ;RTC_with_PIC_main.c: 64:      char sec_1 = (sec/10);
   864  0665  300A               	movlw	10
   865  0666  00F0               	movwf	___awdiv@divisor
   866  0667  3000               	movlw	0
   867  0668  00F1               	movwf	___awdiv@divisor+1
   868  0669  084F               	movf	_sec+1,w
   869  066A  00F3               	movwf	___awdiv@dividend+1
   870  066B  084E               	movf	_sec,w
   871  066C  00F2               	movwf	___awdiv@dividend
   872  066D  120A  118A  2395  120A  118A  	fcall	___awdiv
   873  0672  0870               	movf	?___awdiv,w
   874  0673  1283               	bcf	3,5	;RP0=0, select bank0
   875  0674  1303               	bcf	3,6	;RP1=0, select bank0
   876  0675  00B5               	movwf	??_main
   877  0676  0835               	movf	??_main,w
   878  0677  00B9               	movwf	main@sec_1
   879  0678                     l1456:
   880                           
   881                           ;RTC_with_PIC_main.c: 65:      char min_0 = min%10;
   882  0678  300A               	movlw	10
   883  0679  00F0               	movwf	___awmod@divisor
   884  067A  3000               	movlw	0
   885  067B  00F1               	movwf	___awmod@divisor+1
   886  067C  084D               	movf	_min+1,w
   887  067D  00F3               	movwf	___awmod@dividend+1
   888  067E  084C               	movf	_min,w
   889  067F  00F2               	movwf	___awmod@dividend
   890  0680  120A  118A  22DD  120A  118A  	fcall	___awmod
   891  0685  0870               	movf	?___awmod,w
   892  0686  1283               	bcf	3,5	;RP0=0, select bank0
   893  0687  1303               	bcf	3,6	;RP1=0, select bank0
   894  0688  00B5               	movwf	??_main
   895  0689  0835               	movf	??_main,w
   896  068A  00BA               	movwf	main@min_0
   897  068B                     l1458:
   898                           
   899                           ;RTC_with_PIC_main.c: 66:      char min_1 = min/10;
   900  068B  300A               	movlw	10
   901  068C  00F0               	movwf	___awdiv@divisor
   902  068D  3000               	movlw	0
   903  068E  00F1               	movwf	___awdiv@divisor+1
   904  068F  084D               	movf	_min+1,w
   905  0690  00F3               	movwf	___awdiv@dividend+1
   906  0691  084C               	movf	_min,w
   907  0692  00F2               	movwf	___awdiv@dividend
   908  0693  120A  118A  2395  120A  118A  	fcall	___awdiv
   909  0698  0870               	movf	?___awdiv,w
   910  0699  1283               	bcf	3,5	;RP0=0, select bank0
   911  069A  1303               	bcf	3,6	;RP1=0, select bank0
   912  069B  00B5               	movwf	??_main
   913  069C  0835               	movf	??_main,w
   914  069D  00BB               	movwf	main@min_1
   915  069E                     l1460:
   916                           
   917                           ;RTC_with_PIC_main.c: 67:      char hour_0 = hour%10;
   918  069E  300A               	movlw	10
   919  069F  00F0               	movwf	___awmod@divisor
   920  06A0  3000               	movlw	0
   921  06A1  00F1               	movwf	___awmod@divisor+1
   922  06A2  084B               	movf	_hour+1,w
   923  06A3  00F3               	movwf	___awmod@dividend+1
   924  06A4  084A               	movf	_hour,w
   925  06A5  00F2               	movwf	___awmod@dividend
   926  06A6  120A  118A  22DD  120A  118A  	fcall	___awmod
   927  06AB  0870               	movf	?___awmod,w
   928  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   929  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   930  06AE  00B5               	movwf	??_main
   931  06AF  0835               	movf	??_main,w
   932  06B0  00BC               	movwf	main@hour_0
   933  06B1                     l1462:
   934                           
   935                           ;RTC_with_PIC_main.c: 68:      char hour_1 = hour/10;
   936  06B1  300A               	movlw	10
   937  06B2  00F0               	movwf	___awdiv@divisor
   938  06B3  3000               	movlw	0
   939  06B4  00F1               	movwf	___awdiv@divisor+1
   940  06B5  084B               	movf	_hour+1,w
   941  06B6  00F3               	movwf	___awdiv@dividend+1
   942  06B7  084A               	movf	_hour,w
   943  06B8  00F2               	movwf	___awdiv@dividend
   944  06B9  120A  118A  2395  120A  118A  	fcall	___awdiv
   945  06BE  0870               	movf	?___awdiv,w
   946  06BF  1283               	bcf	3,5	;RP0=0, select bank0
   947  06C0  1303               	bcf	3,6	;RP1=0, select bank0
   948  06C1  00B5               	movwf	??_main
   949  06C2  0835               	movf	??_main,w
   950  06C3  00BD               	movwf	main@hour_1
   951  06C4                     l1464:
   952                           
   953                           ;RTC_with_PIC_main.c: 69:      char date_0 = date%10;
   954  06C4  300A               	movlw	10
   955  06C5  00F0               	movwf	___awmod@divisor
   956  06C6  3000               	movlw	0
   957  06C7  00F1               	movwf	___awmod@divisor+1
   958  06C8  0849               	movf	_date+1,w
   959  06C9  00F3               	movwf	___awmod@dividend+1
   960  06CA  0848               	movf	_date,w
   961  06CB  00F2               	movwf	___awmod@dividend
   962  06CC  120A  118A  22DD  120A  118A  	fcall	___awmod
   963  06D1  0870               	movf	?___awmod,w
   964  06D2  1283               	bcf	3,5	;RP0=0, select bank0
   965  06D3  1303               	bcf	3,6	;RP1=0, select bank0
   966  06D4  00B5               	movwf	??_main
   967  06D5  0835               	movf	??_main,w
   968  06D6  00BE               	movwf	main@date_0
   969  06D7                     l1466:
   970                           
   971                           ;RTC_with_PIC_main.c: 70:      char date_1 = date/10;
   972  06D7  300A               	movlw	10
   973  06D8  00F0               	movwf	___awdiv@divisor
   974  06D9  3000               	movlw	0
   975  06DA  00F1               	movwf	___awdiv@divisor+1
   976  06DB  0849               	movf	_date+1,w
   977  06DC  00F3               	movwf	___awdiv@dividend+1
   978  06DD  0848               	movf	_date,w
   979  06DE  00F2               	movwf	___awdiv@dividend
   980  06DF  120A  118A  2395  120A  118A  	fcall	___awdiv
   981  06E4  0870               	movf	?___awdiv,w
   982  06E5  1283               	bcf	3,5	;RP0=0, select bank0
   983  06E6  1303               	bcf	3,6	;RP1=0, select bank0
   984  06E7  00B5               	movwf	??_main
   985  06E8  0835               	movf	??_main,w
   986  06E9  00BF               	movwf	main@date_1
   987  06EA                     l1468:
   988                           
   989                           ;RTC_with_PIC_main.c: 71:      char month_0 = month%10;
   990  06EA  300A               	movlw	10
   991  06EB  00F0               	movwf	___awmod@divisor
   992  06EC  3000               	movlw	0
   993  06ED  00F1               	movwf	___awmod@divisor+1
   994  06EE  0847               	movf	_month+1,w
   995  06EF  00F3               	movwf	___awmod@dividend+1
   996  06F0  0846               	movf	_month,w
   997  06F1  00F2               	movwf	___awmod@dividend
   998  06F2  120A  118A  22DD  120A  118A  	fcall	___awmod
   999  06F7  0870               	movf	?___awmod,w
  1000  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  1001  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  1002  06FA  00B5               	movwf	??_main
  1003  06FB  0835               	movf	??_main,w
  1004  06FC  00C0               	movwf	main@month_0
  1005  06FD                     l1470:
  1006                           
  1007                           ;RTC_with_PIC_main.c: 72:      char month_1 = month/10;
  1008  06FD  300A               	movlw	10
  1009  06FE  00F0               	movwf	___awdiv@divisor
  1010  06FF  3000               	movlw	0
  1011  0700  00F1               	movwf	___awdiv@divisor+1
  1012  0701  0847               	movf	_month+1,w
  1013  0702  00F3               	movwf	___awdiv@dividend+1
  1014  0703  0846               	movf	_month,w
  1015  0704  00F2               	movwf	___awdiv@dividend
  1016  0705  120A  118A  2395  120A  118A  	fcall	___awdiv
  1017  070A  0870               	movf	?___awdiv,w
  1018  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1019  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1020  070D  00B5               	movwf	??_main
  1021  070E  0835               	movf	??_main,w
  1022  070F  00C1               	movwf	main@month_1
  1023  0710                     l1472:
  1024                           
  1025                           ;RTC_with_PIC_main.c: 73:      char year_0 = year%10;
  1026  0710  300A               	movlw	10
  1027  0711  00F0               	movwf	___awmod@divisor
  1028  0712  3000               	movlw	0
  1029  0713  00F1               	movwf	___awmod@divisor+1
  1030  0714  0845               	movf	_year+1,w
  1031  0715  00F3               	movwf	___awmod@dividend+1
  1032  0716  0844               	movf	_year,w
  1033  0717  00F2               	movwf	___awmod@dividend
  1034  0718  120A  118A  22DD  120A  118A  	fcall	___awmod
  1035  071D  0870               	movf	?___awmod,w
  1036  071E  1283               	bcf	3,5	;RP0=0, select bank0
  1037  071F  1303               	bcf	3,6	;RP1=0, select bank0
  1038  0720  00B5               	movwf	??_main
  1039  0721  0835               	movf	??_main,w
  1040  0722  00C2               	movwf	main@year_0
  1041  0723                     l1474:
  1042                           
  1043                           ;RTC_with_PIC_main.c: 74:      char year_1 = year/10;
  1044  0723  300A               	movlw	10
  1045  0724  00F0               	movwf	___awdiv@divisor
  1046  0725  3000               	movlw	0
  1047  0726  00F1               	movwf	___awdiv@divisor+1
  1048  0727  0845               	movf	_year+1,w
  1049  0728  00F3               	movwf	___awdiv@dividend+1
  1050  0729  0844               	movf	_year,w
  1051  072A  00F2               	movwf	___awdiv@dividend
  1052  072B  120A  118A  2395  120A  118A  	fcall	___awdiv
  1053  0730  0870               	movf	?___awdiv,w
  1054  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0733  00B5               	movwf	??_main
  1057  0734  0835               	movf	??_main,w
  1058  0735  00C3               	movwf	main@year_1
  1059  0736                     l1476:
  1060                           
  1061                           ;RTC_with_PIC_main.c: 77:         Lcd_Clear();
  1062  0736  120A  118A  2068  120A  118A  	fcall	_Lcd_Clear
  1063  073B                     l1478:
  1064                           
  1065                           ;RTC_with_PIC_main.c: 78:         Lcd_Set_Cursor(1,1);
  1066  073B  01F4               	clrf	Lcd_Set_Cursor@b
  1067  073C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1068  073D  3001               	movlw	1
  1069  073E  120A  118A  21E3  120A  118A  	fcall	_Lcd_Set_Cursor
  1070  0743                     l1480:
  1071                           
  1072                           ;RTC_with_PIC_main.c: 79:         Lcd_Print_String("TIME: ");
  1073  0743  3021               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1074  0744  120A  118A  20D1  120A  118A  	fcall	_Lcd_Print_String
  1075  0749                     l1482:
  1076                           
  1077                           ;RTC_with_PIC_main.c: 80:         Lcd_Print_Char(hour_1+'0');
  1078  0749  1283               	bcf	3,5	;RP0=0, select bank0
  1079  074A  1303               	bcf	3,6	;RP1=0, select bank0
  1080  074B  083D               	movf	main@hour_1,w
  1081  074C  3E30               	addlw	48
  1082  074D  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1083  0752                     l1484:
  1084                           
  1085                           ;RTC_with_PIC_main.c: 81:         Lcd_Print_Char(hour_0+'0');
  1086  0752  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0753  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0754  083C               	movf	main@hour_0,w
  1089  0755  3E30               	addlw	48
  1090  0756  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1091  075B                     l1486:
  1092                           
  1093                           ;RTC_with_PIC_main.c: 82:         Lcd_Print_Char(':');
  1094  075B  303A               	movlw	58
  1095  075C  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1096  0761                     l1488:
  1097                           
  1098                           ;RTC_with_PIC_main.c: 83:         Lcd_Print_Char(min_1+'0');
  1099  0761  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0762  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0763  083B               	movf	main@min_1,w
  1102  0764  3E30               	addlw	48
  1103  0765  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1104  076A                     l1490:
  1105                           
  1106                           ;RTC_with_PIC_main.c: 84:         Lcd_Print_Char(min_0+'0');
  1107  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1108  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1109  076C  083A               	movf	main@min_0,w
  1110  076D  3E30               	addlw	48
  1111  076E  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1112  0773                     l1492:
  1113                           
  1114                           ;RTC_with_PIC_main.c: 85:         Lcd_Print_Char(':');
  1115  0773  303A               	movlw	58
  1116  0774  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1117  0779                     l1494:
  1118                           
  1119                           ;RTC_with_PIC_main.c: 86:         Lcd_Print_Char(sec_1+'0');
  1120  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1121  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1122  077B  0839               	movf	main@sec_1,w
  1123  077C  3E30               	addlw	48
  1124  077D  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1125  0782                     l1496:
  1126                           
  1127                           ;RTC_with_PIC_main.c: 87:         Lcd_Print_Char(sec_0+'0');
  1128  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0783  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0784  0838               	movf	main@sec_0,w
  1131  0785  3E30               	addlw	48
  1132  0786  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1133  078B                     l1498:
  1134                           
  1135                           ;RTC_with_PIC_main.c: 90:         Lcd_Set_Cursor(2,1);
  1136  078B  01F4               	clrf	Lcd_Set_Cursor@b
  1137  078C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1138  078D  3002               	movlw	2
  1139  078E  120A  118A  21E3  120A  118A  	fcall	_Lcd_Set_Cursor
  1140  0793                     l1500:
  1141                           
  1142                           ;RTC_with_PIC_main.c: 91:         Lcd_Print_String("DATE: ");
  1143  0793  3028               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1144  0794  120A  118A  20D1  120A  118A  	fcall	_Lcd_Print_String
  1145  0799                     l1502:
  1146                           
  1147                           ;RTC_with_PIC_main.c: 92:         Lcd_Print_Char(date_1+'0');
  1148  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1149  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1150  079B  083F               	movf	main@date_1,w
  1151  079C  3E30               	addlw	48
  1152  079D  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1153  07A2                     l1504:
  1154                           
  1155                           ;RTC_with_PIC_main.c: 93:         Lcd_Print_Char(date_0+'0');
  1156  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  1157  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  1158  07A4  083E               	movf	main@date_0,w
  1159  07A5  3E30               	addlw	48
  1160  07A6  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1161  07AB                     l1506:
  1162                           
  1163                           ;RTC_with_PIC_main.c: 94:         Lcd_Print_Char(':');
  1164  07AB  303A               	movlw	58
  1165  07AC  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1166  07B1                     l1508:
  1167                           
  1168                           ;RTC_with_PIC_main.c: 95:         Lcd_Print_Char(month_1+'0');
  1169  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1170  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1171  07B3  0841               	movf	main@month_1,w
  1172  07B4  3E30               	addlw	48
  1173  07B5  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1174  07BA                     l1510:
  1175                           
  1176                           ;RTC_with_PIC_main.c: 96:         Lcd_Print_Char(month_0+'0');
  1177  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1178  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1179  07BC  0840               	movf	main@month_0,w
  1180  07BD  3E30               	addlw	48
  1181  07BE  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1182  07C3                     l1512:
  1183                           
  1184                           ;RTC_with_PIC_main.c: 97:         Lcd_Print_Char(':');
  1185  07C3  303A               	movlw	58
  1186  07C4  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1187  07C9                     l1514:
  1188                           
  1189                           ;RTC_with_PIC_main.c: 98:         Lcd_Print_Char(year_1+'0');
  1190  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1191  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1192  07CB  0843               	movf	main@year_1,w
  1193  07CC  3E30               	addlw	48
  1194  07CD  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1195  07D2                     l1516:
  1196                           
  1197                           ;RTC_with_PIC_main.c: 99:         Lcd_Print_Char(year_0+'0');
  1198  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1199  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1200  07D4  0842               	movf	main@year_0,w
  1201  07D5  3E30               	addlw	48
  1202  07D6  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  1203  07DB                     l1518:
  1204                           
  1205                           ;RTC_with_PIC_main.c: 100:         _delay((unsigned long)((500)*(20000000/4000.0)));
  1206  07DB  300D               	movlw	13
  1207  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1208  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1209  07DE  00B7               	movwf	??_main+2
  1210  07DF  30AF               	movlw	175
  1211  07E0  00B6               	movwf	??_main+1
  1212  07E1  30B5               	movlw	181
  1213  07E2  00B5               	movwf	??_main
  1214  07E3                     u1067:
  1215  07E3  0BB5               	decfsz	??_main,f
  1216  07E4  2FE3               	goto	u1067
  1217  07E5  0BB6               	decfsz	??_main+1,f
  1218  07E6  2FE3               	goto	u1067
  1219  07E7  0BB7               	decfsz	??_main+2,f
  1220  07E8  2FE3               	goto	u1067
  1221  07E9  2FEA               	nop2
  1222  07EA  2E4B               	goto	l1450
  1223  07EB  120A  118A  2800   	ljmp	start
  1224  07EE                     __end_of_main:
  1225                           
  1226                           	psect	text1
  1227  0513                     __ptext1:	
  1228 ;; *************** function _Update_Current_Date_Time *****************
  1229 ;; Defined at:
  1230 ;;		line 35 in file "./PIC16F877a_DS3231.h"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0, pclath, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1244 ;;      Params:         0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used: 1
  1250 ;; Hardware stack levels required when called: 2
  1251 ;; This function calls:
  1252 ;;		_BCD_2_DEC
  1253 ;;		_I2C_Begin
  1254 ;;		_I2C_End
  1255 ;;		_I2C_Read
  1256 ;;		_I2C_Write
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262  0513                     _Update_Current_Date_Time:	
  1263                           ;psect for function _Update_Current_Date_Time
  1264                           
  1265  0513                     l1428:	
  1266                           ;incstack = 0
  1267                           ; Regs used in _Update_Current_Date_Time: [wreg+status,2+status,0+pclath+cstack]
  1268                           
  1269                           
  1270                           ;./PIC16F877a_DS3231.h: 38:    I2C_Begin();
  1271  0513  120A  118A  2040  120A  118A  	fcall	_I2C_Begin
  1272                           
  1273                           ;./PIC16F877a_DS3231.h: 39:    I2C_Write(0xD0);
  1274  0518  30D0               	movlw	208
  1275  0519  1283               	bcf	3,5	;RP0=0, select bank0
  1276  051A  1303               	bcf	3,6	;RP1=0, select bank0
  1277  051B  00A0               	movwf	I2C_Write@data
  1278  051C  3000               	movlw	0
  1279  051D  00A1               	movwf	I2C_Write@data+1
  1280  051E  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1281                           
  1282                           ;./PIC16F877a_DS3231.h: 40:    I2C_Write(0);
  1283  0523  3000               	movlw	0
  1284  0524  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0525  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0526  00A0               	movwf	I2C_Write@data
  1287  0527  00A1               	movwf	I2C_Write@data+1
  1288  0528  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1289                           
  1290                           ;./PIC16F877a_DS3231.h: 41:    I2C_End();
  1291  052D  120A  118A  2049  120A  118A  	fcall	_I2C_End
  1292                           
  1293                           ;./PIC16F877a_DS3231.h: 44:    I2C_Begin();
  1294  0532  120A  118A  2040  120A  118A  	fcall	_I2C_Begin
  1295                           
  1296                           ;./PIC16F877a_DS3231.h: 45:    I2C_Write(0xD1);
  1297  0537  30D1               	movlw	209
  1298  0538  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0539  1303               	bcf	3,6	;RP1=0, select bank0
  1300  053A  00A0               	movwf	I2C_Write@data
  1301  053B  3000               	movlw	0
  1302  053C  00A1               	movwf	I2C_Write@data+1
  1303  053D  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1304                           
  1305                           ;./PIC16F877a_DS3231.h: 46:    sec = BCD_2_DEC(I2C_Read(1));
  1306  0542  3001               	movlw	1
  1307  0543  00F0               	movwf	I2C_Read@ack
  1308  0544  3000               	movlw	0
  1309  0545  00F1               	movwf	I2C_Read@ack+1
  1310  0546  120A  118A  2140  120A  118A  	fcall	_I2C_Read
  1311  054B  0871               	movf	?_I2C_Read+1,w
  1312  054C  00F7               	movwf	BCD_2_DEC@to_convert+1
  1313  054D  0870               	movf	?_I2C_Read,w
  1314  054E  00F6               	movwf	BCD_2_DEC@to_convert
  1315  054F  120A  118A  211B  120A  118A  	fcall	_BCD_2_DEC
  1316  0554  0877               	movf	?_BCD_2_DEC+1,w
  1317  0555  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0556  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0557  00CF               	movwf	_sec+1
  1320  0558  0876               	movf	?_BCD_2_DEC,w
  1321  0559  00CE               	movwf	_sec
  1322                           
  1323                           ;./PIC16F877a_DS3231.h: 47:    min = BCD_2_DEC(I2C_Read(1));
  1324  055A  3001               	movlw	1
  1325  055B  00F0               	movwf	I2C_Read@ack
  1326  055C  3000               	movlw	0
  1327  055D  00F1               	movwf	I2C_Read@ack+1
  1328  055E  120A  118A  2140  120A  118A  	fcall	_I2C_Read
  1329  0563  0871               	movf	?_I2C_Read+1,w
  1330  0564  00F7               	movwf	BCD_2_DEC@to_convert+1
  1331  0565  0870               	movf	?_I2C_Read,w
  1332  0566  00F6               	movwf	BCD_2_DEC@to_convert
  1333  0567  120A  118A  211B  120A  118A  	fcall	_BCD_2_DEC
  1334  056C  0877               	movf	?_BCD_2_DEC+1,w
  1335  056D  1283               	bcf	3,5	;RP0=0, select bank0
  1336  056E  1303               	bcf	3,6	;RP1=0, select bank0
  1337  056F  00CD               	movwf	_min+1
  1338  0570  0876               	movf	?_BCD_2_DEC,w
  1339  0571  00CC               	movwf	_min
  1340                           
  1341                           ;./PIC16F877a_DS3231.h: 48:    hour = BCD_2_DEC(I2C_Read(1));
  1342  0572  3001               	movlw	1
  1343  0573  00F0               	movwf	I2C_Read@ack
  1344  0574  3000               	movlw	0
  1345  0575  00F1               	movwf	I2C_Read@ack+1
  1346  0576  120A  118A  2140  120A  118A  	fcall	_I2C_Read
  1347  057B  0871               	movf	?_I2C_Read+1,w
  1348  057C  00F7               	movwf	BCD_2_DEC@to_convert+1
  1349  057D  0870               	movf	?_I2C_Read,w
  1350  057E  00F6               	movwf	BCD_2_DEC@to_convert
  1351  057F  120A  118A  211B  120A  118A  	fcall	_BCD_2_DEC
  1352  0584  0877               	movf	?_BCD_2_DEC+1,w
  1353  0585  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0586  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0587  00CB               	movwf	_hour+1
  1356  0588  0876               	movf	?_BCD_2_DEC,w
  1357  0589  00CA               	movwf	_hour
  1358                           
  1359                           ;./PIC16F877a_DS3231.h: 49:    I2C_Read(1);
  1360  058A  3001               	movlw	1
  1361  058B  00F0               	movwf	I2C_Read@ack
  1362  058C  3000               	movlw	0
  1363  058D  00F1               	movwf	I2C_Read@ack+1
  1364  058E  120A  118A  2140  120A  118A  	fcall	_I2C_Read
  1365                           
  1366                           ;./PIC16F877a_DS3231.h: 50:    date = BCD_2_DEC(I2C_Read(1));
  1367  0593  3001               	movlw	1
  1368  0594  00F0               	movwf	I2C_Read@ack
  1369  0595  3000               	movlw	0
  1370  0596  00F1               	movwf	I2C_Read@ack+1
  1371  0597  120A  118A  2140  120A  118A  	fcall	_I2C_Read
  1372  059C  0871               	movf	?_I2C_Read+1,w
  1373  059D  00F7               	movwf	BCD_2_DEC@to_convert+1
  1374  059E  0870               	movf	?_I2C_Read,w
  1375  059F  00F6               	movwf	BCD_2_DEC@to_convert
  1376  05A0  120A  118A  211B  120A  118A  	fcall	_BCD_2_DEC
  1377  05A5  0877               	movf	?_BCD_2_DEC+1,w
  1378  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1379  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1380  05A8  00C9               	movwf	_date+1
  1381  05A9  0876               	movf	?_BCD_2_DEC,w
  1382  05AA  00C8               	movwf	_date
  1383                           
  1384                           ;./PIC16F877a_DS3231.h: 51:    month = BCD_2_DEC(I2C_Read(1));
  1385  05AB  3001               	movlw	1
  1386  05AC  00F0               	movwf	I2C_Read@ack
  1387  05AD  3000               	movlw	0
  1388  05AE  00F1               	movwf	I2C_Read@ack+1
  1389  05AF  120A  118A  2140  120A  118A  	fcall	_I2C_Read
  1390  05B4  0871               	movf	?_I2C_Read+1,w
  1391  05B5  00F7               	movwf	BCD_2_DEC@to_convert+1
  1392  05B6  0870               	movf	?_I2C_Read,w
  1393  05B7  00F6               	movwf	BCD_2_DEC@to_convert
  1394  05B8  120A  118A  211B  120A  118A  	fcall	_BCD_2_DEC
  1395  05BD  0877               	movf	?_BCD_2_DEC+1,w
  1396  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  1397  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  1398  05C0  00C7               	movwf	_month+1
  1399  05C1  0876               	movf	?_BCD_2_DEC,w
  1400  05C2  00C6               	movwf	_month
  1401                           
  1402                           ;./PIC16F877a_DS3231.h: 52:    year = BCD_2_DEC(I2C_Read(1));
  1403  05C3  3001               	movlw	1
  1404  05C4  00F0               	movwf	I2C_Read@ack
  1405  05C5  3000               	movlw	0
  1406  05C6  00F1               	movwf	I2C_Read@ack+1
  1407  05C7  120A  118A  2140  120A  118A  	fcall	_I2C_Read
  1408  05CC  0871               	movf	?_I2C_Read+1,w
  1409  05CD  00F7               	movwf	BCD_2_DEC@to_convert+1
  1410  05CE  0870               	movf	?_I2C_Read,w
  1411  05CF  00F6               	movwf	BCD_2_DEC@to_convert
  1412  05D0  120A  118A  211B  120A  118A  	fcall	_BCD_2_DEC
  1413  05D5  0877               	movf	?_BCD_2_DEC+1,w
  1414  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1415  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1416  05D8  00C5               	movwf	_year+1
  1417  05D9  0876               	movf	?_BCD_2_DEC,w
  1418  05DA  00C4               	movwf	_year
  1419                           
  1420                           ;./PIC16F877a_DS3231.h: 53:    I2C_End();
  1421  05DB  120A  118A  2049  120A  118A  	fcall	_I2C_End
  1422                           
  1423                           ;./PIC16F877a_DS3231.h: 56:     I2C_Begin();
  1424  05E0  120A  118A  2040  120A  118A  	fcall	_I2C_Begin
  1425                           
  1426                           ;./PIC16F877a_DS3231.h: 57:     I2C_Write(0xD1);
  1427  05E5  30D1               	movlw	209
  1428  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1429  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1430  05E8  00A0               	movwf	I2C_Write@data
  1431  05E9  3000               	movlw	0
  1432  05EA  00A1               	movwf	I2C_Write@data+1
  1433  05EB  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1434                           
  1435                           ;./PIC16F877a_DS3231.h: 58:     I2C_Read(1);
  1436  05F0  3001               	movlw	1
  1437  05F1  00F0               	movwf	I2C_Read@ack
  1438  05F2  3000               	movlw	0
  1439  05F3  00F1               	movwf	I2C_Read@ack+1
  1440  05F4  120A  118A  2140  120A  118A  	fcall	_I2C_Read
  1441                           
  1442                           ;./PIC16F877a_DS3231.h: 59:     I2C_End();
  1443  05F9  120A  118A  2049  120A  118A  	fcall	_I2C_End
  1444  05FE                     l128:
  1445  05FE  0008               	return
  1446  05FF                     __end_of_Update_Current_Date_Time:
  1447                           
  1448                           	psect	text2
  1449  0140                     __ptext2:	
  1450 ;; *************** function _I2C_Read *****************
  1451 ;; Defined at:
  1452 ;;		line 40 in file "./PIC16F877a_I2C.h"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  ack             2    0[COMMON] unsigned short 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  incoming        2    4[COMMON] unsigned short 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  2    0[COMMON] unsigned short 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         2       0       0       0       0
  1467 ;;      Locals:         2       0       0       0       0
  1468 ;;      Temps:          2       0       0       0       0
  1469 ;;      Totals:         6       0       0       0       0
  1470 ;;Total ram usage:        6 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; Hardware stack levels required when called: 1
  1473 ;; This function calls:
  1474 ;;		_I2C_Hold
  1475 ;; This function is called by:
  1476 ;;		_Update_Current_Date_Time
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480  0140                     _I2C_Read:	
  1481                           ;psect for function _I2C_Read
  1482                           
  1483  0140                     l1290:	
  1484                           ;incstack = 0
  1485                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  1486                           
  1487                           
  1488                           ;./PIC16F877a_I2C.h: 40: unsigned short I2C_Read(unsigned short ack);./PIC16F877a_I2C.h:
      +                           41: {;./PIC16F877a_I2C.h: 42:   unsigned short incoming;;./PIC16F877a_I2C.h: 43:   I2C_
      +                          Hold();
  1489  0140  120A  118A  2075  120A  118A  	fcall	_I2C_Hold
  1490  0145                     l1292:
  1491                           
  1492                           ;./PIC16F877a_I2C.h: 44:   RCEN = 1;
  1493  0145  1683               	bsf	3,5	;RP0=1, select bank1
  1494  0146  1303               	bcf	3,6	;RP1=0, select bank1
  1495  0147  1591               	bsf	17,3	;volatile
  1496                           
  1497                           ;./PIC16F877a_I2C.h: 46:   I2C_Hold();
  1498  0148  120A  118A  2075  120A  118A  	fcall	_I2C_Hold
  1499  014D                     l1294:
  1500                           
  1501                           ;./PIC16F877a_I2C.h: 47:   incoming = SSPBUF;
  1502  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1503  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1504  014F  0813               	movf	19,w	;volatile
  1505  0150  00F2               	movwf	??_I2C_Read
  1506  0151  01F3               	clrf	??_I2C_Read+1
  1507  0152  0872               	movf	??_I2C_Read,w
  1508  0153  00F4               	movwf	I2C_Read@incoming
  1509  0154  0873               	movf	??_I2C_Read+1,w
  1510  0155  00F5               	movwf	I2C_Read@incoming+1
  1511  0156                     l1296:
  1512                           
  1513                           ;./PIC16F877a_I2C.h: 49:   I2C_Hold();
  1514  0156  120A  118A  2075  120A  118A  	fcall	_I2C_Hold
  1515  015B                     l1298:
  1516                           
  1517                           ;./PIC16F877a_I2C.h: 50:   ACKDT = (ack)?0:1;
  1518  015B  0870               	movf	I2C_Read@ack,w
  1519  015C  0471               	iorwf	I2C_Read@ack+1,w
  1520  015D  1903               	btfsc	3,2
  1521  015E  2960               	goto	u851
  1522  015F  2964               	goto	u850
  1523  0160                     u851:
  1524  0160  1683               	bsf	3,5	;RP0=1, select bank1
  1525  0161  1303               	bcf	3,6	;RP1=0, select bank1
  1526  0162  1691               	bsf	17,5	;volatile
  1527  0163  2967               	goto	u864
  1528  0164                     u850:
  1529  0164  1683               	bsf	3,5	;RP0=1, select bank1
  1530  0165  1303               	bcf	3,6	;RP1=0, select bank1
  1531  0166  1291               	bcf	17,5	;volatile
  1532  0167                     u864:
  1533  0167                     l1300:
  1534                           
  1535                           ;./PIC16F877a_I2C.h: 51:   ACKEN = 1;
  1536  0167  1611               	bsf	17,4	;volatile
  1537  0168                     l1302:
  1538                           
  1539                           ;./PIC16F877a_I2C.h: 53:   return incoming;
  1540  0168  0875               	movf	I2C_Read@incoming+1,w
  1541  0169  00F1               	movwf	?_I2C_Read+1
  1542  016A  0874               	movf	I2C_Read@incoming,w
  1543  016B  00F0               	movwf	?_I2C_Read
  1544  016C                     l116:
  1545  016C  0008               	return
  1546  016D                     __end_of_I2C_Read:
  1547                           
  1548                           	psect	text3
  1549  011B                     __ptext3:	
  1550 ;; *************** function _BCD_2_DEC *****************
  1551 ;; Defined at:
  1552 ;;		line 10 in file "./PIC16F877a_DS3231.h"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  to_convert      2    6[COMMON] int 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  2    6[COMMON] int 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0, pclath, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         2       0       0       0       0
  1567 ;;      Locals:         0       0       0       0       0
  1568 ;;      Temps:          2       0       0       0       0
  1569 ;;      Totals:         4       0       0       0       0
  1570 ;;Total ram usage:        4 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 1
  1573 ;; This function calls:
  1574 ;;		___wmul
  1575 ;; This function is called by:
  1576 ;;		_Update_Current_Date_Time
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580  011B                     _BCD_2_DEC:	
  1581                           ;psect for function _BCD_2_DEC
  1582                           
  1583  011B                     l1306:	
  1584                           ;incstack = 0
  1585                           ; Regs used in _BCD_2_DEC: [wreg+status,2+status,0+pclath+cstack]
  1586                           
  1587                           
  1588                           ;./PIC16F877a_DS3231.h: 10: int BCD_2_DEC(int to_convert);./PIC16F877a_DS3231.h: 11: {;.
      +                          /PIC16F877a_DS3231.h: 12:    return (to_convert >> 4)*10+(to_convert & 0x0F);
  1589  011B  300F               	movlw	15
  1590  011C  0576               	andwf	BCD_2_DEC@to_convert,w
  1591  011D  00F8               	movwf	??_BCD_2_DEC
  1592  011E  3000               	movlw	0
  1593  011F  0577               	andwf	BCD_2_DEC@to_convert+1,w
  1594  0120  00F9               	movwf	??_BCD_2_DEC+1
  1595  0121  0E76               	swapf	BCD_2_DEC@to_convert,w
  1596  0122  390F               	andlw	15
  1597  0123  00F0               	movwf	___wmul@multiplier
  1598  0124  0E77               	swapf	BCD_2_DEC@to_convert+1,w
  1599  0125  39F0               	andlw	240
  1600  0126  04F0               	iorwf	___wmul@multiplier,f
  1601  0127  0E77               	swapf	BCD_2_DEC@to_convert+1,w
  1602  0128  390F               	andlw	15
  1603  0129  00F1               	movwf	___wmul@multiplier+1
  1604  012A  30F0               	movlw	240
  1605  012B  1DF1               	btfss	___wmul@multiplier+1,3
  1606  012C  3000               	movlw	0
  1607  012D  04F1               	iorwf	___wmul@multiplier+1,f
  1608  012E  300A               	movlw	10
  1609  012F  00F2               	movwf	___wmul@multiplicand
  1610  0130  3000               	movlw	0
  1611  0131  00F3               	movwf	___wmul@multiplicand+1
  1612  0132  120A  118A  20F6  120A  118A  	fcall	___wmul
  1613  0137  0878               	movf	??_BCD_2_DEC,w
  1614  0138  0770               	addwf	?___wmul,w
  1615  0139  00F6               	movwf	?_BCD_2_DEC
  1616  013A  0879               	movf	??_BCD_2_DEC+1,w
  1617  013B  1803               	skipnc
  1618  013C  0A79               	incf	??_BCD_2_DEC+1,w
  1619  013D  0771               	addwf	?___wmul+1,w
  1620  013E  00F7               	movwf	?_BCD_2_DEC+1
  1621  013F                     l119:
  1622  013F  0008               	return
  1623  0140                     __end_of_BCD_2_DEC:
  1624                           
  1625                           	psect	text4
  1626  00F6                     __ptext4:	
  1627 ;; *************** function ___wmul *****************
  1628 ;; Defined at:
  1629 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  multiplier      2    0[COMMON] unsigned int 
  1632 ;;  multiplicand    2    2[COMMON] unsigned int 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  product         2    4[COMMON] unsigned int 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  2    0[COMMON] unsigned int 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         4       0       0       0       0
  1645 ;;      Locals:         2       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0
  1647 ;;      Totals:         6       0       0       0       0
  1648 ;;Total ram usage:        6 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_BCD_2_DEC
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657  00F6                     ___wmul:	
  1658                           ;psect for function ___wmul
  1659                           
  1660  00F6                     l1140:	
  1661                           ;incstack = 0
  1662                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1663                           
  1664  00F6  01F4               	clrf	___wmul@product
  1665  00F7  01F5               	clrf	___wmul@product+1
  1666  00F8                     l1142:
  1667  00F8  1C70               	btfss	___wmul@multiplier,0
  1668  00F9  28FB               	goto	u591
  1669  00FA  28FC               	goto	u590
  1670  00FB                     u591:
  1671  00FB  2902               	goto	l222
  1672  00FC                     u590:
  1673  00FC                     l1144:
  1674  00FC  0872               	movf	___wmul@multiplicand,w
  1675  00FD  07F4               	addwf	___wmul@product,f
  1676  00FE  1803               	skipnc
  1677  00FF  0AF5               	incf	___wmul@product+1,f
  1678  0100  0873               	movf	___wmul@multiplicand+1,w
  1679  0101  07F5               	addwf	___wmul@product+1,f
  1680  0102                     l222:
  1681  0102  3001               	movlw	1
  1682  0103                     u605:
  1683  0103  1003               	clrc
  1684  0104  0DF2               	rlf	___wmul@multiplicand,f
  1685  0105  0DF3               	rlf	___wmul@multiplicand+1,f
  1686  0106  3EFF               	addlw	-1
  1687  0107  1D03               	skipz
  1688  0108  2903               	goto	u605
  1689  0109                     l1146:
  1690  0109  3001               	movlw	1
  1691  010A                     u615:
  1692  010A  1003               	clrc
  1693  010B  0CF1               	rrf	___wmul@multiplier+1,f
  1694  010C  0CF0               	rrf	___wmul@multiplier,f
  1695  010D  3EFF               	addlw	-1
  1696  010E  1D03               	skipz
  1697  010F  290A               	goto	u615
  1698  0110                     l1148:
  1699  0110  0870               	movf	___wmul@multiplier,w
  1700  0111  0471               	iorwf	___wmul@multiplier+1,w
  1701  0112  1D03               	btfss	3,2
  1702  0113  2915               	goto	u621
  1703  0114  2916               	goto	u620
  1704  0115                     u621:
  1705  0115  28F8               	goto	l1142
  1706  0116                     u620:
  1707  0116                     l1150:
  1708  0116  0875               	movf	___wmul@product+1,w
  1709  0117  00F1               	movwf	?___wmul+1
  1710  0118  0874               	movf	___wmul@product,w
  1711  0119  00F0               	movwf	?___wmul
  1712  011A                     l224:
  1713  011A  0008               	return
  1714  011B                     __end_of___wmul:
  1715                           
  1716                           	psect	text5
  1717  0464                     __ptext5:	
  1718 ;; *************** function _Set_Time_Date *****************
  1719 ;; Defined at:
  1720 ;;		line 20 in file "./PIC16F877a_DS3231.h"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0, pclath, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1734 ;;      Params:         0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0
  1737 ;;      Totals:         0       0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; Hardware stack levels required when called: 2
  1741 ;; This function calls:
  1742 ;;		_DEC_2_BCD
  1743 ;;		_I2C_Begin
  1744 ;;		_I2C_End
  1745 ;;		_I2C_Write
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751  0464                     _Set_Time_Date:	
  1752                           ;psect for function _Set_Time_Date
  1753                           
  1754  0464                     l1426:	
  1755                           ;incstack = 0
  1756                           ; Regs used in _Set_Time_Date: [wreg+status,2+status,0+pclath+cstack]
  1757                           
  1758                           
  1759                           ;./PIC16F877a_DS3231.h: 22:    I2C_Begin();
  1760  0464  120A  118A  2040  120A  118A  	fcall	_I2C_Begin
  1761                           
  1762                           ;./PIC16F877a_DS3231.h: 23:    I2C_Write(0xD0);
  1763  0469  30D0               	movlw	208
  1764  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1765  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1766  046C  00A0               	movwf	I2C_Write@data
  1767  046D  3000               	movlw	0
  1768  046E  00A1               	movwf	I2C_Write@data+1
  1769  046F  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1770                           
  1771                           ;./PIC16F877a_DS3231.h: 24:    I2C_Write(0);
  1772  0474  3000               	movlw	0
  1773  0475  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0476  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0477  00A0               	movwf	I2C_Write@data
  1776  0478  00A1               	movwf	I2C_Write@data+1
  1777  0479  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1778                           
  1779                           ;./PIC16F877a_DS3231.h: 25:    I2C_Write(DEC_2_BCD(sec));
  1780  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1781  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1782  0480  084F               	movf	_sec+1,w
  1783  0481  00FA               	movwf	DEC_2_BCD@to_convert+1
  1784  0482  084E               	movf	_sec,w
  1785  0483  00F9               	movwf	DEC_2_BCD@to_convert
  1786  0484  120A  118A  216D  120A  118A  	fcall	_DEC_2_BCD
  1787  0489  087A               	movf	?_DEC_2_BCD+1,w
  1788  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1789  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1790  048C  00A1               	movwf	I2C_Write@data+1
  1791  048D  0879               	movf	?_DEC_2_BCD,w
  1792  048E  00A0               	movwf	I2C_Write@data
  1793  048F  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1794                           
  1795                           ;./PIC16F877a_DS3231.h: 26:    I2C_Write(DEC_2_BCD(min));
  1796  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1797  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1798  0496  084D               	movf	_min+1,w
  1799  0497  00FA               	movwf	DEC_2_BCD@to_convert+1
  1800  0498  084C               	movf	_min,w
  1801  0499  00F9               	movwf	DEC_2_BCD@to_convert
  1802  049A  120A  118A  216D  120A  118A  	fcall	_DEC_2_BCD
  1803  049F  087A               	movf	?_DEC_2_BCD+1,w
  1804  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1805  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1806  04A2  00A1               	movwf	I2C_Write@data+1
  1807  04A3  0879               	movf	?_DEC_2_BCD,w
  1808  04A4  00A0               	movwf	I2C_Write@data
  1809  04A5  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1810                           
  1811                           ;./PIC16F877a_DS3231.h: 27:    I2C_Write(DEC_2_BCD(hour));
  1812  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1813  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1814  04AC  084B               	movf	_hour+1,w
  1815  04AD  00FA               	movwf	DEC_2_BCD@to_convert+1
  1816  04AE  084A               	movf	_hour,w
  1817  04AF  00F9               	movwf	DEC_2_BCD@to_convert
  1818  04B0  120A  118A  216D  120A  118A  	fcall	_DEC_2_BCD
  1819  04B5  087A               	movf	?_DEC_2_BCD+1,w
  1820  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1821  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1822  04B8  00A1               	movwf	I2C_Write@data+1
  1823  04B9  0879               	movf	?_DEC_2_BCD,w
  1824  04BA  00A0               	movwf	I2C_Write@data
  1825  04BB  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1826                           
  1827                           ;./PIC16F877a_DS3231.h: 28:    I2C_Write(1);
  1828  04C0  3001               	movlw	1
  1829  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  1830  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  1831  04C3  00A0               	movwf	I2C_Write@data
  1832  04C4  3000               	movlw	0
  1833  04C5  00A1               	movwf	I2C_Write@data+1
  1834  04C6  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1835                           
  1836                           ;./PIC16F877a_DS3231.h: 29:    I2C_Write(DEC_2_BCD(date));
  1837  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  1838  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  1839  04CD  0849               	movf	_date+1,w
  1840  04CE  00FA               	movwf	DEC_2_BCD@to_convert+1
  1841  04CF  0848               	movf	_date,w
  1842  04D0  00F9               	movwf	DEC_2_BCD@to_convert
  1843  04D1  120A  118A  216D  120A  118A  	fcall	_DEC_2_BCD
  1844  04D6  087A               	movf	?_DEC_2_BCD+1,w
  1845  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1846  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  1847  04D9  00A1               	movwf	I2C_Write@data+1
  1848  04DA  0879               	movf	?_DEC_2_BCD,w
  1849  04DB  00A0               	movwf	I2C_Write@data
  1850  04DC  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1851                           
  1852                           ;./PIC16F877a_DS3231.h: 30:    I2C_Write(DEC_2_BCD(month));
  1853  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1854  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1855  04E3  0847               	movf	_month+1,w
  1856  04E4  00FA               	movwf	DEC_2_BCD@to_convert+1
  1857  04E5  0846               	movf	_month,w
  1858  04E6  00F9               	movwf	DEC_2_BCD@to_convert
  1859  04E7  120A  118A  216D  120A  118A  	fcall	_DEC_2_BCD
  1860  04EC  087A               	movf	?_DEC_2_BCD+1,w
  1861  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1862  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1863  04EF  00A1               	movwf	I2C_Write@data+1
  1864  04F0  0879               	movf	?_DEC_2_BCD,w
  1865  04F1  00A0               	movwf	I2C_Write@data
  1866  04F2  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1867                           
  1868                           ;./PIC16F877a_DS3231.h: 31:    I2C_Write(DEC_2_BCD(year));
  1869  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1870  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1871  04F9  0845               	movf	_year+1,w
  1872  04FA  00FA               	movwf	DEC_2_BCD@to_convert+1
  1873  04FB  0844               	movf	_year,w
  1874  04FC  00F9               	movwf	DEC_2_BCD@to_convert
  1875  04FD  120A  118A  216D  120A  118A  	fcall	_DEC_2_BCD
  1876  0502  087A               	movf	?_DEC_2_BCD+1,w
  1877  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0505  00A1               	movwf	I2C_Write@data+1
  1880  0506  0879               	movf	?_DEC_2_BCD,w
  1881  0507  00A0               	movwf	I2C_Write@data
  1882  0508  120A  118A  2052  120A  118A  	fcall	_I2C_Write
  1883                           
  1884                           ;./PIC16F877a_DS3231.h: 32:    I2C_End();
  1885  050D  120A  118A  2049  120A  118A  	fcall	_I2C_End
  1886  0512                     l125:
  1887  0512  0008               	return
  1888  0513                     __end_of_Set_Time_Date:
  1889                           
  1890                           	psect	text6
  1891  0052                     __ptext6:	
  1892 ;; *************** function _I2C_Write *****************
  1893 ;; Defined at:
  1894 ;;		line 34 in file "./PIC16F877a_I2C.h"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  data            2    0[BANK0 ] unsigned int 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;		None
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0, pclath, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1908 ;;      Params:         0       2       0       0       0
  1909 ;;      Locals:         0       0       0       0       0
  1910 ;;      Temps:          0       0       0       0       0
  1911 ;;      Totals:         0       2       0       0       0
  1912 ;;Total ram usage:        2 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; Hardware stack levels required when called: 1
  1915 ;; This function calls:
  1916 ;;		_I2C_Hold
  1917 ;; This function is called by:
  1918 ;;		_Set_Time_Date
  1919 ;;		_Update_Current_Date_Time
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923  0052                     _I2C_Write:	
  1924                           ;psect for function _I2C_Write
  1925                           
  1926  0052                     l1286:	
  1927                           ;incstack = 0
  1928                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  1929                           
  1930                           
  1931                           ;./PIC16F877a_I2C.h: 34: void I2C_Write(unsigned data);./PIC16F877a_I2C.h: 35: {;./PIC16
      +                          F877a_I2C.h: 36:   I2C_Hold();
  1932  0052  120A  118A  2075  120A  118A  	fcall	_I2C_Hold
  1933  0057                     l1288:
  1934                           
  1935                           ;./PIC16F877a_I2C.h: 37:   SSPBUF = data;
  1936  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0059  0820               	movf	I2C_Write@data,w
  1939  005A  0093               	movwf	19	;volatile
  1940  005B                     l113:
  1941  005B  0008               	return
  1942  005C                     __end_of_I2C_Write:
  1943                           
  1944                           	psect	text7
  1945  0049                     __ptext7:	
  1946 ;; *************** function _I2C_End *****************
  1947 ;; Defined at:
  1948 ;;		line 28 in file "./PIC16F877a_I2C.h"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0, pclath, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1962 ;;      Params:         0       0       0       0       0
  1963 ;;      Locals:         0       0       0       0       0
  1964 ;;      Temps:          0       0       0       0       0
  1965 ;;      Totals:         0       0       0       0       0
  1966 ;;Total ram usage:        0 bytes
  1967 ;; Hardware stack levels used: 1
  1968 ;; Hardware stack levels required when called: 1
  1969 ;; This function calls:
  1970 ;;		_I2C_Hold
  1971 ;; This function is called by:
  1972 ;;		_Set_Time_Date
  1973 ;;		_Update_Current_Date_Time
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977  0049                     _I2C_End:	
  1978                           ;psect for function _I2C_End
  1979                           
  1980  0049                     l1282:	
  1981                           ;incstack = 0
  1982                           ; Regs used in _I2C_End: [wreg+status,2+status,0+pclath+cstack]
  1983                           
  1984                           
  1985                           ;./PIC16F877a_I2C.h: 30:   I2C_Hold();
  1986  0049  120A  118A  2075  120A  118A  	fcall	_I2C_Hold
  1987  004E                     l1284:
  1988                           
  1989                           ;./PIC16F877a_I2C.h: 31:   PEN = 1;
  1990  004E  1683               	bsf	3,5	;RP0=1, select bank1
  1991  004F  1303               	bcf	3,6	;RP1=0, select bank1
  1992  0050  1511               	bsf	17,2	;volatile
  1993  0051                     l110:
  1994  0051  0008               	return
  1995  0052                     __end_of_I2C_End:
  1996                           
  1997                           	psect	text8
  1998  0040                     __ptext8:	
  1999 ;; *************** function _I2C_Begin *****************
  2000 ;; Defined at:
  2001 ;;		line 20 in file "./PIC16F877a_I2C.h"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0, pclath, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015 ;;      Params:         0       0       0       0       0
  2016 ;;      Locals:         0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0
  2018 ;;      Totals:         0       0       0       0       0
  2019 ;;Total ram usage:        0 bytes
  2020 ;; Hardware stack levels used: 1
  2021 ;; Hardware stack levels required when called: 1
  2022 ;; This function calls:
  2023 ;;		_I2C_Hold
  2024 ;; This function is called by:
  2025 ;;		_Set_Time_Date
  2026 ;;		_Update_Current_Date_Time
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030  0040                     _I2C_Begin:	
  2031                           ;psect for function _I2C_Begin
  2032                           
  2033  0040                     l1278:	
  2034                           ;incstack = 0
  2035                           ; Regs used in _I2C_Begin: [wreg+status,2+status,0+pclath+cstack]
  2036                           
  2037                           
  2038                           ;./PIC16F877a_I2C.h: 22:   I2C_Hold();
  2039  0040  120A  118A  2075  120A  118A  	fcall	_I2C_Hold
  2040  0045                     l1280:
  2041                           
  2042                           ;./PIC16F877a_I2C.h: 23:   SEN = 1;
  2043  0045  1683               	bsf	3,5	;RP0=1, select bank1
  2044  0046  1303               	bcf	3,6	;RP1=0, select bank1
  2045  0047  1411               	bsf	17,0	;volatile
  2046  0048                     l107:
  2047  0048  0008               	return
  2048  0049                     __end_of_I2C_Begin:
  2049                           
  2050                           	psect	text9
  2051  0075                     __ptext9:	
  2052 ;; *************** function _I2C_Hold *****************
  2053 ;; Defined at:
  2054 ;;		line 15 in file "./PIC16F877a_I2C.h"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2068 ;;      Params:         0       0       0       0       0
  2069 ;;      Locals:         0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0
  2071 ;;      Totals:         0       0       0       0       0
  2072 ;;Total ram usage:        0 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_I2C_Begin
  2078 ;;		_I2C_End
  2079 ;;		_I2C_Write
  2080 ;;		_I2C_Read
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084  0075                     _I2C_Hold:	
  2085                           ;psect for function _I2C_Hold
  2086                           
  2087  0075                     l1134:	
  2088                           ;incstack = 0
  2089                           ; Regs used in _I2C_Hold: [wreg+status,2]
  2090                           
  2091  0075                     l1136:	
  2092                           ;./PIC16F877a_I2C.h: 17:     while ( (SSPCON2 & 0b00011111) || (SSPSTAT & 0b00000100) ) 
      +                          ;
  2093                           
  2094  0075  1683               	bsf	3,5	;RP0=1, select bank1
  2095  0076  1303               	bcf	3,6	;RP1=0, select bank1
  2096  0077  0811               	movf	17,w	;volatile
  2097  0078  391F               	andlw	31
  2098  0079  1D03               	btfss	3,2
  2099  007A  287C               	goto	u571
  2100  007B  287D               	goto	u570
  2101  007C                     u571:
  2102  007C  2875               	goto	l1136
  2103  007D                     u570:
  2104  007D                     l1138:
  2105  007D  1914               	btfsc	20,2	;volatile
  2106  007E  2880               	goto	u581
  2107  007F  2881               	goto	u580
  2108  0080                     u581:
  2109  0080  2875               	goto	l1136
  2110  0081                     u580:
  2111  0081                     l104:
  2112  0081  0008               	return
  2113  0082                     __end_of_I2C_Hold:
  2114                           
  2115                           	psect	text10
  2116  016D                     __ptext10:	
  2117 ;; *************** function _DEC_2_BCD *****************
  2118 ;; Defined at:
  2119 ;;		line 15 in file "./PIC16F877a_DS3231.h"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  to_convert      2    9[COMMON] int 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  2    9[COMMON] int 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0, pclath, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         2       0       0       0       0
  2134 ;;      Locals:         0       0       0       0       0
  2135 ;;      Temps:          2       0       0       0       0
  2136 ;;      Totals:         4       0       0       0       0
  2137 ;;Total ram usage:        4 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 1
  2140 ;; This function calls:
  2141 ;;		___awdiv
  2142 ;;		___awmod
  2143 ;; This function is called by:
  2144 ;;		_Set_Time_Date
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148  016D                     _DEC_2_BCD:	
  2149                           ;psect for function _DEC_2_BCD
  2150                           
  2151  016D                     l1310:	
  2152                           ;incstack = 0
  2153                           ; Regs used in _DEC_2_BCD: [wreg+status,2+status,0+pclath+cstack]
  2154                           
  2155                           
  2156                           ;./PIC16F877a_DS3231.h: 15: int DEC_2_BCD (int to_convert);./PIC16F877a_DS3231.h: 16: {;
      +                          ./PIC16F877a_DS3231.h: 17:    return ((to_convert/10)<<4)+(to_convert%10);
  2157  016D  300A               	movlw	10
  2158  016E  00F0               	movwf	___awdiv@divisor
  2159  016F  3000               	movlw	0
  2160  0170  00F1               	movwf	___awdiv@divisor+1
  2161  0171  087A               	movf	DEC_2_BCD@to_convert+1,w
  2162  0172  00F3               	movwf	___awdiv@dividend+1
  2163  0173  0879               	movf	DEC_2_BCD@to_convert,w
  2164  0174  00F2               	movwf	___awdiv@dividend
  2165  0175  120A  118A  2395  120A  118A  	fcall	___awdiv
  2166  017A  0870               	movf	?___awdiv,w
  2167  017B  00FB               	movwf	??_DEC_2_BCD
  2168  017C  0871               	movf	?___awdiv+1,w
  2169  017D  00FC               	movwf	??_DEC_2_BCD+1
  2170  017E  0EFB               	swapf	??_DEC_2_BCD,f
  2171  017F  0EFC               	swapf	??_DEC_2_BCD+1,f
  2172  0180  30F0               	movlw	240
  2173  0181  05FC               	andwf	??_DEC_2_BCD+1,f
  2174  0182  087B               	movf	??_DEC_2_BCD,w
  2175  0183  390F               	andlw	15
  2176  0184  04FC               	iorwf	??_DEC_2_BCD+1,f
  2177  0185  30F0               	movlw	240
  2178  0186  05FB               	andwf	??_DEC_2_BCD,f
  2179  0187  300A               	movlw	10
  2180  0188  00F0               	movwf	___awmod@divisor
  2181  0189  3000               	movlw	0
  2182  018A  00F1               	movwf	___awmod@divisor+1
  2183  018B  087A               	movf	DEC_2_BCD@to_convert+1,w
  2184  018C  00F3               	movwf	___awmod@dividend+1
  2185  018D  0879               	movf	DEC_2_BCD@to_convert,w
  2186  018E  00F2               	movwf	___awmod@dividend
  2187  018F  120A  118A  22DD  120A  118A  	fcall	___awmod
  2188  0194  0870               	movf	?___awmod,w
  2189  0195  077B               	addwf	??_DEC_2_BCD,w
  2190  0196  00F9               	movwf	?_DEC_2_BCD
  2191  0197  0871               	movf	?___awmod+1,w
  2192  0198  1803               	skipnc
  2193  0199  0A71               	incf	?___awmod+1,w
  2194  019A  077C               	addwf	??_DEC_2_BCD+1,w
  2195  019B  00FA               	movwf	?_DEC_2_BCD+1
  2196  019C                     l122:
  2197  019C  0008               	return
  2198  019D                     __end_of_DEC_2_BCD:
  2199                           
  2200                           	psect	text11
  2201  02DD                     __ptext11:	
  2202 ;; *************** function ___awmod *****************
  2203 ;; Defined at:
  2204 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  divisor         2    0[COMMON] int 
  2207 ;;  dividend        2    2[COMMON] int 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  sign            1    6[COMMON] unsigned char 
  2210 ;;  counter         1    5[COMMON] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  2    0[COMMON] int 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2220 ;;      Params:         4       0       0       0       0
  2221 ;;      Locals:         2       0       0       0       0
  2222 ;;      Temps:          1       0       0       0       0
  2223 ;;      Totals:         7       0       0       0       0
  2224 ;;Total ram usage:        7 bytes
  2225 ;; Hardware stack levels used: 1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_DEC_2_BCD
  2230 ;;		_main
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234  02DD                     ___awmod:	
  2235                           ;psect for function ___awmod
  2236                           
  2237  02DD                     l1198:	
  2238                           ;incstack = 0
  2239                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2240                           
  2241  02DD  01F6               	clrf	___awmod@sign
  2242  02DE                     l1200:
  2243  02DE  1FF3               	btfss	___awmod@dividend+1,7
  2244  02DF  2AE1               	goto	u731
  2245  02E0  2AE2               	goto	u730
  2246  02E1                     u731:
  2247  02E1  2AE9               	goto	l1206
  2248  02E2                     u730:
  2249  02E2                     l1202:
  2250  02E2  09F2               	comf	___awmod@dividend,f
  2251  02E3  09F3               	comf	___awmod@dividend+1,f
  2252  02E4  0AF2               	incf	___awmod@dividend,f
  2253  02E5  1903               	skipnz
  2254  02E6  0AF3               	incf	___awmod@dividend+1,f
  2255  02E7                     l1204:
  2256  02E7  01F6               	clrf	___awmod@sign
  2257  02E8  0AF6               	incf	___awmod@sign,f
  2258  02E9                     l1206:
  2259  02E9  1FF1               	btfss	___awmod@divisor+1,7
  2260  02EA  2AEC               	goto	u741
  2261  02EB  2AED               	goto	u740
  2262  02EC                     u741:
  2263  02EC  2AF2               	goto	l1210
  2264  02ED                     u740:
  2265  02ED                     l1208:
  2266  02ED  09F0               	comf	___awmod@divisor,f
  2267  02EE  09F1               	comf	___awmod@divisor+1,f
  2268  02EF  0AF0               	incf	___awmod@divisor,f
  2269  02F0  1903               	skipnz
  2270  02F1  0AF1               	incf	___awmod@divisor+1,f
  2271  02F2                     l1210:
  2272  02F2  0870               	movf	___awmod@divisor,w
  2273  02F3  0471               	iorwf	___awmod@divisor+1,w
  2274  02F4  1903               	btfsc	3,2
  2275  02F5  2AF7               	goto	u751
  2276  02F6  2AF8               	goto	u750
  2277  02F7                     u751:
  2278  02F7  2B27               	goto	l1228
  2279  02F8                     u750:
  2280  02F8                     l1212:
  2281  02F8  01F5               	clrf	___awmod@counter
  2282  02F9  0AF5               	incf	___awmod@counter,f
  2283  02FA  2B06               	goto	l1218
  2284  02FB                     l1214:
  2285  02FB  3001               	movlw	1
  2286  02FC                     u765:
  2287  02FC  1003               	clrc
  2288  02FD  0DF0               	rlf	___awmod@divisor,f
  2289  02FE  0DF1               	rlf	___awmod@divisor+1,f
  2290  02FF  3EFF               	addlw	-1
  2291  0300  1D03               	skipz
  2292  0301  2AFC               	goto	u765
  2293  0302                     l1216:
  2294  0302  3001               	movlw	1
  2295  0303  00F4               	movwf	??___awmod
  2296  0304  0874               	movf	??___awmod,w
  2297  0305  07F5               	addwf	___awmod@counter,f
  2298  0306                     l1218:
  2299  0306  1FF1               	btfss	___awmod@divisor+1,7
  2300  0307  2B09               	goto	u771
  2301  0308  2B0A               	goto	u770
  2302  0309                     u771:
  2303  0309  2AFB               	goto	l1214
  2304  030A                     u770:
  2305  030A                     l1220:
  2306  030A  0871               	movf	___awmod@divisor+1,w
  2307  030B  0273               	subwf	___awmod@dividend+1,w
  2308  030C  1D03               	skipz
  2309  030D  2B10               	goto	u785
  2310  030E  0870               	movf	___awmod@divisor,w
  2311  030F  0272               	subwf	___awmod@dividend,w
  2312  0310                     u785:
  2313  0310  1C03               	skipc
  2314  0311  2B13               	goto	u781
  2315  0312  2B14               	goto	u780
  2316  0313                     u781:
  2317  0313  2B1A               	goto	l1224
  2318  0314                     u780:
  2319  0314                     l1222:
  2320  0314  0870               	movf	___awmod@divisor,w
  2321  0315  02F2               	subwf	___awmod@dividend,f
  2322  0316  0871               	movf	___awmod@divisor+1,w
  2323  0317  1C03               	skipc
  2324  0318  03F3               	decf	___awmod@dividend+1,f
  2325  0319  02F3               	subwf	___awmod@dividend+1,f
  2326  031A                     l1224:
  2327  031A  3001               	movlw	1
  2328  031B                     u795:
  2329  031B  1003               	clrc
  2330  031C  0CF1               	rrf	___awmod@divisor+1,f
  2331  031D  0CF0               	rrf	___awmod@divisor,f
  2332  031E  3EFF               	addlw	-1
  2333  031F  1D03               	skipz
  2334  0320  2B1B               	goto	u795
  2335  0321                     l1226:
  2336  0321  3001               	movlw	1
  2337  0322  02F5               	subwf	___awmod@counter,f
  2338  0323  1D03               	btfss	3,2
  2339  0324  2B26               	goto	u801
  2340  0325  2B27               	goto	u800
  2341  0326                     u801:
  2342  0326  2B0A               	goto	l1220
  2343  0327                     u800:
  2344  0327                     l1228:
  2345  0327  0876               	movf	___awmod@sign,w
  2346  0328  1903               	btfsc	3,2
  2347  0329  2B2B               	goto	u811
  2348  032A  2B2C               	goto	u810
  2349  032B                     u811:
  2350  032B  2B31               	goto	l1232
  2351  032C                     u810:
  2352  032C                     l1230:
  2353  032C  09F2               	comf	___awmod@dividend,f
  2354  032D  09F3               	comf	___awmod@dividend+1,f
  2355  032E  0AF2               	incf	___awmod@dividend,f
  2356  032F  1903               	skipnz
  2357  0330  0AF3               	incf	___awmod@dividend+1,f
  2358  0331                     l1232:
  2359  0331  0873               	movf	___awmod@dividend+1,w
  2360  0332  00F1               	movwf	?___awmod+1
  2361  0333  0872               	movf	___awmod@dividend,w
  2362  0334  00F0               	movwf	?___awmod
  2363  0335                     l388:
  2364  0335  0008               	return
  2365  0336                     __end_of___awmod:
  2366                           
  2367                           	psect	text12
  2368  0395                     __ptext12:	
  2369 ;; *************** function ___awdiv *****************
  2370 ;; Defined at:
  2371 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  divisor         2    0[COMMON] int 
  2374 ;;  dividend        2    2[COMMON] int 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  quotient        2    7[COMMON] int 
  2377 ;;  sign            1    6[COMMON] unsigned char 
  2378 ;;  counter         1    5[COMMON] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  2    0[COMMON] int 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2388 ;;      Params:         4       0       0       0       0
  2389 ;;      Locals:         4       0       0       0       0
  2390 ;;      Temps:          1       0       0       0       0
  2391 ;;      Totals:         9       0       0       0       0
  2392 ;;Total ram usage:        9 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_DEC_2_BCD
  2398 ;;		_main
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402  0395                     ___awdiv:	
  2403                           ;psect for function ___awdiv
  2404                           
  2405  0395                     l1154:	
  2406                           ;incstack = 0
  2407                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2408                           
  2409  0395  01F6               	clrf	___awdiv@sign
  2410  0396                     l1156:
  2411  0396  1FF1               	btfss	___awdiv@divisor+1,7
  2412  0397  2B99               	goto	u631
  2413  0398  2B9A               	goto	u630
  2414  0399                     u631:
  2415  0399  2BA1               	goto	l1162
  2416  039A                     u630:
  2417  039A                     l1158:
  2418  039A  09F0               	comf	___awdiv@divisor,f
  2419  039B  09F1               	comf	___awdiv@divisor+1,f
  2420  039C  0AF0               	incf	___awdiv@divisor,f
  2421  039D  1903               	skipnz
  2422  039E  0AF1               	incf	___awdiv@divisor+1,f
  2423  039F                     l1160:
  2424  039F  01F6               	clrf	___awdiv@sign
  2425  03A0  0AF6               	incf	___awdiv@sign,f
  2426  03A1                     l1162:
  2427  03A1  1FF3               	btfss	___awdiv@dividend+1,7
  2428  03A2  2BA4               	goto	u641
  2429  03A3  2BA5               	goto	u640
  2430  03A4                     u641:
  2431  03A4  2BAE               	goto	l1168
  2432  03A5                     u640:
  2433  03A5                     l1164:
  2434  03A5  09F2               	comf	___awdiv@dividend,f
  2435  03A6  09F3               	comf	___awdiv@dividend+1,f
  2436  03A7  0AF2               	incf	___awdiv@dividend,f
  2437  03A8  1903               	skipnz
  2438  03A9  0AF3               	incf	___awdiv@dividend+1,f
  2439  03AA                     l1166:
  2440  03AA  3001               	movlw	1
  2441  03AB  00F4               	movwf	??___awdiv
  2442  03AC  0874               	movf	??___awdiv,w
  2443  03AD  06F6               	xorwf	___awdiv@sign,f
  2444  03AE                     l1168:
  2445  03AE  01F7               	clrf	___awdiv@quotient
  2446  03AF  01F8               	clrf	___awdiv@quotient+1
  2447  03B0                     l1170:
  2448  03B0  0870               	movf	___awdiv@divisor,w
  2449  03B1  0471               	iorwf	___awdiv@divisor+1,w
  2450  03B2  1903               	btfsc	3,2
  2451  03B3  2BB5               	goto	u651
  2452  03B4  2BB6               	goto	u650
  2453  03B5                     u651:
  2454  03B5  2BED               	goto	l1190
  2455  03B6                     u650:
  2456  03B6                     l1172:
  2457  03B6  01F5               	clrf	___awdiv@counter
  2458  03B7  0AF5               	incf	___awdiv@counter,f
  2459  03B8  2BC4               	goto	l1178
  2460  03B9                     l1174:
  2461  03B9  3001               	movlw	1
  2462  03BA                     u665:
  2463  03BA  1003               	clrc
  2464  03BB  0DF0               	rlf	___awdiv@divisor,f
  2465  03BC  0DF1               	rlf	___awdiv@divisor+1,f
  2466  03BD  3EFF               	addlw	-1
  2467  03BE  1D03               	skipz
  2468  03BF  2BBA               	goto	u665
  2469  03C0                     l1176:
  2470  03C0  3001               	movlw	1
  2471  03C1  00F4               	movwf	??___awdiv
  2472  03C2  0874               	movf	??___awdiv,w
  2473  03C3  07F5               	addwf	___awdiv@counter,f
  2474  03C4                     l1178:
  2475  03C4  1FF1               	btfss	___awdiv@divisor+1,7
  2476  03C5  2BC7               	goto	u671
  2477  03C6  2BC8               	goto	u670
  2478  03C7                     u671:
  2479  03C7  2BB9               	goto	l1174
  2480  03C8                     u670:
  2481  03C8                     l1180:
  2482  03C8  3001               	movlw	1
  2483  03C9                     u685:
  2484  03C9  1003               	clrc
  2485  03CA  0DF7               	rlf	___awdiv@quotient,f
  2486  03CB  0DF8               	rlf	___awdiv@quotient+1,f
  2487  03CC  3EFF               	addlw	-1
  2488  03CD  1D03               	skipz
  2489  03CE  2BC9               	goto	u685
  2490  03CF  0871               	movf	___awdiv@divisor+1,w
  2491  03D0  0273               	subwf	___awdiv@dividend+1,w
  2492  03D1  1D03               	skipz
  2493  03D2  2BD5               	goto	u695
  2494  03D3  0870               	movf	___awdiv@divisor,w
  2495  03D4  0272               	subwf	___awdiv@dividend,w
  2496  03D5                     u695:
  2497  03D5  1C03               	skipc
  2498  03D6  2BD8               	goto	u691
  2499  03D7  2BD9               	goto	u690
  2500  03D8                     u691:
  2501  03D8  2BE0               	goto	l1186
  2502  03D9                     u690:
  2503  03D9                     l1182:
  2504  03D9  0870               	movf	___awdiv@divisor,w
  2505  03DA  02F2               	subwf	___awdiv@dividend,f
  2506  03DB  0871               	movf	___awdiv@divisor+1,w
  2507  03DC  1C03               	skipc
  2508  03DD  03F3               	decf	___awdiv@dividend+1,f
  2509  03DE  02F3               	subwf	___awdiv@dividend+1,f
  2510  03DF                     l1184:
  2511  03DF  1477               	bsf	___awdiv@quotient,0
  2512  03E0                     l1186:
  2513  03E0  3001               	movlw	1
  2514  03E1                     u705:
  2515  03E1  1003               	clrc
  2516  03E2  0CF1               	rrf	___awdiv@divisor+1,f
  2517  03E3  0CF0               	rrf	___awdiv@divisor,f
  2518  03E4  3EFF               	addlw	-1
  2519  03E5  1D03               	skipz
  2520  03E6  2BE1               	goto	u705
  2521  03E7                     l1188:
  2522  03E7  3001               	movlw	1
  2523  03E8  02F5               	subwf	___awdiv@counter,f
  2524  03E9  1D03               	btfss	3,2
  2525  03EA  2BEC               	goto	u711
  2526  03EB  2BED               	goto	u710
  2527  03EC                     u711:
  2528  03EC  2BC8               	goto	l1180
  2529  03ED                     u710:
  2530  03ED                     l1190:
  2531  03ED  0876               	movf	___awdiv@sign,w
  2532  03EE  1903               	btfsc	3,2
  2533  03EF  2BF1               	goto	u721
  2534  03F0  2BF2               	goto	u720
  2535  03F1                     u721:
  2536  03F1  2BF7               	goto	l1194
  2537  03F2                     u720:
  2538  03F2                     l1192:
  2539  03F2  09F7               	comf	___awdiv@quotient,f
  2540  03F3  09F8               	comf	___awdiv@quotient+1,f
  2541  03F4  0AF7               	incf	___awdiv@quotient,f
  2542  03F5  1903               	skipnz
  2543  03F6  0AF8               	incf	___awdiv@quotient+1,f
  2544  03F7                     l1194:
  2545  03F7  0878               	movf	___awdiv@quotient+1,w
  2546  03F8  00F1               	movwf	?___awdiv+1
  2547  03F9  0877               	movf	___awdiv@quotient,w
  2548  03FA  00F0               	movwf	?___awdiv
  2549  03FB                     l375:
  2550  03FB  0008               	return
  2551  03FC                     __end_of___awdiv:
  2552                           
  2553                           	psect	text13
  2554  0288                     __ptext13:	
  2555 ;; *************** function _Lcd_Start *****************
  2556 ;; Defined at:
  2557 ;;		line 62 in file "./lcd.h"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  i               2    0        int 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0, pclath, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2571 ;;      Params:         0       0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0
  2573 ;;      Temps:          2       0       0       0       0
  2574 ;;      Totals:         2       0       0       0       0
  2575 ;;Total ram usage:        2 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 2
  2578 ;; This function calls:
  2579 ;;		_Lcd_Cmd
  2580 ;;		_Lcd_SetBit
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586  0288                     _Lcd_Start:	
  2587                           ;psect for function _Lcd_Start
  2588                           
  2589  0288                     l1374:	
  2590                           ;incstack = 0
  2591                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  2592                           
  2593                           
  2594                           ;./lcd.h: 64:   Lcd_SetBit(0x00);
  2595  0288  3000               	movlw	0
  2596  0289  120A  118A  20AF  120A  118A  	fcall	_Lcd_SetBit
  2597  028E                     l1376:
  2598  028E                     l1378:
  2599  028E                     l1386:
  2600                           
  2601                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  2602  028E  3003               	movlw	3
  2603  028F  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2604  0294                     l1388:
  2605                           
  2606                           ;./lcd.h: 67:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2607  0294  3021               	movlw	33
  2608  0295  00F5               	movwf	??_Lcd_Start+1
  2609  0296  3076               	movlw	118
  2610  0297  00F4               	movwf	??_Lcd_Start
  2611  0298                     u1077:
  2612  0298  0BF4               	decfsz	??_Lcd_Start,f
  2613  0299  2A98               	goto	u1077
  2614  029A  0BF5               	decfsz	??_Lcd_Start+1,f
  2615  029B  2A98               	goto	u1077
  2616  029C  0000               	nop
  2617  029D                     l1390:
  2618                           
  2619                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  2620  029D  3003               	movlw	3
  2621  029E  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2622                           
  2623                           ;./lcd.h: 69:     _delay((unsigned long)((11)*(20000000/4000.0)));
  2624  02A3  3048               	movlw	72
  2625  02A4  00F5               	movwf	??_Lcd_Start+1
  2626  02A5  306C               	movlw	108
  2627  02A6  00F4               	movwf	??_Lcd_Start
  2628  02A7                     u1087:
  2629  02A7  0BF4               	decfsz	??_Lcd_Start,f
  2630  02A8  2AA7               	goto	u1087
  2631  02A9  0BF5               	decfsz	??_Lcd_Start+1,f
  2632  02AA  2AA7               	goto	u1087
  2633  02AB  0000               	nop
  2634  02AC                     l1392:
  2635                           
  2636                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  2637  02AC  3003               	movlw	3
  2638  02AD  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2639  02B2                     l1394:
  2640                           
  2641                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  2642  02B2  3002               	movlw	2
  2643  02B3  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2644  02B8                     l1396:
  2645                           
  2646                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  2647  02B8  3002               	movlw	2
  2648  02B9  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2649  02BE                     l1398:
  2650                           
  2651                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
  2652  02BE  3008               	movlw	8
  2653  02BF  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2654  02C4                     l1400:
  2655                           
  2656                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  2657  02C4  3000               	movlw	0
  2658  02C5  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2659  02CA                     l1402:
  2660                           
  2661                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
  2662  02CA  300C               	movlw	12
  2663  02CB  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2664  02D0                     l1404:
  2665                           
  2666                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  2667  02D0  3000               	movlw	0
  2668  02D1  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2669  02D6                     l1406:
  2670                           
  2671                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
  2672  02D6  3006               	movlw	6
  2673  02D7  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2674  02DC                     l82:
  2675  02DC  0008               	return
  2676  02DD                     __end_of_Lcd_Start:
  2677                           
  2678                           	psect	text14
  2679  01E3                     __ptext14:	
  2680 ;; *************** function _Lcd_Set_Cursor *****************
  2681 ;; Defined at:
  2682 ;;		line 41 in file "./lcd.h"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  a               1    wreg     unsigned char 
  2685 ;;  b               1    4[COMMON] unsigned char 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  a               1    7[COMMON] unsigned char 
  2688 ;;  temp            1   10[COMMON] unsigned char 
  2689 ;;  y               1    9[COMMON] unsigned char 
  2690 ;;  z               1    8[COMMON] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0, pclath, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2700 ;;      Params:         1       0       0       0       0
  2701 ;;      Locals:         4       0       0       0       0
  2702 ;;      Temps:          2       0       0       0       0
  2703 ;;      Totals:         7       0       0       0       0
  2704 ;;Total ram usage:        7 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; Hardware stack levels required when called: 2
  2707 ;; This function calls:
  2708 ;;		_Lcd_Cmd
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714  01E3                     _Lcd_Set_Cursor:	
  2715                           ;psect for function _Lcd_Set_Cursor
  2716                           
  2717                           
  2718                           ;incstack = 0
  2719                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2720                           ;Lcd_Set_Cursor@a stored from wreg
  2721  01E3  00F7               	movwf	Lcd_Set_Cursor@a
  2722  01E4                     l1354:
  2723                           
  2724                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:     char t
      +                          emp,z,y;;./lcd.h: 44:     if(a== 1)
  2725  01E4  0377               	decf	Lcd_Set_Cursor@a,w
  2726  01E5  1D03               	btfss	3,2
  2727  01E6  29E8               	goto	u991
  2728  01E7  29E9               	goto	u990
  2729  01E8                     u991:
  2730  01E8  2A0C               	goto	l1364
  2731  01E9                     u990:
  2732  01E9                     l1356:
  2733                           
  2734                           ;./lcd.h: 45:     {;./lcd.h: 46:       temp = 0x80 + b - 1;
  2735  01E9  0874               	movf	Lcd_Set_Cursor@b,w
  2736  01EA  3E7F               	addlw	127
  2737  01EB  00F5               	movwf	??_Lcd_Set_Cursor
  2738  01EC  0875               	movf	??_Lcd_Set_Cursor,w
  2739  01ED  00FA               	movwf	Lcd_Set_Cursor@temp
  2740                           
  2741                           ;./lcd.h: 47:         z = temp>>4;
  2742  01EE  087A               	movf	Lcd_Set_Cursor@temp,w
  2743  01EF  00F5               	movwf	??_Lcd_Set_Cursor
  2744  01F0  3004               	movlw	4
  2745  01F1                     u1005:
  2746  01F1  1003               	clrc
  2747  01F2  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2748  01F3  3EFF               	addlw	-1
  2749  01F4  1D03               	skipz
  2750  01F5  29F1               	goto	u1005
  2751  01F6  0875               	movf	??_Lcd_Set_Cursor,w
  2752  01F7  00F6               	movwf	??_Lcd_Set_Cursor+1
  2753  01F8  0876               	movf	??_Lcd_Set_Cursor+1,w
  2754  01F9  00F8               	movwf	Lcd_Set_Cursor@z
  2755  01FA                     l1358:
  2756                           
  2757                           ;./lcd.h: 48:         y = temp & 0x0F;
  2758  01FA  087A               	movf	Lcd_Set_Cursor@temp,w
  2759  01FB  390F               	andlw	15
  2760  01FC  00F5               	movwf	??_Lcd_Set_Cursor
  2761  01FD  0875               	movf	??_Lcd_Set_Cursor,w
  2762  01FE  00F9               	movwf	Lcd_Set_Cursor@y
  2763  01FF                     l1360:
  2764                           
  2765                           ;./lcd.h: 49:         Lcd_Cmd(z);
  2766  01FF  0878               	movf	Lcd_Set_Cursor@z,w
  2767  0200  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2768  0205                     l1362:
  2769                           
  2770                           ;./lcd.h: 50:         Lcd_Cmd(y);
  2771  0205  0879               	movf	Lcd_Set_Cursor@y,w
  2772  0206  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2773                           
  2774                           ;./lcd.h: 51:     }
  2775  020B  2A34               	goto	l77
  2776  020C                     l1364:
  2777  020C  3002               	movlw	2
  2778  020D  0677               	xorwf	Lcd_Set_Cursor@a,w
  2779  020E  1D03               	btfss	3,2
  2780  020F  2A11               	goto	u1011
  2781  0210  2A12               	goto	u1010
  2782  0211                     u1011:
  2783  0211  2A34               	goto	l77
  2784  0212                     u1010:
  2785  0212                     l1366:
  2786                           
  2787                           ;./lcd.h: 53:     {;./lcd.h: 54:         temp = 0xC0 + b - 1;
  2788  0212  0874               	movf	Lcd_Set_Cursor@b,w
  2789  0213  3EBF               	addlw	191
  2790  0214  00F5               	movwf	??_Lcd_Set_Cursor
  2791  0215  0875               	movf	??_Lcd_Set_Cursor,w
  2792  0216  00FA               	movwf	Lcd_Set_Cursor@temp
  2793                           
  2794                           ;./lcd.h: 55:         z = temp>>4;
  2795  0217  087A               	movf	Lcd_Set_Cursor@temp,w
  2796  0218  00F5               	movwf	??_Lcd_Set_Cursor
  2797  0219  3004               	movlw	4
  2798  021A                     u1025:
  2799  021A  1003               	clrc
  2800  021B  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2801  021C  3EFF               	addlw	-1
  2802  021D  1D03               	skipz
  2803  021E  2A1A               	goto	u1025
  2804  021F  0875               	movf	??_Lcd_Set_Cursor,w
  2805  0220  00F6               	movwf	??_Lcd_Set_Cursor+1
  2806  0221  0876               	movf	??_Lcd_Set_Cursor+1,w
  2807  0222  00F8               	movwf	Lcd_Set_Cursor@z
  2808  0223                     l1368:
  2809                           
  2810                           ;./lcd.h: 56:         y = temp & 0x0F;
  2811  0223  087A               	movf	Lcd_Set_Cursor@temp,w
  2812  0224  390F               	andlw	15
  2813  0225  00F5               	movwf	??_Lcd_Set_Cursor
  2814  0226  0875               	movf	??_Lcd_Set_Cursor,w
  2815  0227  00F9               	movwf	Lcd_Set_Cursor@y
  2816  0228                     l1370:
  2817                           
  2818                           ;./lcd.h: 57:         Lcd_Cmd(z);
  2819  0228  0878               	movf	Lcd_Set_Cursor@z,w
  2820  0229  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2821  022E                     l1372:
  2822                           
  2823                           ;./lcd.h: 58:         Lcd_Cmd(y);
  2824  022E  0879               	movf	Lcd_Set_Cursor@y,w
  2825  022F  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  2826  0234                     l77:
  2827  0234  0008               	return
  2828  0235                     __end_of_Lcd_Set_Cursor:
  2829                           
  2830                           	psect	text15
  2831  00D1                     __ptext15:	
  2832 ;; *************** function _Lcd_Print_String *****************
  2833 ;; Defined at:
  2834 ;;		line 96 in file "./lcd.h"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  a               1    wreg     PTR unsigned char 
  2837 ;;		 -> STR_4(7), STR_3(7), STR_2(17), STR_1(15), 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  a               1   11[COMMON] PTR unsigned char 
  2840 ;;		 -> STR_4(7), STR_3(7), STR_2(17), STR_1(15), 
  2841 ;;  i               2    9[COMMON] int 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2851 ;;      Params:         0       0       0       0       0
  2852 ;;      Locals:         3       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0
  2854 ;;      Totals:         3       0       0       0       0
  2855 ;;Total ram usage:        3 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 2
  2858 ;; This function calls:
  2859 ;;		_Lcd_Print_Char
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865  00D1                     _Lcd_Print_String:	
  2866                           ;psect for function _Lcd_Print_String
  2867                           
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2871                           ;Lcd_Print_String@a stored from wreg
  2872  00D1  00FB               	movwf	Lcd_Print_String@a
  2873  00D2                     l1408:
  2874                           
  2875                           ;./lcd.h: 96: void Lcd_Print_String(char *a);./lcd.h: 97: {;./lcd.h: 98:     int i;;./lc
      +                          d.h: 99:     for(i=0;a[i]!='\0';i++)
  2876  00D2  01F9               	clrf	Lcd_Print_String@i
  2877  00D3  01FA               	clrf	Lcd_Print_String@i+1
  2878  00D4  28E8               	goto	l1414
  2879  00D5                     l1410:
  2880                           
  2881                           ;./lcd.h: 100:        Lcd_Print_Char(a[i]);
  2882  00D5  0879               	movf	Lcd_Print_String@i,w
  2883  00D6  077B               	addwf	Lcd_Print_String@a,w
  2884  00D7  0084               	movwf	4
  2885  00D8  120A  118A  2003  120A  118A  	fcall	stringdir
  2886  00DD  120A  118A  2336  120A  118A  	fcall	_Lcd_Print_Char
  2887  00E2                     l1412:
  2888  00E2  3001               	movlw	1
  2889  00E3  07F9               	addwf	Lcd_Print_String@i,f
  2890  00E4  1803               	skipnc
  2891  00E5  0AFA               	incf	Lcd_Print_String@i+1,f
  2892  00E6  3000               	movlw	0
  2893  00E7  07FA               	addwf	Lcd_Print_String@i+1,f
  2894  00E8                     l1414:
  2895  00E8  0879               	movf	Lcd_Print_String@i,w
  2896  00E9  077B               	addwf	Lcd_Print_String@a,w
  2897  00EA  0084               	movwf	4
  2898  00EB  120A  118A  2003  120A  118A  	fcall	stringdir
  2899  00F0  3A00               	xorlw	0
  2900  00F1  1D03               	skipz
  2901  00F2  28F4               	goto	u1031
  2902  00F3  28F5               	goto	u1030
  2903  00F4                     u1031:
  2904  00F4  28D5               	goto	l1410
  2905  00F5                     u1030:
  2906  00F5                     l95:
  2907  00F5  0008               	return
  2908  00F6                     __end_of_Lcd_Print_String:
  2909                           
  2910                           	psect	text16
  2911  0336                     __ptext16:	
  2912 ;; *************** function _Lcd_Print_Char *****************
  2913 ;; Defined at:
  2914 ;;		line 80 in file "./lcd.h"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  data            1    wreg     unsigned char 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  data            1    4[COMMON] unsigned char 
  2919 ;;  i               2    7[COMMON] int 
  2920 ;;  i               2    5[COMMON] int 
  2921 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  2922 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2932 ;;      Params:         0       0       0       0       0
  2933 ;;      Locals:         7       0       0       0       0
  2934 ;;      Temps:          1       0       0       0       0
  2935 ;;      Totals:         8       0       0       0       0
  2936 ;;Total ram usage:        8 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; Hardware stack levels required when called: 1
  2939 ;; This function calls:
  2940 ;;		_Lcd_SetBit
  2941 ;; This function is called by:
  2942 ;;		_Lcd_Print_String
  2943 ;;		_main
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947  0336                     _Lcd_Print_Char:	
  2948                           ;psect for function _Lcd_Print_Char
  2949                           
  2950                           
  2951                           ;incstack = 0
  2952                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2953                           ;Lcd_Print_Char@data stored from wreg
  2954  0336  00F4               	movwf	Lcd_Print_Char@data
  2955  0337                     l1246:
  2956                           
  2957                           ;./lcd.h: 80: void Lcd_Print_Char(char data);./lcd.h: 81: {;./lcd.h: 82:    char Lower_N
      +                          ibble,Upper_Nibble;;./lcd.h: 83:    Lower_Nibble = data&0x0F;
  2958  0337  0874               	movf	Lcd_Print_Char@data,w
  2959  0338  390F               	andlw	15
  2960  0339  00F1               	movwf	??_Lcd_Print_Char
  2961  033A  0871               	movf	??_Lcd_Print_Char,w
  2962  033B  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  2963                           
  2964                           ;./lcd.h: 84:    Upper_Nibble = data&0xF0;
  2965  033C  0874               	movf	Lcd_Print_Char@data,w
  2966  033D  39F0               	andlw	240
  2967  033E  00F1               	movwf	??_Lcd_Print_Char
  2968  033F  0871               	movf	??_Lcd_Print_Char,w
  2969  0340  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  2970  0341                     l1248:
  2971                           
  2972                           ;./lcd.h: 85:    RD2 = 1;
  2973  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2974  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2975  0343  1508               	bsf	8,2	;volatile
  2976  0344                     l1250:
  2977                           
  2978                           ;./lcd.h: 86:    Lcd_SetBit(Upper_Nibble>>4);
  2979  0344  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  2980  0345  00F1               	movwf	??_Lcd_Print_Char
  2981  0346  3004               	movlw	4
  2982  0347                     u825:
  2983  0347  1003               	clrc
  2984  0348  0CF1               	rrf	??_Lcd_Print_Char,f
  2985  0349  3EFF               	addlw	-1
  2986  034A  1D03               	skipz
  2987  034B  2B47               	goto	u825
  2988  034C  0871               	movf	??_Lcd_Print_Char,w
  2989  034D  120A  118A  20AF  120A  118A  	fcall	_Lcd_SetBit
  2990  0352                     l1252:
  2991                           
  2992                           ;./lcd.h: 87:    RD3 = 1;
  2993  0352  1283               	bcf	3,5	;RP0=0, select bank0
  2994  0353  1303               	bcf	3,6	;RP1=0, select bank0
  2995  0354  1588               	bsf	8,3	;volatile
  2996  0355                     l1254:
  2997                           
  2998                           ;./lcd.h: 88:    for(int i=2130483; i<=0; i--) __nop();
  2999  0355  3033               	movlw	51
  3000  0356  00F5               	movwf	Lcd_Print_Char@i
  3001  0357  3082               	movlw	130
  3002  0358  00F6               	movwf	Lcd_Print_Char@i+1
  3003  0359                     l85:
  3004  0359  0000               	nop
  3005  035A                     l1260:
  3006  035A  30FF               	movlw	255
  3007  035B  07F5               	addwf	Lcd_Print_Char@i,f
  3008  035C  1803               	skipnc
  3009  035D  0AF6               	incf	Lcd_Print_Char@i+1,f
  3010  035E  30FF               	movlw	255
  3011  035F  07F6               	addwf	Lcd_Print_Char@i+1,f
  3012  0360                     l1262:
  3013  0360  0876               	movf	Lcd_Print_Char@i+1,w
  3014  0361  3A80               	xorlw	128
  3015  0362  00FF               	movwf	btemp+1
  3016  0363  3080               	movlw	128
  3017  0364  027F               	subwf	btemp+1,w
  3018  0365  1D03               	skipz
  3019  0366  2B69               	goto	u835
  3020  0367  3001               	movlw	1
  3021  0368  0275               	subwf	Lcd_Print_Char@i,w
  3022  0369                     u835:
  3023  0369  1C03               	skipc
  3024  036A  2B6C               	goto	u831
  3025  036B  2B6D               	goto	u830
  3026  036C                     u831:
  3027  036C  2B59               	goto	l85
  3028  036D                     u830:
  3029  036D                     l86:
  3030                           
  3031                           ;./lcd.h: 89:    RD3 = 0;
  3032  036D  1283               	bcf	3,5	;RP0=0, select bank0
  3033  036E  1303               	bcf	3,6	;RP1=0, select bank0
  3034  036F  1188               	bcf	8,3	;volatile
  3035  0370                     l1264:
  3036                           
  3037                           ;./lcd.h: 90:    Lcd_SetBit(Lower_Nibble);
  3038  0370  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  3039  0371  120A  118A  20AF  120A  118A  	fcall	_Lcd_SetBit
  3040  0376                     l1266:
  3041                           
  3042                           ;./lcd.h: 91:    RD3 = 1;
  3043  0376  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0377  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0378  1588               	bsf	8,3	;volatile
  3046  0379                     l1268:
  3047                           
  3048                           ;./lcd.h: 92:    for(int i=2130483; i<=0; i--) __nop();
  3049  0379  3033               	movlw	51
  3050  037A  00F7               	movwf	Lcd_Print_Char@i_77
  3051  037B  3082               	movlw	130
  3052  037C  00F8               	movwf	Lcd_Print_Char@i_77+1
  3053  037D                     l87:
  3054  037D  0000               	nop
  3055  037E                     l1274:
  3056  037E  30FF               	movlw	255
  3057  037F  07F7               	addwf	Lcd_Print_Char@i_77,f
  3058  0380  1803               	skipnc
  3059  0381  0AF8               	incf	Lcd_Print_Char@i_77+1,f
  3060  0382  30FF               	movlw	255
  3061  0383  07F8               	addwf	Lcd_Print_Char@i_77+1,f
  3062  0384                     l1276:
  3063  0384  0878               	movf	Lcd_Print_Char@i_77+1,w
  3064  0385  3A80               	xorlw	128
  3065  0386  00FF               	movwf	btemp+1
  3066  0387  3080               	movlw	128
  3067  0388  027F               	subwf	btemp+1,w
  3068  0389  1D03               	skipz
  3069  038A  2B8D               	goto	u845
  3070  038B  3001               	movlw	1
  3071  038C  0277               	subwf	Lcd_Print_Char@i_77,w
  3072  038D                     u845:
  3073  038D  1C03               	skipc
  3074  038E  2B90               	goto	u841
  3075  038F  2B91               	goto	u840
  3076  0390                     u841:
  3077  0390  2B7D               	goto	l87
  3078  0391                     u840:
  3079  0391                     l88:
  3080                           
  3081                           ;./lcd.h: 93:    RD3 = 0;
  3082  0391  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0392  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0393  1188               	bcf	8,3	;volatile
  3085  0394                     l89:
  3086  0394  0008               	return
  3087  0395                     __end_of_Lcd_Print_Char:
  3088                           
  3089                           	psect	text17
  3090  0068                     __ptext17:	
  3091 ;; *************** function _Lcd_Clear *****************
  3092 ;; Defined at:
  3093 ;;		line 35 in file "./lcd.h"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;		None
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  2   70[None  ] int 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, pclath, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3107 ;;      Params:         0       0       0       0       0
  3108 ;;      Locals:         0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0
  3110 ;;      Totals:         0       0       0       0       0
  3111 ;;Total ram usage:        0 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; Hardware stack levels required when called: 2
  3114 ;; This function calls:
  3115 ;;		_Lcd_Cmd
  3116 ;; This function is called by:
  3117 ;;		_main
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121  0068                     _Lcd_Clear:	
  3122                           ;psect for function _Lcd_Clear
  3123                           
  3124  0068                     l1352:	
  3125                           ;incstack = 0
  3126                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3127                           
  3128                           
  3129                           ;./lcd.h: 37:     Lcd_Cmd(0);
  3130  0068  3000               	movlw	0
  3131  0069  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  3132                           
  3133                           ;./lcd.h: 38:     Lcd_Cmd(1);
  3134  006E  3001               	movlw	1
  3135  006F  120A  118A  2095  120A  118A  	fcall	_Lcd_Cmd
  3136  0074                     l71:
  3137  0074  0008               	return
  3138  0075                     __end_of_Lcd_Clear:
  3139                           
  3140                           	psect	text18
  3141  0095                     __ptext18:	
  3142 ;; *************** function _Lcd_Cmd *****************
  3143 ;; Defined at:
  3144 ;;		line 26 in file "./lcd.h"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  a               1    wreg     unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  a               1    3[COMMON] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0, pclath, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3158 ;;      Params:         0       0       0       0       0
  3159 ;;      Locals:         1       0       0       0       0
  3160 ;;      Temps:          2       0       0       0       0
  3161 ;;      Totals:         3       0       0       0       0
  3162 ;;Total ram usage:        3 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; Hardware stack levels required when called: 1
  3165 ;; This function calls:
  3166 ;;		_Lcd_SetBit
  3167 ;; This function is called by:
  3168 ;;		_Lcd_Clear
  3169 ;;		_Lcd_Set_Cursor
  3170 ;;		_Lcd_Start
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174  0095                     _Lcd_Cmd:	
  3175                           ;psect for function _Lcd_Cmd
  3176                           
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3180                           ;Lcd_Cmd@a stored from wreg
  3181  0095  00F3               	movwf	Lcd_Cmd@a
  3182  0096                     l1236:
  3183                           
  3184                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:     RD2 = 0;
  3185  0096  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0097  1303               	bcf	3,6	;RP1=0, select bank0
  3187  0098  1108               	bcf	8,2	;volatile
  3188  0099                     l1238:
  3189                           
  3190                           ;./lcd.h: 29:     Lcd_SetBit(a);
  3191  0099  0873               	movf	Lcd_Cmd@a,w
  3192  009A  120A  118A  20AF  120A  118A  	fcall	_Lcd_SetBit
  3193  009F                     l1240:
  3194                           
  3195                           ;./lcd.h: 30:     RD3 = 1;
  3196  009F  1283               	bcf	3,5	;RP0=0, select bank0
  3197  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  3198  00A1  1588               	bsf	8,3	;volatile
  3199  00A2                     l1242:
  3200                           
  3201                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(20000000/4000.0)));
  3202  00A2  301A               	movlw	26
  3203  00A3  00F2               	movwf	??_Lcd_Cmd+1
  3204  00A4  30F8               	movlw	248
  3205  00A5  00F1               	movwf	??_Lcd_Cmd
  3206  00A6                     u1097:
  3207  00A6  0BF1               	decfsz	??_Lcd_Cmd,f
  3208  00A7  28A6               	goto	u1097
  3209  00A8  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3210  00A9  28A6               	goto	u1097
  3211  00AA  0000               	nop
  3212  00AB                     l1244:
  3213                           
  3214                           ;./lcd.h: 32:         RD3 = 0;
  3215  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  3216  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  3217  00AD  1188               	bcf	8,3	;volatile
  3218  00AE                     l68:
  3219  00AE  0008               	return
  3220  00AF                     __end_of_Lcd_Cmd:
  3221                           
  3222                           	psect	text19
  3223  00AF                     __ptext19:	
  3224 ;; *************** function _Lcd_SetBit *****************
  3225 ;; Defined at:
  3226 ;;		line 3 in file "./lcd.h"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  data_bit        1    wreg     unsigned char 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  data_bit        1    0[COMMON] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3240 ;;      Params:         0       0       0       0       0
  3241 ;;      Locals:         1       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0
  3243 ;;      Totals:         1       0       0       0       0
  3244 ;;Total ram usage:        1 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_Lcd_Cmd
  3250 ;;		_Lcd_Start
  3251 ;;		_Lcd_Print_Char
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255  00AF                     _Lcd_SetBit:	
  3256                           ;psect for function _Lcd_SetBit
  3257                           
  3258                           
  3259                           ;incstack = 0
  3260                           ; Regs used in _Lcd_SetBit: [wreg]
  3261                           ;Lcd_SetBit@data_bit stored from wreg
  3262  00AF  00F0               	movwf	Lcd_SetBit@data_bit
  3263  00B0                     l1124:
  3264                           
  3265                           ;./lcd.h: 3: void Lcd_SetBit(char data_bit);./lcd.h: 4: {;./lcd.h: 5:     if(data_bit& 1
      +                          )
  3266  00B0  1C70               	btfss	Lcd_SetBit@data_bit,0
  3267  00B1  28B3               	goto	u531
  3268  00B2  28B4               	goto	u530
  3269  00B3                     u531:
  3270  00B3  28B8               	goto	l57
  3271  00B4                     u530:
  3272  00B4                     l1126:
  3273                           
  3274                           ;./lcd.h: 6:         RD4 = 1;
  3275  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  3276  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  3277  00B6  1608               	bsf	8,4	;volatile
  3278  00B7  28BB               	goto	l58
  3279  00B8                     l57:	
  3280                           ;./lcd.h: 7:     else
  3281                           
  3282                           
  3283                           ;./lcd.h: 8:         RD4 = 0;
  3284  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  3285  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  3286  00BA  1208               	bcf	8,4	;volatile
  3287  00BB                     l58:
  3288                           
  3289                           ;./lcd.h: 10:     if(data_bit& 2)
  3290  00BB  1CF0               	btfss	Lcd_SetBit@data_bit,1
  3291  00BC  28BE               	goto	u541
  3292  00BD  28BF               	goto	u540
  3293  00BE                     u541:
  3294  00BE  28C1               	goto	l59
  3295  00BF                     u540:
  3296  00BF                     l1128:
  3297                           
  3298                           ;./lcd.h: 11:         RD5 = 1;
  3299  00BF  1688               	bsf	8,5	;volatile
  3300  00C0  28C2               	goto	l60
  3301  00C1                     l59:	
  3302                           ;./lcd.h: 12:     else
  3303                           
  3304                           
  3305                           ;./lcd.h: 13:         RD5 = 0;
  3306  00C1  1288               	bcf	8,5	;volatile
  3307  00C2                     l60:
  3308                           
  3309                           ;./lcd.h: 15:     if(data_bit& 4)
  3310  00C2  1D70               	btfss	Lcd_SetBit@data_bit,2
  3311  00C3  28C5               	goto	u551
  3312  00C4  28C6               	goto	u550
  3313  00C5                     u551:
  3314  00C5  28C8               	goto	l61
  3315  00C6                     u550:
  3316  00C6                     l1130:
  3317                           
  3318                           ;./lcd.h: 16:         RD6 = 1;
  3319  00C6  1708               	bsf	8,6	;volatile
  3320  00C7  28C9               	goto	l62
  3321  00C8                     l61:	
  3322                           ;./lcd.h: 17:     else
  3323                           
  3324                           
  3325                           ;./lcd.h: 18:         RD6 = 0;
  3326  00C8  1308               	bcf	8,6	;volatile
  3327  00C9                     l62:
  3328                           
  3329                           ;./lcd.h: 20:     if(data_bit& 8)
  3330  00C9  1DF0               	btfss	Lcd_SetBit@data_bit,3
  3331  00CA  28CC               	goto	u561
  3332  00CB  28CD               	goto	u560
  3333  00CC                     u561:
  3334  00CC  28CF               	goto	l63
  3335  00CD                     u560:
  3336  00CD                     l1132:
  3337                           
  3338                           ;./lcd.h: 21:         RD7 = 1;
  3339  00CD  1788               	bsf	8,7	;volatile
  3340  00CE  28D0               	goto	l65
  3341  00CF                     l63:	
  3342                           ;./lcd.h: 22:     else
  3343                           
  3344                           
  3345                           ;./lcd.h: 23:         RD7 = 0;
  3346  00CF  1388               	bcf	8,7	;volatile
  3347  00D0                     l65:
  3348  00D0  0008               	return
  3349  00D1                     __end_of_Lcd_SetBit:
  3350                           
  3351                           	psect	text20
  3352  0235                     __ptext20:	
  3353 ;; *************** function _I2C_Initialize *****************
  3354 ;; Defined at:
  3355 ;;		line 4 in file "./PIC16F877a_I2C.h"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  feq_K           4   13[BANK0 ] const unsigned long 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0, pclath, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3369 ;;      Params:         0       4       0       0       0
  3370 ;;      Locals:         0       0       0       0       0
  3371 ;;      Temps:          0       4       0       0       0
  3372 ;;      Totals:         0       8       0       0       0
  3373 ;;Total ram usage:        8 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 1
  3376 ;; This function calls:
  3377 ;;		___lldiv
  3378 ;;		___lmul
  3379 ;; This function is called by:
  3380 ;;		_main
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384  0235                     _I2C_Initialize:	
  3385                           ;psect for function _I2C_Initialize
  3386                           
  3387  0235                     l1416:	
  3388                           ;incstack = 0
  3389                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3390                           
  3391                           
  3392                           ;./PIC16F877a_I2C.h: 4: void I2C_Initialize(const unsigned long feq_K);./PIC16F877a_I2C.
      +                          h: 5: {;./PIC16F877a_I2C.h: 6:   TRISC3 = 1; TRISC4 = 1;
  3393  0235  1683               	bsf	3,5	;RP0=1, select bank1
  3394  0236  1303               	bcf	3,6	;RP1=0, select bank1
  3395  0237  1587               	bsf	7,3	;volatile
  3396  0238  1607               	bsf	7,4	;volatile
  3397  0239                     l1418:
  3398                           
  3399                           ;./PIC16F877a_I2C.h: 8:   SSPCON = 0b00101000;
  3400  0239  3028               	movlw	40
  3401  023A  1283               	bcf	3,5	;RP0=0, select bank0
  3402  023B  1303               	bcf	3,6	;RP1=0, select bank0
  3403  023C  0094               	movwf	20	;volatile
  3404  023D                     l1420:
  3405                           
  3406                           ;./PIC16F877a_I2C.h: 9:   SSPCON2 = 0b00000000;
  3407  023D  1683               	bsf	3,5	;RP0=1, select bank1
  3408  023E  1303               	bcf	3,6	;RP1=0, select bank1
  3409  023F  0191               	clrf	17	;volatile
  3410  0240                     l1422:
  3411                           
  3412                           ;./PIC16F877a_I2C.h: 11:   SSPADD = (20000000/(4*feq_K*100))-1;
  3413  0240  1283               	bcf	3,5	;RP0=0, select bank0
  3414  0241  1303               	bcf	3,6	;RP1=0, select bank0
  3415  0242  082D               	movf	I2C_Initialize@feq_K,w
  3416  0243  00B1               	movwf	??_I2C_Initialize
  3417  0244  082E               	movf	I2C_Initialize@feq_K+1,w
  3418  0245  00B2               	movwf	??_I2C_Initialize+1
  3419  0246  082F               	movf	I2C_Initialize@feq_K+2,w
  3420  0247  00B3               	movwf	??_I2C_Initialize+2
  3421  0248  0830               	movf	I2C_Initialize@feq_K+3,w
  3422  0249  00B4               	movwf	??_I2C_Initialize+3
  3423  024A  3002               	movlw	2
  3424  024B                     u1045:
  3425  024B  1003               	clrc
  3426  024C  0DB1               	rlf	??_I2C_Initialize,f
  3427  024D  0DB2               	rlf	??_I2C_Initialize+1,f
  3428  024E  0DB3               	rlf	??_I2C_Initialize+2,f
  3429  024F  0DB4               	rlf	??_I2C_Initialize+3,f
  3430  0250                     u1040:
  3431  0250  3EFF               	addlw	-1
  3432  0251  1D03               	skipz
  3433  0252  2A4B               	goto	u1045
  3434  0253  0834               	movf	??_I2C_Initialize+3,w
  3435  0254  00F3               	movwf	___lmul@multiplier+3
  3436  0255  0833               	movf	??_I2C_Initialize+2,w
  3437  0256  00F2               	movwf	___lmul@multiplier+2
  3438  0257  0832               	movf	??_I2C_Initialize+1,w
  3439  0258  00F1               	movwf	___lmul@multiplier+1
  3440  0259  0831               	movf	??_I2C_Initialize,w
  3441  025A  00F0               	movwf	___lmul@multiplier
  3442  025B  3000               	movlw	0
  3443  025C  00F7               	movwf	___lmul@multiplicand+3
  3444  025D  3000               	movlw	0
  3445  025E  00F6               	movwf	___lmul@multiplicand+2
  3446  025F  3000               	movlw	0
  3447  0260  00F5               	movwf	___lmul@multiplicand+1
  3448  0261  3064               	movlw	100
  3449  0262  00F4               	movwf	___lmul@multiplicand
  3450  0263  120A  118A  219D  120A  118A  	fcall	___lmul
  3451  0268  0873               	movf	?___lmul+3,w
  3452  0269  1283               	bcf	3,5	;RP0=0, select bank0
  3453  026A  1303               	bcf	3,6	;RP1=0, select bank0
  3454  026B  00A3               	movwf	___lldiv@divisor+3
  3455  026C  0872               	movf	?___lmul+2,w
  3456  026D  00A2               	movwf	___lldiv@divisor+2
  3457  026E  0871               	movf	?___lmul+1,w
  3458  026F  00A1               	movwf	___lldiv@divisor+1
  3459  0270  0870               	movf	?___lmul,w
  3460  0271  00A0               	movwf	___lldiv@divisor
  3461  0272  3001               	movlw	1
  3462  0273  00A7               	movwf	___lldiv@dividend+3
  3463  0274  3031               	movlw	49
  3464  0275  00A6               	movwf	___lldiv@dividend+2
  3465  0276  302D               	movlw	45
  3466  0277  00A5               	movwf	___lldiv@dividend+1
  3467  0278  3000               	movlw	0
  3468  0279  00A4               	movwf	___lldiv@dividend
  3469  027A  120A  118A  23FC  120A  118A  	fcall	___lldiv
  3470  027F  1283               	bcf	3,5	;RP0=0, select bank0
  3471  0280  1303               	bcf	3,6	;RP1=0, select bank0
  3472  0281  0820               	movf	?___lldiv,w
  3473  0282  3EFF               	addlw	255
  3474  0283  1683               	bsf	3,5	;RP0=1, select bank1
  3475  0284  1303               	bcf	3,6	;RP1=0, select bank1
  3476  0285  0093               	movwf	19	;volatile
  3477  0286                     l1424:
  3478                           
  3479                           ;./PIC16F877a_I2C.h: 12:   SSPSTAT = 0b00000000;
  3480  0286  0194               	clrf	20	;volatile
  3481  0287                     l98:
  3482  0287  0008               	return
  3483  0288                     __end_of_I2C_Initialize:
  3484                           
  3485                           	psect	text21
  3486  019D                     __ptext21:	
  3487 ;; *************** function ___lmul *****************
  3488 ;; Defined at:
  3489 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  multiplier      4    0[COMMON] unsigned long 
  3492 ;;  multiplicand    4    4[COMMON] unsigned long 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  product         4    9[COMMON] unsigned long 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  4    0[COMMON] unsigned long 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3504 ;;      Params:         8       0       0       0       0
  3505 ;;      Locals:         4       0       0       0       0
  3506 ;;      Temps:          1       0       0       0       0
  3507 ;;      Totals:        13       0       0       0       0
  3508 ;;Total ram usage:       13 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_I2C_Initialize
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517  019D                     ___lmul:	
  3518                           ;psect for function ___lmul
  3519                           
  3520  019D                     l1314:	
  3521                           ;incstack = 0
  3522                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3523                           
  3524  019D  3000               	movlw	0
  3525  019E  00FC               	movwf	___lmul@product+3
  3526  019F  3000               	movlw	0
  3527  01A0  00FB               	movwf	___lmul@product+2
  3528  01A1  3000               	movlw	0
  3529  01A2  00FA               	movwf	___lmul@product+1
  3530  01A3  3000               	movlw	0
  3531  01A4  00F9               	movwf	___lmul@product
  3532  01A5                     l1316:
  3533  01A5  1C70               	btfss	___lmul@multiplier,0
  3534  01A6  29A8               	goto	u871
  3535  01A7  29A9               	goto	u870
  3536  01A8                     u871:
  3537  01A8  29C0               	goto	l1320
  3538  01A9                     u870:
  3539  01A9                     l1318:
  3540  01A9  0874               	movf	___lmul@multiplicand,w
  3541  01AA  07F9               	addwf	___lmul@product,f
  3542  01AB  0875               	movf	___lmul@multiplicand+1,w
  3543  01AC  1103               	clrz
  3544  01AD  1803               	skipnc
  3545  01AE  3E01               	addlw	1
  3546  01AF  1903               	skipnz
  3547  01B0  29B2               	goto	u881
  3548  01B1  07FA               	addwf	___lmul@product+1,f
  3549  01B2                     u881:
  3550  01B2  0876               	movf	___lmul@multiplicand+2,w
  3551  01B3  1103               	clrz
  3552  01B4  1803               	skipnc
  3553  01B5  3E01               	addlw	1
  3554  01B6  1903               	skipnz
  3555  01B7  29B9               	goto	u882
  3556  01B8  07FB               	addwf	___lmul@product+2,f
  3557  01B9                     u882:
  3558  01B9  0877               	movf	___lmul@multiplicand+3,w
  3559  01BA  1103               	clrz
  3560  01BB  1803               	skipnc
  3561  01BC  3E01               	addlw	1
  3562  01BD  1903               	skipnz
  3563  01BE  29C0               	goto	u883
  3564  01BF  07FC               	addwf	___lmul@product+3,f
  3565  01C0                     u883:
  3566  01C0                     l1320:
  3567  01C0  3001               	movlw	1
  3568  01C1  00F8               	movwf	??___lmul
  3569  01C2                     u895:
  3570  01C2  1003               	clrc
  3571  01C3  0DF4               	rlf	___lmul@multiplicand,f
  3572  01C4  0DF5               	rlf	___lmul@multiplicand+1,f
  3573  01C5  0DF6               	rlf	___lmul@multiplicand+2,f
  3574  01C6  0DF7               	rlf	___lmul@multiplicand+3,f
  3575  01C7  0BF8               	decfsz	??___lmul,f
  3576  01C8  29C2               	goto	u895
  3577  01C9                     l1322:
  3578  01C9  3001               	movlw	1
  3579  01CA                     u905:
  3580  01CA  1003               	clrc
  3581  01CB  0CF3               	rrf	___lmul@multiplier+3,f
  3582  01CC  0CF2               	rrf	___lmul@multiplier+2,f
  3583  01CD  0CF1               	rrf	___lmul@multiplier+1,f
  3584  01CE  0CF0               	rrf	___lmul@multiplier,f
  3585  01CF  3EFF               	addlw	-1
  3586  01D0  1D03               	skipz
  3587  01D1  29CA               	goto	u905
  3588  01D2  0873               	movf	___lmul@multiplier+3,w
  3589  01D3  0472               	iorwf	___lmul@multiplier+2,w
  3590  01D4  0471               	iorwf	___lmul@multiplier+1,w
  3591  01D5  0470               	iorwf	___lmul@multiplier,w
  3592  01D6  1D03               	skipz
  3593  01D7  29D9               	goto	u911
  3594  01D8  29DA               	goto	u910
  3595  01D9                     u911:
  3596  01D9  29A5               	goto	l1316
  3597  01DA                     u910:
  3598  01DA                     l1324:
  3599  01DA  087C               	movf	___lmul@product+3,w
  3600  01DB  00F3               	movwf	?___lmul+3
  3601  01DC  087B               	movf	___lmul@product+2,w
  3602  01DD  00F2               	movwf	?___lmul+2
  3603  01DE  087A               	movf	___lmul@product+1,w
  3604  01DF  00F1               	movwf	?___lmul+1
  3605  01E0  0879               	movf	___lmul@product,w
  3606  01E1  00F0               	movwf	?___lmul
  3607  01E2                     l236:
  3608  01E2  0008               	return
  3609  01E3                     __end_of___lmul:
  3610                           
  3611                           	psect	text22
  3612  03FC                     __ptext22:	
  3613 ;; *************** function ___lldiv *****************
  3614 ;; Defined at:
  3615 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  divisor         4    0[BANK0 ] unsigned long 
  3618 ;;  dividend        4    4[BANK0 ] unsigned long 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  quotient        4    8[BANK0 ] unsigned long 
  3621 ;;  counter         1   12[BANK0 ] unsigned char 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  4    0[BANK0 ] unsigned long 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2, status,0
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3631 ;;      Params:         0       8       0       0       0
  3632 ;;      Locals:         0       5       0       0       0
  3633 ;;      Temps:          1       0       0       0       0
  3634 ;;      Totals:         1      13       0       0       0
  3635 ;;Total ram usage:       14 bytes
  3636 ;; Hardware stack levels used: 1
  3637 ;; This function calls:
  3638 ;;		Nothing
  3639 ;; This function is called by:
  3640 ;;		_I2C_Initialize
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644  03FC                     ___lldiv:	
  3645                           ;psect for function ___lldiv
  3646                           
  3647  03FC                     l1328:	
  3648                           ;incstack = 0
  3649                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3650                           
  3651  03FC  3000               	movlw	0
  3652  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  3653  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  3654  03FF  00AB               	movwf	___lldiv@quotient+3
  3655  0400  3000               	movlw	0
  3656  0401  00AA               	movwf	___lldiv@quotient+2
  3657  0402  3000               	movlw	0
  3658  0403  00A9               	movwf	___lldiv@quotient+1
  3659  0404  3000               	movlw	0
  3660  0405  00A8               	movwf	___lldiv@quotient
  3661  0406  0823               	movf	___lldiv@divisor+3,w
  3662  0407  0422               	iorwf	___lldiv@divisor+2,w
  3663  0408  0421               	iorwf	___lldiv@divisor+1,w
  3664  0409  0420               	iorwf	___lldiv@divisor,w
  3665  040A  1903               	skipnz
  3666  040B  2C0D               	goto	u921
  3667  040C  2C0E               	goto	u920
  3668  040D                     u921:
  3669  040D  2C5B               	goto	l1348
  3670  040E                     u920:
  3671  040E                     l1330:
  3672  040E  01AC               	clrf	___lldiv@counter
  3673  040F  0AAC               	incf	___lldiv@counter,f
  3674  0410  2C1E               	goto	l1334
  3675  0411                     l1332:
  3676  0411  3001               	movlw	1
  3677  0412  00FD               	movwf	??___lldiv
  3678  0413                     u935:
  3679  0413  1003               	clrc
  3680  0414  0DA0               	rlf	___lldiv@divisor,f
  3681  0415  0DA1               	rlf	___lldiv@divisor+1,f
  3682  0416  0DA2               	rlf	___lldiv@divisor+2,f
  3683  0417  0DA3               	rlf	___lldiv@divisor+3,f
  3684  0418  0BFD               	decfsz	??___lldiv,f
  3685  0419  2C13               	goto	u935
  3686  041A  3001               	movlw	1
  3687  041B  00FD               	movwf	??___lldiv
  3688  041C  087D               	movf	??___lldiv,w
  3689  041D  07AC               	addwf	___lldiv@counter,f
  3690  041E                     l1334:
  3691  041E  1FA3               	btfss	___lldiv@divisor+3,7
  3692  041F  2C21               	goto	u941
  3693  0420  2C22               	goto	u940
  3694  0421                     u941:
  3695  0421  2C11               	goto	l1332
  3696  0422                     u940:
  3697  0422                     l1336:
  3698  0422  3001               	movlw	1
  3699  0423  00FD               	movwf	??___lldiv
  3700  0424                     u955:
  3701  0424  1003               	clrc
  3702  0425  0DA8               	rlf	___lldiv@quotient,f
  3703  0426  0DA9               	rlf	___lldiv@quotient+1,f
  3704  0427  0DAA               	rlf	___lldiv@quotient+2,f
  3705  0428  0DAB               	rlf	___lldiv@quotient+3,f
  3706  0429  0BFD               	decfsz	??___lldiv,f
  3707  042A  2C24               	goto	u955
  3708  042B                     l1338:
  3709  042B  0823               	movf	___lldiv@divisor+3,w
  3710  042C  0227               	subwf	___lldiv@dividend+3,w
  3711  042D  1D03               	skipz
  3712  042E  2C39               	goto	u965
  3713  042F  0822               	movf	___lldiv@divisor+2,w
  3714  0430  0226               	subwf	___lldiv@dividend+2,w
  3715  0431  1D03               	skipz
  3716  0432  2C39               	goto	u965
  3717  0433  0821               	movf	___lldiv@divisor+1,w
  3718  0434  0225               	subwf	___lldiv@dividend+1,w
  3719  0435  1D03               	skipz
  3720  0436  2C39               	goto	u965
  3721  0437  0820               	movf	___lldiv@divisor,w
  3722  0438  0224               	subwf	___lldiv@dividend,w
  3723  0439                     u965:
  3724  0439  1C03               	skipc
  3725  043A  2C3C               	goto	u961
  3726  043B  2C3D               	goto	u960
  3727  043C                     u961:
  3728  043C  2C4C               	goto	l1344
  3729  043D                     u960:
  3730  043D                     l1340:
  3731  043D  0820               	movf	___lldiv@divisor,w
  3732  043E  02A4               	subwf	___lldiv@dividend,f
  3733  043F  0821               	movf	___lldiv@divisor+1,w
  3734  0440  1C03               	skipc
  3735  0441  0F21               	incfsz	___lldiv@divisor+1,w
  3736  0442  02A5               	subwf	___lldiv@dividend+1,f
  3737  0443  0822               	movf	___lldiv@divisor+2,w
  3738  0444  1C03               	skipc
  3739  0445  0F22               	incfsz	___lldiv@divisor+2,w
  3740  0446  02A6               	subwf	___lldiv@dividend+2,f
  3741  0447  0823               	movf	___lldiv@divisor+3,w
  3742  0448  1C03               	skipc
  3743  0449  0F23               	incfsz	___lldiv@divisor+3,w
  3744  044A  02A7               	subwf	___lldiv@dividend+3,f
  3745  044B                     l1342:
  3746  044B  1428               	bsf	___lldiv@quotient,0
  3747  044C                     l1344:
  3748  044C  3001               	movlw	1
  3749  044D                     u975:
  3750  044D  1003               	clrc
  3751  044E  0CA3               	rrf	___lldiv@divisor+3,f
  3752  044F  0CA2               	rrf	___lldiv@divisor+2,f
  3753  0450  0CA1               	rrf	___lldiv@divisor+1,f
  3754  0451  0CA0               	rrf	___lldiv@divisor,f
  3755  0452  3EFF               	addlw	-1
  3756  0453  1D03               	skipz
  3757  0454  2C4D               	goto	u975
  3758  0455                     l1346:
  3759  0455  3001               	movlw	1
  3760  0456  02AC               	subwf	___lldiv@counter,f
  3761  0457  1D03               	btfss	3,2
  3762  0458  2C5A               	goto	u981
  3763  0459  2C5B               	goto	u980
  3764  045A                     u981:
  3765  045A  2C22               	goto	l1336
  3766  045B                     u980:
  3767  045B                     l1348:
  3768  045B  082B               	movf	___lldiv@quotient+3,w
  3769  045C  00A3               	movwf	?___lldiv+3
  3770  045D  082A               	movf	___lldiv@quotient+2,w
  3771  045E  00A2               	movwf	?___lldiv+2
  3772  045F  0829               	movf	___lldiv@quotient+1,w
  3773  0460  00A1               	movwf	?___lldiv+1
  3774  0461  0828               	movf	___lldiv@quotient,w
  3775  0462  00A0               	movwf	?___lldiv
  3776  0463                     l258:
  3777  0463  0008               	return
  3778  0464                     __end_of___lldiv:
  3779  007E                     btemp	set	126	;btemp
  3780  007E                     wtemp0	set	126
  3781                           
  3782                           	psect	idloc
  3783                           
  3784                           ;Config register IDLOC0 @ 0x2000
  3785                           ;	unspecified, using default values
  3786  2000                     	org	8192
  3787  2000  3FFF               	dw	16383
  3788                           
  3789                           ;Config register IDLOC1 @ 0x2001
  3790                           ;	unspecified, using default values
  3791  2001                     	org	8193
  3792  2001  3FFF               	dw	16383
  3793                           
  3794                           ;Config register IDLOC2 @ 0x2002
  3795                           ;	unspecified, using default values
  3796  2002                     	org	8194
  3797  2002  3FFF               	dw	16383
  3798                           
  3799                           ;Config register IDLOC3 @ 0x2003
  3800                           ;	unspecified, using default values
  3801  2003                     	org	8195
  3802  2003  3FFF               	dw	16383
  3803                           
  3804                           	psect	config
  3805                           
  3806                           ;Config register CONFIG @ 0x2007
  3807                           ;	Oscillator Selection bits
  3808                           ;	FOSC = HS, HS oscillator
  3809                           ;	Watchdog Timer Enable bit
  3810                           ;	WDTE = OFF, WDT disabled
  3811                           ;	Power-up Timer Enable bit
  3812                           ;	PWRTE = ON, PWRT enabled
  3813                           ;	Brown-out Reset Enable bit
  3814                           ;	BOREN = ON, BOR enabled
  3815                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3816                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3817                           ;	Data EEPROM Memory Code Protection bit
  3818                           ;	CPD = OFF, Data EEPROM code protection off
  3819                           ;	Flash Program Memory Write Enable bits
  3820                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3821                           ;	In-Circuit Debugger Mode bit
  3822                           ;	DEBUG = 0x1, unprogrammed default
  3823                           ;	Flash Program Memory Code Protection bit
  3824                           ;	CP = OFF, Code protection off
  3825  2007                     	org	8199
  3826  2007  3F72               	dw	16242

Data Sizes:
    Strings     46
    Constant    0
    Data        12
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      48
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[17]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _BCD_2_DEC->_I2C_Read
    _BCD_2_DEC->___wmul
    _Set_Time_Date->_DEC_2_BCD
    _I2C_Write->_DEC_2_BCD
    _DEC_2_BCD->___awdiv
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _I2C_Initialize->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->_I2C_Initialize
    _Update_Current_Date_Time->_I2C_Write
    _Set_Time_Date->_I2C_Write
    _I2C_Initialize->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   12097
                                             21 BANK0     15    15      0
                     _I2C_Initialize
                          _Lcd_Clear
                     _Lcd_Print_Char
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                      _Set_Time_Date
           _Update_Current_Date_Time
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _Update_Current_Date_Time                             0     0      0    2407
                          _BCD_2_DEC
                          _I2C_Begin
                            _I2C_End
                           _I2C_Read
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             6     4      2     653
                                              0 COMMON     6     4      2
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _BCD_2_DEC                                            4     2      2     744
                                              6 COMMON     4     2      2
                           _I2C_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Set_Time_Date                                        0     0      0    4234
                          _DEC_2_BCD
                          _I2C_Begin
                            _I2C_End
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2    1010
                                              0 BANK0      2     0      2
                          _DEC_2_BCD (ARG)
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_End                                              0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Begin                                            0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (3) _I2C_Hold                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DEC_2_BCD                                            4     2      2    3224
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            4     4      0     244
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     684
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     3     3      0     492
                                              9 COMMON     3     3      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       8     8      0     270
                                              1 COMMON     8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       8     4      4     656
                                             13 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialize
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_Char
     _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Start
     _Lcd_Cmd
     _Lcd_SetBit
   _Set_Time_Date
     _DEC_2_BCD
       ___awdiv
       ___awmod
     _I2C_Begin
       _I2C_Hold
     _I2C_End
       _I2C_Hold
     _I2C_Write
       _DEC_2_BCD (ARG)
       _I2C_Hold (ARG)
   _Update_Current_Date_Time
     _BCD_2_DEC
       _I2C_Read (ARG)
         _I2C_Hold
       ___wmul (ARG)
     _I2C_Begin
     _I2C_End
     _I2C_Read
     _I2C_Write
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      30       5       60.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Aug 02 17:28:04 2022

                               pc 0002                                l60 00C2                                l61 00C8  
                              l62 00C9                                l63 00CF                                l71 0074  
                              l65 00D0                                l57 00B8                                l58 00BB  
                              l82 02DC                                l59 00C1                                l68 00AE  
                              l85 0359                                l77 0234                                l86 036D  
                              l87 037D                                l95 00F5                                l88 0391  
                              l89 0394                                l98 0287                      ___awdiv@sign 0076  
                              fsr 0004               ___wmul@multiplicand 0072                               l110 0051  
                             l104 0081                               l113 005B                               l122 019C  
                             l107 0048                               l116 016C                               l125 0512  
                             l222 0102                               l119 013F                               l224 011A  
                             l128 05FE                               l236 01E2                               l258 0463  
                             l375 03FB                               l388 0335                               _RD2 0042  
                             _RD3 0043                               _RD4 0044                               _RD5 0045  
                             _RD6 0046                               _RD7 0047                               _PEN 048A  
                             u530 00B4                               u531 00B3                               u540 00BF  
                             u620 0116                               u541 00BE                               u621 0115  
                             u605 0103                               u550 00C6                               u710 03ED  
                             u630 039A                               u551 00C5                               u711 03EC  
                             u631 0399                               u615 010A                               u560 00CD  
                             u720 03F2                               u640 03A5                               u800 0327  
                             u561 00CC                               u721 03F1                               u705 03E1  
                             u641 03A4                               u801 0326                               u650 03B6  
                             u810 032C                               u730 02E2                               u570 007D  
                             u651 03B5                               u811 032B                               u731 02E1  
                             u571 007C                               u740 02ED                               u580 0081  
                             _SEN 0488                               u741 02EC                               u581 0080  
                             u910 01DA                               u830 036D                               u670 03C8  
                             u750 02F8                               u590 00FC                               u911 01D9  
                             u831 036C                               u671 03C7                               u751 02F7  
                             u591 00FB                               u920 040E                               u840 0391  
                             u921 040D                               u905 01CA                               u841 0390  
                             u825 0347                               u665 03BA                               u690 03D9  
                             u770 030A                               u850 0164                               u835 0369  
                             u691 03D8                               u771 0309                               u851 0160  
                             u940 0422                               u780 0314                               u941 0421  
                             u845 038D                               u685 03C9                               u781 0313  
                             u765 02FC                               u870 01A9                               u935 0413  
                             u871 01A8                               u695 03D5                               u960 043D  
                             u864 0167                               u961 043C                               u881 01B2  
                             u785 0310                               u882 01B9                               u955 0424  
                             u883 01C0                               u795 031B                               u980 045B  
                             u981 045A                               u965 0439                               u990 01E9  
                             u975 044D                               u895 01C2                               u991 01E8  
                 __end_of_I2C_End 0052                               _min 004C                               _sec 004E  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0076  
                            l1200 02DE                              l1130 00C6                              l1210 02F2  
                            l1202 02E2                              l1132 00CD                              l1124 00B0  
                            l1220 030A                              l1212 02F8                              l1204 02E7  
                            l1140 00F6                              l1300 0167                              l1126 00B4  
                            l1230 032C                              l1222 0314                              l1214 02FB  
                            l1206 02E9                              l1310 016D                              l1134 0075  
                            l1150 0116                              l1142 00F8                              l1302 0168  
                            l1320 01C0                              l1128 00BF                              l1240 009F  
                            l1400 02C4                              l1160 039F                              l1232 0331  
                            l1224 031A                              l1216 0302                              l1208 02ED  
                            l1136 0075                              l1144 00FC                              l1330 040E  
                            l1322 01C9                              l1314 019D                              l1242 00A2  
                            l1250 0344                              l1410 00D5                              l1402 02CA  
                            l1170 03B0                              l1162 03A1                              l1154 0395  
                            l1226 0321                              l1218 0306                              l1138 007D  
                            l1146 0109                              l1306 011B                              l1340 043D  
                            l1332 0411                              l1324 01DA                              l1316 01A5  
                            l1420 023D                              l1244 00AB                              l1236 0096  
                            l1260 035A                              l1252 0352                              l1412 00E2  
                            l1404 02D0                              l1180 03C8                              l1172 03B6  
                            l1164 03A5                              l1156 0396                              l1228 0327  
                            l1148 0110                              l1500 0793                              l1342 044B  
                            l1334 041E                              l1318 01A9                              l1422 0240  
                            l1238 0099                              l1262 0360                              l1254 0355  
                            l1246 0337                              l1414 00E8                              l1406 02D6  
                            l1182 03D9                              l1174 03B9                              l1190 03ED  
                            l1166 03AA                              l1158 039A                              l1510 07BA  
                            l1502 0799                              l1430 05FF                              l1344 044C  
                            l1336 0422                              l1328 03FC                              l1424 0286  
                            l1416 0235                              l1352 0068                              l1264 0370  
                            l1248 0341                              l1408 00D2                              l1360 01FF  
                            l1192 03F2                              l1184 03DF                              l1176 03C0  
                            l1168 03AE                              l1280 0045                              l1512 07C3  
                            l1504 07A2                              l1440 0620                              l1432 0602  
                            l1346 0455                              l1338 042B                              l1418 0239  
                            l1274 037E                              l1266 0376                              l1370 0228  
                            l1362 0205                              l1354 01E4                              l1194 03F7  
                            l1186 03E0                              l1178 03C4                              l1282 0049  
                            l1426 0464                              l1290 0140                              l1514 07C9  
                            l1506 07AB                              l1450 064B                              l1442 0628  
                            l1434 0607                              l1348 045B                              l1276 0384  
                            l1268 0379                              l1372 022E                              l1356 01E9  
                            l1364 020C                              l1188 03E7                              l1284 004E  
                            l1292 0145                              l1428 0513                              l1516 07D2  
                            l1508 07B1                              l1460 069E                              l1452 0650  
                            l1444 062E                              l1436 0616                              l1366 0212  
                            l1358 01FA                              l1390 029D                              l1374 0288  
                            l1198 02DD                              l1278 0040                              l1286 0052  
                            l1294 014D                              l1518 07DB                              l1470 06FD  
                            l1462 06B1                              l1454 0665                              l1446 0636  
                            l1438 061B                              l1368 0223                              l1392 02AC  
                            l1376 028E                              l1288 0057                              l1296 0156  
                            l1480 0743                              l1472 0710                              l1464 06C4  
                            l1456 0678                              l1448 063C                              l1394 02B2  
                            l1386 028E                              l1378 028E                              l1298 015B  
                            l1490 076A                              l1482 0749                              l1474 0723  
                            l1466 06D7                              l1458 068B                              l1396 02B8  
                            l1388 0294                              l1492 0773                              l1484 0752  
                            l1476 0736                              l1468 06EA                              l1398 02BE  
                            l1494 0779                              l1486 075B                              l1478 073B  
                            l1496 0782                              l1488 0761                              l1498 078B  
                            STR_1 001A                              STR_2 0009                              STR_3 0029  
                            STR_4 0030                              u1010 0212                              u1011 0211  
                            u1005 01F1                              u1030 00F5                              u1031 00F4  
                            u1040 0250                              u1025 021A                              u1045 024B  
                            u1057 0644                              u1067 07E3                              u1077 0298  
                            u1087 02A7                              u1097 00A6                              _RCEN 048B  
                            _date 0048                       main@month_0 0040                       main@month_1 0041  
                            _main 05FF                              _hour 004A                  __end_of_I2C_Hold 0082  
                __end_of_I2C_Read 016D                              _year 0044                              btemp 007E  
                            start 0000                Lcd_Print_Char@i_77 0077                Lcd_Print_Char@data 0074  
                 __end_of_Lcd_Cmd 00AF                        _Lcd_SetBit 00AF                             ?_main 0070  
                           _ACKEN 048C                             _ACKDT 048D                   __end_of___awdiv 03FC  
                 __end_of___awmod 0336                   __end_of___lldiv 0464                   ___awdiv@divisor 0070  
                 ___awdiv@counter 0075                             _TRISD 0088               ___lmul@multiplicand 0074  
               __end_of_BCD_2_DEC 0140                 __end_of_I2C_Begin 0049                             _month 0046  
               __end_of_I2C_Write 005C                             pclath 000A                 __end_of_DEC_2_BCD 019D  
                           status 0003                             wtemp0 007E                   __initialization 07EE  
                    __end_of_main 07EE                         ??_I2C_End 0070                            ??_main 0035  
                ___awdiv@dividend 0072                         ??_Lcd_Cmd 0071                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _SSPCON 0014  
                          _SSPBUF 0013                            ___lmul 019D                            ___wmul 00F6  
                       ??___awdiv 0074                         ??___awmod 0074                         ??___lldiv 007D  
                     ?_Lcd_SetBit 0070                  ___awdiv@quotient 0077                   ___awmod@divisor 0070  
                 ___awmod@counter 0075  __end_of_Update_Current_Date_Time 05FF                         ?_I2C_Hold 0070  
                       ?_I2C_Read 0070                   Lcd_Set_Cursor@a 0077                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0079                   Lcd_Set_Cursor@z 0078           __end_of__initialization 07FC  
               __end_of_Lcd_Clear 0075                 __end_of_Lcd_Start 02DD                    __pcstackCOMMON 0070  
                    __pidataBANK0 005C                    _Lcd_Set_Cursor 01E3                        ??_I2C_Hold 0070  
                      ??_I2C_Read 0072                  _Lcd_Print_String 00D1                    _Lcd_Print_Char 0336  
                      __pmaintext 05FF                           ?___lmul 0070                           ?___wmul 0070  
                         _I2C_End 0049                    ___lmul@product 0079                Lcd_SetBit@data_bit 0070  
          __end_of_Lcd_Set_Cursor 0235                  I2C_Read@incoming 0074          _Update_Current_Date_Time 0513  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0003  
                       _BCD_2_DEC 011B                   Lcd_Print_Char@i 0075                           _Lcd_Cmd 0095  
          __end_of_Lcd_Print_Char 0395                         _I2C_Begin 0040                         _I2C_Write 0052  
                       _DEC_2_BCD 016D                           ___awdiv 0395                           ___awmod 02DD  
                         ___lldiv 03FC                    _I2C_Initialize 0235                   ?_Lcd_Set_Cursor 0074  
                         __ptext1 0513                           __ptext2 0140                           __ptext3 011B  
                         __ptext4 00F6                           __ptext5 0464                           __ptext6 0052  
                         __ptext7 0049                           __ptext8 0040                           __ptext9 0075  
                ___awmod@dividend 0072              end_of_initialization 07FC                        ?_BCD_2_DEC 0076  
                      ?_I2C_Begin 0070                   ?_Lcd_Print_Char 0070                        ?_I2C_Write 0020  
                      ?_DEC_2_BCD 0079                   ___lldiv@divisor 0020                   ___lldiv@counter 002C  
                   _Set_Time_Date 0464            __end_of_I2C_Initialize 0288                      ??_Lcd_SetBit 0070  
                      main@date_0 003E                        main@date_1 003F                __end_of_Lcd_SetBit 00D1  
                      main@hour_0 003C                        main@hour_1 003D                        main@year_0 0042  
                      main@year_1 0043                    ?_Set_Time_Date 0070                         _Lcd_Clear 0068  
             BCD_2_DEC@to_convert 0076                   ?_I2C_Initialize 002D                         _Lcd_Start 0288  
                  __end_of___lmul 01E3                    __end_of___wmul 011B          __end_of_Lcd_Print_String 00F6  
             start_initialization 07EE                       ??_BCD_2_DEC 0078                       ??_I2C_Begin 0070  
               Lcd_Print_String@a 007B                 Lcd_Print_String@i 0079                       ??_I2C_Write 007D  
                     ??_DEC_2_BCD 007B                        ?_Lcd_Clear 0070                          ??___lmul 0078  
                        ??___wmul 0074                        init_fetch0 0082                        ?_Lcd_Start 0070  
                     __pdataBANK0 0044                          ?_I2C_End 0070        ??_Update_Current_Date_Time 007D  
      Lcd_Print_Char@Lower_Nibble 0072                         ___latbits 0002                     __pcstackBANK0 0020  
                        ?_Lcd_Cmd 0070                   ??_Set_Time_Date 007D                       I2C_Read@ack 0070  
                ??_Lcd_Set_Cursor 0075                          ?___awdiv 0070                          ?___awmod 0070  
                        ?___lldiv 0020                         __pstrings 0003                          _I2C_Hold 0075  
                        _I2C_Read 0140                  ??_Lcd_Print_Char 0071                    ___wmul@product 0074  
                        Lcd_Cmd@a 0073                       ??_Lcd_Clear 0074                       ??_Lcd_Start 0074  
                     __stringbase 0008                 ___wmul@multiplier 0070                         main@min_0 003A  
                       main@min_1 003B                         main@sec_0 0038                         main@sec_1 0039  
               ___lmul@multiplier 0070                  ??_I2C_Initialize 0031                     I2C_Write@data 0020  
              __end_of__stringtab 0009                 ?_Lcd_Print_String 0070                ??_Lcd_Print_String 0079  
                        __ptext10 016D                          __ptext11 02DD                          __ptext20 0235  
                        __ptext12 0395                          __ptext21 019D                          __ptext13 0288  
                        __ptext22 03FC                          __ptext14 01E3                          __ptext15 00D1  
                        __ptext16 0336                          __ptext17 0068                          __ptext18 0095  
                        __ptext19 00AF               I2C_Initialize@feq_K 002D        Lcd_Print_Char@Upper_Nibble 0073  
                        init_ram0 0086                  ___lldiv@dividend 0024                         stringcode 0003  
              Lcd_Set_Cursor@temp 007A                  ___lldiv@quotient 0028                          stringdir 0003  
                        stringtab 0003         ?_Update_Current_Date_Time 0070             __end_of_Set_Time_Date 0513  
             DEC_2_BCD@to_convert 0079  
